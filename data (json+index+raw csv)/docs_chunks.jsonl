{"chunk_id": "409219d07291a4c499bae1f836c63fe6_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/installing-simulink-real-time-software-updates.html", "title": "Install Simulink Real-Time Software Updates", "tags": ["R2020B"], "chunk_text": "install simulink real - time software updates the general procedure for updating simulink® real - time™ is : navigate to the mathworks® download page : navigate to the page for the simulink real - time software version that you want. download the software version to your development computer. install and integrate the new release software. after updating simulink real - time, to re - create your simulink real - time target settings : in the matlab® command window, type slrtexplorer. on the targets tree pane, select a target computer node. click the target configuration", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "409219d07291a4c499bae1f836c63fe6_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/installing-simulink-real-time-software-updates.html", "title": "Install Simulink Real-Time Software Updates", "tags": ["R2020B"], "chunk_text": "the matlab® command window, type slrtexplorer. on the targets tree pane, select a target computer node. click the target configuration tab. click change ip address and select the ip address and netmask for communication method between your development and target computer. for more information, see target computer settings. click ok. click the disconnected link, toggling it to connected. repeat steps 2 through 5 for each target computer. build each model that you want to execute. in the simulink editor, on the real - time tab, click run on target. target computer settings to run a sim", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "409219d07291a4c499bae1f836c63fe6_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/installing-simulink-real-time-software-updates.html", "title": "Install Simulink Real-Time Software Updates", "tags": ["R2020B"], "chunk_text": "that you want to execute. in the simulink editor, on the real - time tab, click run on target. target computer settings to run a simulink® real - time™ model on a speedgoat® target computer, configure the target settings to match the capabilities of the target computer. select the simulink real - time template from the simulink start page and create the exampleslrtapp model. in the matlab® command window, type : simulink in the simulink editor, open the simulink real - time explorer. in the real - time tab", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "409219d07291a4c499bae1f836c63fe6_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/installing-simulink-real-time-software-updates.html", "title": "Install Simulink Real-Time Software Updates", "tags": ["R2020B"], "chunk_text": "##® command window, type : simulink in the simulink editor, open the simulink real - time explorer. in the real - time tab, from the targets list, click slrt explorer. from the target computers list, select the target computer node. to add a node representing another target computer, in the targets pane, click the add target button. to remove a node representing a target computer, select the node and click the remove target button. to connect to a target computer, toggle the disconnected indicator to connected. if not previously configured, select the target configuration tab and set the target computer ip", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "409219d07291a4c499bae1f836c63fe6_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/installing-simulink-real-time-software-updates.html", "title": "Install Simulink Real-Time Software Updates", "tags": ["R2020B"], "chunk_text": ". to connect to a target computer, toggle the disconnected indicator to connected. if not previously configured, select the target configuration tab and set the target computer ip address for the target computer definition by using the change ip address button. for example, speedgoat target machines are preconfigured to ip address 192. 168. 7. 5 and subnet mask 255. 255. 255. 0. if your target machine has been used with a previous version of matlab and you have not yet migrated the target machine to release r2020b or later, you will see this message : please enter the following at the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "409219d07291a4c499bae1f836c63fe6_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/installing-simulink-real-time-software-updates.html", "title": "Install Simulink Real-Time Software Updates", "tags": ["R2020B"], "chunk_text": "matlab and you have not yet migrated the target machine to release r2020b or later, you will see this message : please enter the following at the matlab command prompt > > speedgoat. migratetarget before continuing with the next step. repeat this procedure as required for each target computer. simulink real - time explorer", "token_count": 69, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "find simulink real - time support for support with speedgoat® target machines or the speedgoat i / o blockset, contact speedgoat support : for support on general matlab® or simulink® issues, see mathworks® help : for support on simulink real - time™ issues, see : simulink real - time support : mathworks help center website simulink real - time answers : simulink real - time central file exchange : after searching these resources, if you still cannot solve your issue : for online or phone support, contact mathworks technical support directly. filter", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "time central file exchange : after searching these resources, if you still cannot solve your issue : for online or phone support, contact mathworks technical support directly. filter by source filter by category filter by type filter by product family xpc target cpu overloads xpc target data logging methodologies disabling smis on intel ( r ) ich5 chipsets xpc target wall time synchronizing xpc targets using the parallel port inlining parameters to use with xpc target xpc target dosloader demo xpc target delay timer block xpc target speaker blocks xpc target usb camera xpc target quick reference guide", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "xpc target xpc target dosloader demo xpc target delay timer block xpc target speaker blocks xpc target usb camera xpc target quick reference guide xpc stand alone downloader xpc file scope tools xpc target function library quick reference sheet measuring clock jitter with xpc target using the xpc target driver authoring tool to create a delay timer xpc target driver authoring tool tutorial xpc _ command _ center newxpc simulink real - time target support package xpc _ addblocks simulink sleep block for xpc target serial send simulink block in xpc - target", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "real - time target support package xpc _ addblocks simulink sleep block for xpc target serial send simulink block in xpc - target with variable - size signal. serial receive simulink block in xpc - target with variable - size signal. xpc _ openwwwinterface hil of position control system xpc _ display _ logged _ data newfcn acoustic singal transmission loss due to single or double wall kalman filter application two factor cir tid - targeted image denoising ti hercules pil target for rm48 simulink ( embedded coder ) target for", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "filter application two factor cir tid - targeted image denoising ti hercules pil target for rm48 simulink ( embedded coder ) target for ti launchpad pictorial suspicious action detection rtai - linux target howto chinese matlab digest : matlab technical bulletin target detection image recoloring without a target image multiple target tracking with multiple observations mimo - sar mmwave imaging toolbox single / multiple target localization statistical digital signal processing and modeling motion control demo simulink ( embedded coder ) target for ti stellaris launchpad real - time workshop targeting tips and scripts fmcw radar multiple moving target detection", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "demo simulink ( embedded coder ) target for ti stellaris launchpad real - time workshop targeting tips and scripts fmcw radar multiple moving target detection embedded target for renesas ra, rl78, rx family newsl linux soft real - time target v2. 4 system target file ( some info ) social distancing monitoring system matlab ltspice circuit optimizer gettargetfromlink intelligent bin picking with simulink® for ur5e cobot radar simulation targettracker calculate excel range vu - lego real time target real - time pacer for simulink simulin", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "##® for ur5e cobot radar simulation targettracker calculate excel range vu - lego real time target real - time pacer for simulink simulink real - time support package for asam xil standard real - time blockset 7. 1 for simulink getting started guide robonation ecal - toolbox simulink block for real time execution real time update of simulink variables in gui ball tracking example soft real time block for pacing simulink simulations x - plane - 11 - simulink - real - time - communication how to set up elmo gold drive with simulink real", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "simulink simulations x - plane - 11 - simulink - real - time - communication how to set up elmo gold drive with simulink real - time using ethercat simulink - xplane10 communication via udp rtsync blockset 64 - bit rtsync blockset power electronics templates for simulink real - time arduino temperature control lab for simulink and matlab sphero simulation in simscape multibody simulink cstr simulation and control elapsed time & timestamp delta blocks for simulink real - time how to interact with simulink", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "simulink cstr simulation and control elapsed time & timestamp delta blocks for simulink real - time how to interact with simulink using python message - de - serializer - for - ros winaudio10 vcapg2 extension for simulink simulink test support package for asam xil standard sphero connectivity package accelerating speech prosthesis development with simulink pixhawk simulink instruments mavlink interface real - time audio processor microsoft flight simulator sitl roll controller simconnect real time gui for arduino system real - time beat tracking template", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "##link interface real - time audio processor microsoft flight simulator sitl roll controller simconnect real time gui for arduino system real - time beat tracking templates for ieee signal processing cup 2017 daq ni usb simulink block for counter / encoder real time model predictive control for dc motor positioning real - time simulation of a hybrid - electric vehicle cheatsheets for real - time simulation and testing model predictive control and estimation with arduino phasor measurment unit ( single - phase m - class ) process dynamics and control course simulinkekfattitude rtc :", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "phasor measurment unit ( single - phase m - class ) process dynamics and control course simulinkekfattitude rtc : a pedestrian real - time clock figure stcsl - rtw version sphero multi - agent robotic testbed for matlab ( smart _ matlab ) real - time emotion recognition from usb camera with deep cnns hybrid electric aircraft model in simscape real - time orbit determination speedgoat i / o blockset tutorial and toolbox on real - time optical flow simple ethercat master for simulink windows desktop scopes for real - time display winnov", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "blockset tutorial and toolbox on real - time optical flow simple ethercat master for simulink windows desktop scopes for real - time display winnov blockset ( edge and imnoise only ) for simulink real - time datafeed from yahoo! simulink library for robotics applications real - time magnifying glass : an interactive animation example status clear source clear category clear 1 xpc target toolbox 3 xpc target ascii conversion xpc target external error matlab xpc target usb? xpc target related query 2 xpc target and arm cortex xpc target kernel jitter xpc", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "xpc target external error matlab xpc target usb? xpc target related query 2 xpc target and arm cortex xpc target kernel jitter xpc target xpc target network communication is the xpc target c api redistributable? 0 xpc target animations cpu usage in xpc target xpc target logging in folders xpc target and abb modbustcp remotely view xpc target screen? problem with xpc target parameter pcm - 38101 xpc target deiver xpc target - multicores not boot using intel atom as xpc target multithreading in single core", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "##m - 38101 xpc target deiver xpc target - multicores not boot using intel atom as xpc target multithreading in single core xpc target usb joystick drivers for xpc target is it possible log an undefined amount of data with an xpc target file scope? xpc target boot problem? xpc target - device driver how to use desktop pc as xpc target. writing file with xpc target using xpc target format r2012b xpc target xpcexplr cannot open can every motherboard use for xpc target application? xpc target in freerun mode", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "r2012b xpc target xpcexplr cannot open can every motherboard use for xpc target application? xpc target in freerun mode : extra long sample time 4 xpc target : problem with multiple nic card tcp / ip connection xpc target with remote device xpc target and b & r powerlink ( real - time ethernet ) issue with building reference models with xpc target what means \" xpc \" from the xpc target? how can i reduce the boot time for an xpc targetbox in xpc target 2. 7. 2 ( r14sp2 )? is it possible", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "how can i reduce the boot time for an xpc targetbox in xpc target 2. 7. 2 ( r14sp2 )? is it possible to use an xpc target scope in a referenced model in xpc target? need help on xpc target with i / o card does the xpc target byte packing block from the xpc target utilities library support back propagation? xpc target - rs - 232 interface w / usb - serial converter? connecting to xpc target machine takes too long time error building xpc target dos loader is freedos 9 supported for use with the xpc target embedded option", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "connecting to xpc target machine takes too long time error building xpc target dos loader is freedos 9 supported for use with the xpc target embedded option? xpc target ethernet buffer why do the \" to xpc target \" and \" from xpc target \" blocks in xpc target 2. 0. 2 ( r13sp1 + ) have the wrong number of arguments? about xpc target and supproted ioboard does xpc target support force - feedback joystick as input? regarding xpc target does xpc target support the ni pci - 6224 board? how can i synchroni", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "force - feedback joystick as input? regarding xpc target does xpc target support the ni pci - 6224 board? how can i synchronize two xpc target machines in xpc target 2. 0. 1 ( r13sp1 )? simulink real - time build fail simulink real - time and non - speedgoat machine simulink real - time referenced models simulink real - time missing signals udp error simulink real - time simulink real - time safety features simulink real - time usb ethernet simulink real - time compatible cards simulin", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "simulink real - time simulink real - time safety features simulink real - time usb ethernet simulink real - time compatible cards simulink real - time with trellix firewall simulink real - time can bus support simulink real - time host scope simulink real - time message \" system halted \" simulink real - time desktop kernel gone bad. simulink real - time library linux connecting xbox controller to simulink real - time changing simulink real - time workspace variable lapack in simulink real - time desktop simulink real - time runs", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "##ulink real - time changing simulink real - time workspace variable lapack in simulink real - time desktop simulink real - time runs very slow simulink real - time xpctest test4 falied downgrade simulink real - time target support package change update rate of simulink real - time instrument panel faq : speedgoat & simulink real - time ( slrt ) model error when running simulink real - time with speedgoat simulink desktop real - time advices palette pane missing from simulink real - time error getting simulin", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "##k real - time with speedgoat simulink desktop real - time advices palette pane missing from simulink real - time error getting simulink real - time target parameters does simulink real - time supports only desktop cpus simulink real - time build is not building! build simulink real - time applications in parallel simulink real - time tunable structures simulink real - time with rs - 232 ( receiving data ) simulink real - time kernel bricking windows 10 simulink real - time not useing pci board simulink real - time host scope in", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "simulink real - time kernel bricking windows 10 simulink real - time not useing pci board simulink real - time host scope in slrt target with windows 7 using simulink real - time simulink real - time signaltable callback syntax examples simulink real - time setup with no target computer why are there spikes in the simulink real - time tet log? simulink real - time target pc ‘ black screen ’ problem simulink real - time cpu overload in standalone mode scope problem in simulink desktop real - time random delays in stream input block in", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "screen ’ problem simulink real - time cpu overload in standalone mode scope problem in simulink desktop real - time random delays in stream input block in simulink real - time simulink real - time tcp send variable size data input simulink real - time file scope write speed error handling simulink desktop real - time simulink real - time non - speedgoat machine ethercat pcibus selection 6 simulink desktop real - time kernel error : maximum supported number of timers exceeded? control of piezo actuator in simulink real - time sample time of host scope", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "c2d2edce5362fabc6dcec29317327f07_23", "source_url": "https://in.mathworks.com/help/slrealtime/ug/find-simulink-real-time-support.html", "title": "Find Simulink Real-Time Support", "tags": ["Intel", "R2012B"], "chunk_text": "- time kernel error : maximum supported number of timers exceeded? control of piezo actuator in simulink real - time sample time of host scopes in simulink real - time single use switch in simulink real - time", "token_count": 50, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8e8baf02167a1c0ecc7f3c7dea801d26_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-matlab-api-call-upgrade-for-r2020b.html", "title": "Troubleshoot MATLAB API Call Upgrade for R2020b", "tags": ["R2017A", "R2019A", "R2020B", "R2021A", "R2023A", "R2023B"], "chunk_text": "troubleshoot matlab api call upgrade for r2020b in r2020b, many objects and functions in the simulink® real - time™ api changed. what this issue means matlab® m - scripts written by using the simulink real - time api require updates to run in r2020b and later releases. try this workaround these tables identify simulink real - time api changes in r2020 and identify new workflows. use these tables to guide your updates to pre - r2020b m - scripts. for information about simulink real - time in previous releases,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8e8baf02167a1c0ecc7f3c7dea801d26_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-matlab-api-call-upgrade-for-r2020b.html", "title": "Troubleshoot MATLAB API Call Upgrade for R2020b", "tags": ["R2017A", "R2019A", "R2020B", "R2021A", "R2023A", "R2023B"], "chunk_text": ". use these tables to guide your updates to pre - r2020b m - scripts. for information about simulink real - time in previous releases, see : target computer operations real - time execution operations execution profiler operations parameter tuning operations signal tracing operations set _ param ( bdroot,...'signallogging ','on') signal logging operations instrumentation operations ethernet and ethercat operations target computer settings operations check model for upgradable simulink real - time features signal logging if you select signal logging, you can use the configure signals to log button to open the signal logging", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8e8baf02167a1c0ecc7f3c7dea801d26_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-matlab-api-call-upgrade-for-r2020b.html", "title": "Troubleshoot MATLAB API Call Upgrade for R2020b", "tags": ["R2017A", "R2019A", "R2020B", "R2021A", "R2023A", "R2023B"], "chunk_text": "simulink real - time features signal logging if you select signal logging, you can use the configure signals to log button to open the signal logging selector. you can use the signal logging selector to : review all signals in a model hierarchy that are configured for logging. override signal logging settings for specific signals. control signal logging throughout a model reference hierarchy. you can use the signal logging selector for both simulink® and stateflow® signals. for details about the signal logging selector, see view logging configuration using the signal logging selector and override signal logging settings. for information about logging simscape™ data,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8e8baf02167a1c0ecc7f3c7dea801d26_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-matlab-api-call-upgrade-for-r2020b.html", "title": "Troubleshoot MATLAB API Call Upgrade for R2020b", "tags": ["R2017A", "R2019A", "R2020B", "R2021A", "R2023A", "R2023B"], "chunk_text": "details about the signal logging selector, see view logging configuration using the signal logging selector and override signal logging settings. for information about logging simscape™ data, see about simscape data logging ( simscape ). signal logging is not supported for : signals inside stateflow charts for rapid accelerator simulations input signals of function - call subsystems, if - action subsystems, or switch case action subsystems input signals for merge blocks outputs of function - call generator blocks outputs of trigger and enable blocks buses inside for - each subsystems signals in referenced models inside for - each subsystems when : the model that contains the for - each sub", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8e8baf02167a1c0ecc7f3c7dea801d26_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-matlab-api-call-upgrade-for-r2020b.html", "title": "Troubleshoot MATLAB API Call Upgrade for R2020b", "tags": ["R2017A", "R2019A", "R2020B", "R2021A", "R2023A", "R2023B"], "chunk_text": "trigger and enable blocks buses inside for - each subsystems signals in referenced models inside for - each subsystems when : the model that contains the for - each subsystem simulates in rapid accelerator mode. the for - each subsystem is inside a referenced model simulated in accelerator mode. for more information about logging signals in for - each subsystems, see log signals in for - each subsystems. state port outputs of integrator and discrete - time integrator blocks. r2023b : log unbounded variable - size signals r2023a : log nonvirtual buses that contain variable", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8e8baf02167a1c0ecc7f3c7dea801d26_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-matlab-api-call-upgrade-for-r2020b.html", "title": "Troubleshoot MATLAB API Call Upgrade for R2020b", "tags": ["R2017A", "R2019A", "R2020B", "R2021A", "R2023A", "R2023B"], "chunk_text": "integrator blocks. r2023b : log unbounded variable - size signals r2023a : log nonvirtual buses that contain variable - size signals nonvirtual buses that contain variable - size signals directly or in nested buses buses with nested nonvirtual buses that contain variable - size signals arrays of buses with nonvirtual buses that contain variable - size signals r2021a : variable - size signal support r2019a : signal logging parameter controls whether data streams to simulation data inspector r2017a : unified streaming and logging topics", "token_count": 118, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "troubleshoot gaps in streamed data a real - time application is producing a live streaming overload while attempting to stream signal data at a high rate. what this issue means live streaming from a real - time application does not guarantee all the data appears in the simulation data inspector. live stream instrumentation runs at a lower priority than the real - time application. so, data sent by live streaming could be dropped if the development computer to speedgoat® target computer connection cannot keep up. if a live stream overload occurs, you could see noticeable gaps in the data in the simulation data inspector or see that some time steps are lost when you", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": ". if a live stream overload occurs, you could see noticeable gaps in the data in the simulation data inspector or see that some time steps are lost when you export data from the simulation data inspector. try this workaround the issue is caused by high data rates and live streaming of data. to workaround the issue : modify the real - time application to decrease the data rate for live streaming data. to do this, you could increase the sample rate, instrument fewer signals, or increase the decimation of instrumented signals. change the real - time application to use file logging instead of live streaming. file logging is capable of", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": ", or increase the decimation of instrumented signals. change the real - time application to use file logging instead of live streaming. file logging is capable of logging higher data rates without dropping data. log or stream real - time signals by using the simulation data inspector with the simulation data inspector and simulink® real - time™, you can send real - time signal data directly to the simulation data inspector or by logging signal data by recording it through a file log block. if streaming signal data directly, you view the output in real time as the application produces it. the application can produce more data than the speedgoat", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "block. if streaming signal data directly, you view the output in real time as the application produces it. the application can produce more data than the speedgoat® target computer can transmit in real time to the matlab® development computer. data accumulates in the network buffer, and, if the buffer fills up, the rtos drops data points. streaming signal data directly does not support decimation or limit data points. to avoid dropped data points caused by network buffer overruns, you can use logging through a file log block. when logging, you connect signals to file log blocks in the model. in the real -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "buffer overruns, you can use logging through a file log block. when logging, you connect signals to file log blocks in the model. in the real - time application, these blocks store data for the buffered signals on the target computer. at the end of execution, the real - time application transmits the data to the development computer for display in the simulation data inspector. you can then view the most important signals immediately and view the buffered signals afterward. logging signal data through a file log block supports decimation or limit data points and supports conditional block execution semantics. some examples are logging signal data by enabling data logging", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "signal data through a file log block supports decimation or limit data points and supports conditional block execution semantics. some examples are logging signal data by enabling data logging for a signal inside a for - iterator, function - call, or enabled / triggered subsystem. for more information, see simulation data inspector and real - time signal logging is affected by how application is run. set up model for logging to set up the model for logging signal data : open slrt _ ex _ osc. select the muxout output signal, place your cursor over the signal, and select enable data logging. tip", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "slrt _ ex _ osc. select the muxout output signal, place your cursor over the signal, and select enable data logging. tip consider whether to configure the logging sample time in the instrumentation properties for the logged signal. use this property to set a lower sample time for signals that go into the simulation data inspector while the simulation is running. configuring this property can help makes the simulation data inspector more responsive and easier to use. double - click the file log block. the decimation value is 1. set up simulation data inspector to set up the simulation data inspector : open", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "use. double - click the file log block. the decimation value is 1. set up simulation data inspector to set up the simulation data inspector : open the simulation data inspector ( ). click layout ( ). select two horizontal displays. view simulation data to view the simulation data : build and download slrt _ ex _ osc. start real - time execution. when the simulation data inspector button glows, click the top display and select the sum output signal. click in the bottom display and select the mux output signals. stop real - time execution. when the sum output appears, click fit to view ( )", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": ". click in the bottom display and select the mux output signals. stop real - time execution. when the sum output appears, click fit to view ( ). to zoom in on a time segment of interest, for example, 10. 0 – 10. 1 s, click zoom in time ( ) and use the mouse and mouse wheel. to save the simulation data inspector session as an mldatx file, click save. real - time signal logging and parameter tuning this example shows how to use real - time signal logging and parameter tuning with simulink® real - time™. after the example builds the model and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "tuning this example shows how to use real - time signal logging and parameter tuning with simulink® real - time™. after the example builds the model and downloads the real - time application, slrt _ ex _ param _ tuning, to the target computer, the example executes multiple runs and tunes the gain'gain1 / gain'parameter before each run. the gain sweeps from 0. 1 to 0. 7 in steps of 0. 05. slrt _ ex _ param _ tuning the example uses a simulink real - time file log block to capture signals of interest during each application run. the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "##rt _ ex _ param _ tuning the example uses a simulink real - time file log block to capture signals of interest during each application run. the logged signals are uploaded to the development computer and plotted. a 3 - d plot of the oscillator output versus time versus gain is displayed. create target object and connect copy openexample command paste command in matlab to download and open example files tg = slrealtime ; connect ( tg ) ; open, build, and download model to the target computer model ='slrt _ ex _ param _ tuning'; open _ system (", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "##g ) ; open, build, and download model to the target computer model ='slrt _ ex _ param _ tuning'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \" systemtargetfile \", modelstf ) ; set _ param ( model,'rtwverbose ','off') ; set _ param ( model,'stoptime ','0. 2') ; configure for a non - verbose build. build and download application. evalc ('sl", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "##time ','0. 2') ; configure for a non - verbose build. build and download application. evalc ('slbuild ( model )') ; load ( tg, model ) ; run model, sweep'gain'parameter, plot logged data create a simulink real - time target object. set stop time to 0. 2s. if no plot figure exist, create the figure. if the plot figure exist, make it the current figure. set damping factor ( gain1 / gain ). start run of the real - time application. store output data", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "figure exist, make it the current figure. set damping factor ( gain1 / gain ). start run of the real - time application. store output data in outp, y, and t variables. plot data for current run. loop over damping factor. create a plot of oscillator output versus time versus gain. create 3 - d plot. figh = findobj ('name ','parsweepdemo') ; if isempty ( figh ) figh = figure ; set ( figh,'name ','parsweepdemo '", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "; if isempty ( figh ) figh = figure ; set ( figh,'name ','parsweepdemo ','numbertitle ','off') ; else figure ( figh ) ; end y = [ ] ; flag = 0 ; for z = 0. 1 : 0. 05 : 0. 7 if isempty ( find ( get ( 0,'children') = = figh, 1 ) ) flag = 1 ; break ; end load ( tg, model ) ; tg. setparam ( [ model'/ gain", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "##h, 1 ) ) flag = 1 ; break ; end load ( tg, model ) ; tg. setparam ( [ model'/ gain1'],'gain ', 2 * 1000 * z ) ; tg. start ('autoimportfilelog ', true,'exporttobaseworkspace ', true ) ; pause ( 0. 4 ) ; outp = logsout { 1 }. values ; y = [ y, outp. data ( :, 1 ) ] ; t = outp. time ; plot ( t, y ) ; set ( gca", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "[ y, outp. data ( :, 1 ) ] ; t = outp. time ; plot ( t, y ) ; set ( gca,'xlim ', [ t ( 1 ), t ( end ) ],'ylim ', [ - 10, 10 ] ) ; title ( ['parsweepdemo : damping gain = ', num2str ( z ) ] ) ; xlabel ('time') ; ylabel ('output') ; drawnow ; end if ~ flag delete ( gca ) ; surf ( t", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "('time') ; ylabel ('output') ; drawnow ; end if ~ flag delete ( gca ) ; surf ( t ( 1 : 200 ), 0. 1 : 0. 05 : 0. 7, y ( 1 : 200, : )') ; colormap cool shading interp h = light ; set ( h,'position ', [ 0. 0125, 0. 6, 10 ],'style ','local') ; lighting gouraud title ('parsweepdemo : finished') ; xlabel ( '", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "' style ','local') ; lighting gouraud title ('parsweepdemo : finished') ; xlabel ('time') ; ylabel ('damping gain') ; zlabel ('output') ; end importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1..", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "b3a0510bd2b24b948507583235e34429_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-gaps-in-streamed-data.html", "title": "Troubleshoot Gaps in Streamed Data", "tags": ["Data"], "chunk_text": "... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... importing log file 1 of 1... close model bdclose ( model ) ; slrttetmonitor", "token_count": 108, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "troubleshoot overloaded cpu from executing real - time application some issue is producing a cpu overload when executing a real - time application. what this issue means a cpu overload indicates that the cpu is unable to complete processing a model time step before restarting for the next time step. when this error occurs, the simulink real - time rtos halts model execution and the target object property targetstatus shows an error, for example : mcpuoverload : sub - rate exception : overload limit ( 0 ) exceeded in 0. 02s rate with 1 overloads if you allow the overload, model", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": ": sub - rate exception : overload limit ( 0 ) exceeded in 0. 02s rate with 1 overloads if you allow the overload, model execution continues until the allowed overload limit is reached. if the model continues to run after a cpu overload, the time step lasts as long as the time required to finish the execution. this behavior delays the next time step. model design or speedgoat® target computer resources cause cpu overloads. possible reasons are : the target computer is too slow or the model sample time is too small. the model is too complex ( algorithmic complexity ). i /", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "possible reasons are : the target computer is too slow or the model sample time is too small. the model is too complex ( algorithmic complexity ). i / o latency, where each i / o channel used introduces latency into the system. i / o latency can cause the execution time to exceed the model time step. products & services services try this workaround the simulink® real - time™ rtos usually halts model execution when it encounters a cpu overload. you can configure the simulink real - time model to allow cpu overloads. use this capability to support long", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "a cpu overload. you can configure the simulink real - time model to allow cpu overloads. use this capability to support long initializations and for overload diagnosis. you also can try to reduce overloads by improving application performance and enabling the compile with gcc - ffast - math option. permit long initialization time for some real - time applications, normal initialization can extend beyond the first sample time. use the slrt overload options block to increase the number of startup time steps to ignore overloads. by default, only the first time step ignores overloads.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "##rt overload options block to increase the number of startup time steps to ignore overloads. by default, only the first time step ignores overloads. note allowing the target computer cpu to overload can cause incorrect results, especially for multirate models. use the slrt overload options block only for diagnosis. when your diagnosis is complete, turn off these options. enable compile with gcc - ffast - math option the compile with gcc - ffast - math option enables the gcc compiler - ffast - math option when compiling real - time application code. this option is disabled by default for sim", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "ffast - math option enables the gcc compiler - ffast - math option when compiling real - time application code. this option is disabled by default for simulink real - time models. by enabling the compile with gcc - ffast - math option, you provide the compiler with more flexibility to optimize floating - point math at the expense of deviating from the ieee - 754 floating - point standard. for more information about the - ffast - math option, see the semantics of floating - point math in gcc and gcc. gnu. org / wiki / floatingpointmath /.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "- math option, see the semantics of floating - point math in gcc and gcc. gnu. org / wiki / floatingpointmath /. force polling mode the force polling mode option enables polling mode — instead of interrupt - driven mode — for clocking the real - time application. enabling this option can help reduce cpu overloads if : the target computer has at least four cpu cores. the cpu overload is caused by sporadic tet spikes. compile with gcc - ffast - math target computer cpu overload sometimes a real - time application running on the speedgoat® target computer does not", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "compile with gcc - ffast - math target computer cpu overload sometimes a real - time application running on the speedgoat® target computer does not have enough time to complete processing before the next time step. this condition is called a cpu overload. an overload is registered every time an execution step is triggered while the previous step is running. slrt overload options monitor cpu overload rate the slrt overload options block outputs the current cpu overload count for the identified sample rate. this example shows how to design a model that uses the slrt overload options block to monitor the rate at which cpu", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "##load count for the identified sample rate. this example shows how to design a model that uses the slrt overload options block to monitor the rate at which cpu overloads occur. the rate of cpu overloads information can be useful when tuning performance of a model for which a low cpu overload rate is acceptable. create target object and connect copy openexample command paste command in matlab to download and open example files tg = slrealtime ; connect ( tg ) ; open, build, and run the model model ='slrt _ ex _ overload'; open _ system ( model )", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "connect ( tg ) ; open, build, and run the model model ='slrt _ ex _ overload'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \" systemtargetfile \", modelstf ) ; set _ param ( model,'rtwverbose ','off') ; p = get _ param ('slrt _ ex _ overload / rate limiter ','porthandles') ; l = get _ param ( p. outport,'line '", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "ex _ overload / rate limiter ','porthandles') ; l = get _ param ( p. outport,'line') ; set _ param ( l,'name ','rate limiter') ; simulink. sdi. marksignalforstreaming ('slrt _ ex _ overload / rate limiter ', 1,'on') ; evalc ('slbuild ( model )') ; load ( tg, model ) ; start ( tg ) ; pause ( 20 ) ; stop ( tg ) ;", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "##d ( model )') ; load ( tg, model ) ; start ( tg ) ; pause ( 20 ) ; stop ( tg ) ; open simulation data inspector simulink. sdi. view ; examine cpu overload rate data bottom rising stair step signal - - this signal indicates the number of cpu overloads that occurred. top rising stair step signal - - this signal indicates the number of cpu overloads that are allowed, which is ( occurred + 2 ). rising slew rate - - this signal indicates the rate at which cpu overloads occur. when the rising slew rate becomes", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "( occurred + 2 ). rising slew rate - - this signal indicates the rate at which cpu overloads occur. when the rising slew rate becomes greater than the top rising stair step signal, the rate of cpu overloads is greater than are allowed. modify rate of cpu overloads modify allowed rate of cpu overloads build and run model with changed overload rates load ( tg, model ) ; tg. setparam ('slrt _ ex _ overload / rate limiter ','risingslewlimit ', 4 ) ; tg. setparam ( '", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "slrt _ ex _ overload / rate limiter ','risingslewlimit ', 4 ) ; tg. setparam ('slrt _ ex _ overload / constant2 ','value ', 4 ) ; start ( tg ) ; pause ( 20 ) ; stop ( tg ) ; bdclose ( model ) ; webinar automotive industry solutions aerospace industry solutions industrial automation and machinery solutions more industry solutions training services tailored rack systems engineering services upcoming events news streamline controller testing & certification for more electric aircrafts & evtols automotive ecu development : tackling r", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a1d9cebbd045df4c56361d2048aedda2_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-overloaded-cpu-from-executing-real-time-application.html", "title": "Troubleshoot Overloaded CPU from Executing Real-Time Application", "tags": [], "chunk_text": "services tailored rack systems engineering services upcoming events news streamline controller testing & certification for more electric aircrafts & evtols automotive ecu development : tackling r & d and test engineering challenges", "token_count": 38, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "troubleshoot unsatisfactory real - time performance i want some recommended methods to improve unsatisfactory real - time application performance. what this issue means run - time performance and reduce the task execution time ( tet ) of a model depend on model design, speedgoat® target computer capacity, and target computer utilization. try this workaround you can improve run - time performance and reduce the task execution time ( tet ) of a model with these methods. enable compile with gcc - ffast - math option the compile with gcc - ffast - math option enables the gcc compiler - ffast", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "enable compile with gcc - ffast - math option the compile with gcc - ffast - math option enables the gcc compiler - ffast - math option when compiling real - time application code. this option is disabled by default for simulink® real - time™ models. by enabling the compile with gcc - ffast - math option, you provide the compiler with more flexibility to optimize floating - point math at the expense of deviating from the ieee - 754 floating - point standard. compile with gcc - ffast - math for more information about the - ffast -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "deviating from the ieee - 754 floating - point standard. compile with gcc - ffast - math for more information about the - ffast - math option, see the semantics of floating - point math in gcc and gcc. gnu. org / wiki / floatingpointmath /. run performance tools use these performance tools : to profile execution of a real - time application, use the startprofiler command. to run the profiler and plot the results, use the plot function. for more information, see execution profiling for real - time applications. customize concurrent execution on multicore target", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "and plot the results, use the plot function. for more information, see execution profiling for real - time applications. customize concurrent execution on multicore target computer you can improve run - time performance by configuring your model to take advantage of your multicore target computer : partition the model into subsystems according to the physical requirements of the system that you are modeling. set the block sample rates within each subsystem to the slowest rate that meets the physical requirements of the system. create execution tasks and triggers, and then explicitly assign subsystem partitions to the tasks. see partition your model using", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "the physical requirements of the system. create execution tasks and triggers, and then explicitly assign subsystem partitions to the tasks. see partition your model using explicit partitioning and multicore programming with simulink. you can also use the simulink schedule editor to partition the model. in the simulink editor, click the modeling tab and select design > schedule editor. for more information, see create partitions from a rate - based model. run the real - time application. note do not use matlab system blocks in the top level of simulink real - time models in which task execution is explicitly partition", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "real - time application. note do not use matlab system blocks in the top level of simulink real - time models in which task execution is explicitly partitioned. these blocks generate a tlc error when building the real - time application, for example : \" unable to find tlcblocksid within the block scope \" minimize the model you can improve run - time performance by minimizing your model to make more memory and cpu cycles available for the real - time application : on the solver pane, increase fixed - step size ( fundamental sample time ). executing with a short sample time can overload the cpu", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "time application : on the solver pane, increase fixed - step size ( fundamental sample time ). executing with a short sample time can overload the cpu. use polling mode. see execution modes for real - time applications. reduce the number of i / o channels in the model. contact technical support for additional guidance, refer to these sources : mathworks® tech support : mathworks help center website transformations further floating - point related flags note on built - in math functions note on x86 and m68080 floating - point math known math bugs implicit use of extended precision on x86 when using the x87 f", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "functions note on x86 and m68080 floating - point math known math bugs implicit use of extended precision on x86 when using the x87 fpu, see x87note - fsignaling - nans is still experimental and may not disable all optimizations that affect signaling nan behavior. concurrent execution on simulink real - time this example shows how to apply explicit partitioning to enhance concurrent execution of a real - time application that you generate by using simulink® real - time™. simulink real - time supports concurrent execution by using implicit partitioning or explicit partitioning of models", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "generate by using simulink® real - time™. simulink real - time supports concurrent execution by using implicit partitioning or explicit partitioning of models. this example shows the relationship between the explicit partitioning of the tasks in the model subsystems and the execution of tasks by using the simulink real - time profiling tool. note : you can also use the simulink® schedule editor to partition the model. in the simulink editor, click the modeling tab and select design > schedule editor. for more information, see create partitions from a rate - based model. the example model slrt _", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "click the modeling tab and select design > schedule editor. for more information, see create partitions from a rate - based model. the example model slrt _ ex _ mds _ and _ tasks runs at sample rate of 0. 001 second. to run the model with adjusted sample rate of 0. 01 second, change the sample rated before running the example. in the matlab® command window, type : ts = 0. 01 ; create target object and connect copy openexample command paste command in matlab to download and open example files tg = slrealtime ; connect ( tg ) ; open,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "copy openexample command paste command in matlab to download and open example files tg = slrealtime ; connect ( tg ) ; open, build, and download the model open _ system ('slrt _ ex _ mds _ subsystem1') ; open _ system ('slrt _ ex _ mds _ subsystem2') ; model ='slrt _ ex _ mds _ and _ tasks'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \" systemtargetfi", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "' ; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \" systemtargetfile \", modelstf ) ; set _ param ( model,'rtwverbose ','off') ; set _ param ('slrt _ ex _ mds _ subsystem1 ', \" systemtargetfile \", modelstf ) ; set _ param ('slrt _ ex _ mds _ subsystem2 ', \" systemtargetfile \", modelstf ) ; eva", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "param ('slrt _ ex _ mds _ subsystem2 ', \" systemtargetfile \", modelstf ) ; evalc ('slbuild ( model )') ; load ( tg, model ) ; slrttetmonitor ; startprofiler ( tg ) ; start ( tg ) ; pause ( 2 ) ; stop ( tg ) ; display profiling data profdata = tg. getprofilerdata ; profdata. plot ; processing data on target computer... transferring data from target computer... processing", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##g. getprofilerdata ; profdata. plot ; processing data on target computer... transferring data from target computer... processing data on host computer... view tet information in tet monitor view tet information in the simulation data inspector see also generate subsystem code as separate function and files generate code and executables for individual subsystems generate inlined subsystem code generate reusable code from library subsystems shared across models close the model bdclose ('slrt _ ex _ mds _ subsystem1') ; b", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "library subsystems shared across models close the model bdclose ('slrt _ ex _ mds _ subsystem1') ; bdclose ('slrt _ ex _ mds _ subsystem2') ; bdclose ( model ) ; troubleshooting connection issues with speedgoat target computers why does matlab crash on linux with \" inconsistency detected by ld. so :.. / elf / dl - tls. c : 597 : _ dl _ allocate _ tls _ init : \" we've been listening :", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "elf / dl - tls. c : 597 : _ dl _ allocate _ tls _ init : \" we've been listening : matlab r2025a prerelease update 5 now available numpy in matlab finding the frequency value of a signal advance optimization software : fully funded phd with highs and mathworks at university of edinburgh on love and research software : sharing code with your valentine parallel computing in matlab : have you tried threadpools yet? resizing subplots within a figure calculate amount of cake frosting pid controller simulator how to clear the matlab runtime cache", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "threadpools yet? resizing subplots within a figure calculate amount of cake frosting pid controller simulator how to clear the matlab runtime cache? how to display newline celebrating excellence : recognizing mathworks top accelerator partners, india why am i unable to access add - ons explorer when my license is not current on maintenance? find the best hotels solving practical problems on quantum computers and quantum - inspired hardware with quadratic unconstrained binary optimization ( qubo ) times 2 - start here convert from fahrenheit to celsius how to run local deepseek models and use them with matlab", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "qubo ) times 2 - start here convert from fahrenheit to celsius how to run local deepseek models and use them with matlab find the oldest person in a room hydrogenic wavefunction visulization tool the hat, a tridecagon aperiordic monotile cad2matdemo. m verify law of large numbers making a utility to track matlab start and stop times how do i locate the crash dump files generated by matlab? solve a system of linear equations longest run of consecutive numbers plotting the frequency spectrum code examples from deep learning ebook mohr's circle convert a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "by matlab? solve a system of linear equations longest run of consecutive numbers plotting the frequency spectrum code examples from deep learning ebook mohr's circle convert a datetime to string spectral and xyz color functions abfload error : \" matlab cannot run this file because c : \\ ~ ~ ~ shadows it. delete shadowing file and try again \" downloading older versions of matlab pentagonal numbers prompt user for a text string how to make script and command window adjacent 2nd biennial macroeconometric caribbean conference save folder one above current directory how to concatenate string and number mattugames parfor", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "script and command window adjacent 2nd biennial macroeconometric caribbean conference save folder one above current directory how to concatenate string and number mattugames parfor progress monitor ( progress bar ) v4 given a matrix, swap the 2nd & 3rd columns the current folder window hydraulic decoupled suspension – the journey starts with a bold idea convert categorical to string how to add a value beginning of an array? how to save the proceesed image in the same size as input image boost _ fuzzysimulation boostcloseloop coneprog 代 生 成 中 ：'secondorder", "token_count": 121, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "size as input image boost _ fuzzysimulation boostcloseloop coneprog 代 生 成 中 ：'secondordercone'not supported for code generation. better package manager abstracted away from matlab versions first order rl circuit first order rc circuit ferranti effect in power systems why output pwm frequency in tms320f28379d controller dropping after deploying code? create a 2d plot with irregular axes sg f1 starter kit x = 1 x = 3 x = 2 y = x code simulink and vehicle networks toolbox users working in automotive", "token_count": 121, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "with irregular axes sg f1 starter kit x = 1 x = 3 x = 2 y = x code simulink and vehicle networks toolbox users working in automotive applications managing app closure : control when users can exit your matlab app do you use design of experiments ( doe ) in your work with matlab? if so, i have a ux session... confusing / cluttered website accelerating asset management with modelops : from model building to monitoring can ai create better wireless chip designs than humans? how pushing your code to github can transform your career llm - enhanced anomaly classification for images roundtable recap :", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "better wireless chip designs than humans? how pushing your code to github can transform your career llm - enhanced anomaly classification for images roundtable recap : software - defined systems in electrification innovation - key takeaways from ai to cybersecurity where is matlab 2025a? r2025a pre - release highlights energy storage system using renewable energy visualizing the number of blocks in a simulink model? 4 ways of using matlab with large language models ( llms ) such as chatgpt and ollama paint store color swatch for matlab graph neural networks in matlab if deeply integrated", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_23", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "language models ( llms ) such as chatgpt and ollama paint store color swatch for matlab graph neural networks in matlab if deeply integrated with ai assistance in matlab answers, what would you like it to do? r2025a prerelease update 5 discussion computational - fluid - dynamics grid connected pv system grid forming droop and virtual synchronous machine. failed to run matlab gui in fedora 42 i found a colormap problem with matlab 2025a object detection and instance segmentation using yolo v8 remove a specific row with max value remove a specific row with min value", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_24", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##p problem with matlab 2025a object detection and instance segmentation using yolo v8 remove a specific row with max value remove a specific row with min value remove a specific column with max value remove a specific column with min value i recently updated my system to fedora 42, and i am not able to launch matlab r2024b ohm ’ s law - calculate resistance solve daes using idasolve function of sundials 2. 6. 2 version solving math by equal introduction to community explore community areas meet community contributors matlab answers file exchange cody blogs execution modes for real - time applications the simulink", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_25", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "version solving math by equal introduction to community explore community areas meet community contributors matlab answers file exchange cody blogs execution modes for real - time applications the simulink® real - time™ rtos has two mutually exclusive execution modes. interrupt mode — the scheduler implements real - time single - tasking and multitasking execution of single - rate or multirate systems, including asynchronous events ( interrupts ). you can interact with the speedgoat® target computer while the real - time application is executing at high sample rates. to use this real - time mode : leave the force polling mode configuration parameter disabled", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_26", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##® target computer while the real - time application is executing at high sample rates. to use this real - time mode : leave the force polling mode configuration parameter disabled ( default ). leave the pollingthreshold application option at the default value. polling mode — the rtos executes real - time applications at sample times close to the limit of the cpu. using polling mode with high - speed and low - latency i / o boards and drivers enables you to achieve real - time application sample times that you cannot achieve by using interrupt mode. because polling mode disables interrupts on the processor core where the model runs,", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_27", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "real - time application sample times that you cannot achieve by using interrupt mode. because polling mode disables interrupts on the processor core where the model runs, it imposes restrictions on the model architecture and on target communication. the base rate of the real - time application is always running when executing in polling mode. to use this real - time mode, either : enable the force polling mode configuration parameter. set the pollingthreshold application option sample time value to a rate below the base rate of the model. for more information, see force polling mode and application. thread trigger | tlc command - line options create partitions", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_28", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "rate below the base rate of the model. for more information, see force polling mode and application. thread trigger | tlc command - line options create partitions from a rate - based model create partitions partitioning a model partitions are components of a model that execute independently as atomic tasks. in multi - tasking models, partitions are created from model components. periodic partitions are scheduled as a function of sample times in a model. in export - function models, the root function - call inputs are defined as partitions. these partitions have a schedule associated with them, which tells what order the partitions execute.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_29", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": ", the root function - call inputs are defined as partitions. these partitions have a schedule associated with them, which tells what order the partitions execute. with partitions, you can separate parts of the model which you can explicitly control. you can think of periodic partitions as components that run at specific rates in a model. aperiodic partitions are components that run at specified hit times or specified events. the schedule of these partitions have an impact on simulation and code generation. the schedule editor enables you to partition the model and interact with those partitions. the schedule editor shows partitions, the connections between them", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_30", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "simulation and code generation. the schedule editor enables you to partition the model and interact with those partitions. the schedule editor shows partitions, the connections between them, and the order of the partitions. there are three types of partitions : the blocks running at the base rate in the model is shown as an implicit partition in the schedule editor. the base rate is the fastest discrete rate in the model. d1 denotes the base rate. d1 annotation also appears in the timing legend. the d1 partition or implicit partition always remains the first discrete partition in the order. the default partitions that are already present", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_31", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "also appears in the timing legend. the d1 partition or implicit partition always remains the first discrete partition in the order. the default partitions that are already present in the model are also implicit partitions. the partition colors match their rate. partitioning is enabled only on multitasking, fixed - step, and variable - step solver models. to choose multitasking execution mode, in solver selection on the solver pane, select the type to be fixed - step or variable - step. select the treat each discrete rate as a separate task check box on the solver pane of the configuration parameters dialog", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_32", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "fixed - step or variable - step. select the treat each discrete rate as a separate task check box on the solver pane of the configuration parameters dialog box. for more information on multitasking execution mode, see time - based scheduling and code generation ( embedded coder ). fixed - step variable - step as a best practice, enable the automatically handle rate transition for data transfer setting in the solver pane. when you check automatically handle rate transition for data transfer, simulink inserts rate transition blocks between blocks when rate transitions are detected. simulink handles rate transitions for asynchronous and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_33", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "data transfer, simulink inserts rate transition blocks between blocks when rate transitions are detected. simulink handles rate transitions for asynchronous and periodic tasks. simulink adds the hidden blocks configured to ensure data integrity and determinism for data transfers. when you check treat each discrete rate as a separate task, simulink selects multitasking execution for models operating at different rates. it also specifies that groups of blocks with the same execution priority are processed through each stage of simulation ( for example, calculating output and updating states ) based on task priority. to see default partitions in the schedule editor", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_34", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "are processed through each stage of simulation ( for example, calculating output and updating states ) based on task priority. to see default partitions in the schedule editor, open the schedule editor. on the modeling tab, click schedule editor. update the diagram by clicking the icon on the toolstrip. the default partitions in the model are called implicit partitions. you can also create partitions in the model through an atomic subsystem or a model block. create partitions using manage partitions in the schedule editor, use the manage partitions panel to create partitions. to open the manage partitions panel, click manage", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_35", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "partitions using manage partitions in the schedule editor, use the manage partitions panel to create partitions. to open the manage partitions panel, click manage partitions, on the schedule editor toolstrip. the changes made in manage partitions are applied to the model to create partitions after updating the diagram. manage partitions shows the model hierarchy with the subsystem blocks and model blocks which can be explicitly partitioned. to create partitions from subsystem blocks, select the subsystems and click the. to create partitions from model blocks, select the model blocks and click. enter partition names in", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_36", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##system blocks, select the subsystems and click the. to create partitions from model blocks, select the model blocks and click. enter partition names in the column partition name, and sample times in the column sample time. repeat the steps for all the subsystems and model blocks in the model that you want to partition. update the diagram to see the created partitions in the schedule editor. the partitions appear in the graph with their deduced data dependencies and order. creating partitions using the manage partitions panel makes changes to the subsystem or model block parameters. the following example shows how to con", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_37", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "and order. creating partitions using the manage partitions panel makes changes to the subsystem or model block parameters. the following example shows how to configure a model for partitioning and create partitions by using manage partitions panel in the schedule editor. open the model fault - tolerant fuel control system example model sldemo _ fuelsys. openexample ('simulink _ automotive / modelingafaulttolerantfuelcontrolsystemexample') sldemo _ fuelsys open the schedule editor. open the schedule editor on the modeling tab, click schedule editor.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_38", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##trolsystemexample') sldemo _ fuelsys open the schedule editor. open the schedule editor on the modeling tab, click schedule editor. to see the default partitions, click update diagram in the schedule editor. two implicit partitions, created automatically by simulink, are seen in the schedule editor. create partitions. open the manage partitions panel. in the panel, expand the fuel _ rate _ control subsystem. select the airflow _ calc subsystem and click. to change the default partition name and sample time, click the default name and sample time. to", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_39", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "the airflow _ calc subsystem and click. to change the default partition name and sample time, click the default name and sample time. to create a partition for the fuel _ calc subsystem, select the fuel _ calc subsystem and click. the manage partitions panel gives you the default partition names and sample times. update the diagram to see the newly created partitions. create partitions from atomic subsystem blocks you can partition an atomic subsystem. an atomic subsystem is treated by simulink as a unit when determining the execution order of", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_40", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "blocks you can partition an atomic subsystem. an atomic subsystem is treated by simulink as a unit when determining the execution order of block methods ( partitioning is enabled only on multitasking, fixed - step and variable - step solver models ). to create partitions from an atomic subsystem block, go to the block parameters dialog box. select periodic partition from the schedule as drop - down. give the partition a name and a discrete sample time and click ok. this creates an explicit partition for this block. to see this partition in the schedule editor, update the diagram.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_41", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "name and a discrete sample time and click ok. this creates an explicit partition for this block. to see this partition in the schedule editor, update the diagram. the partition appears in the graph and in the order with the connections based on the signals in the model. periodic partition create partitions from model blocks to create partitions from a model block, in the model events simulation, select schedule rates and schedule editor from the schedule rates with drop - down. when you enable partitioning from a referenced model, partitions are created from all the model blocks present in the referenced model. these partitions are scoped by the model block", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_42", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "partitioning from a referenced model, partitions are created from all the model blocks present in the referenced model. these partitions are scoped by the model block name. to see this partition in the schedule editor, update the diagram. the partitions appear in the graph and in the order column with the connections based on the design of your model. schedule editor export - function partitions in export - function models, partitions are created from the function calls present in the model. to create partitions from the function calls in the export - function models, reference the export - function model in a top model. schedule the model block", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_43", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "model. to create partitions from the function calls in the export - function models, reference the export - function model in a top model. schedule the model block using the schedule editor through the block parameters. partitions are then created from the function calls and their order is determined by the schedule editor. create an export - function model. add a model block that references the export - function model. set the parameter to partition the export - function model. referencing an export - function model from a model block allows you to partition the function calls without changing the model itself. simulink functions in an export - functions model cannot be scheduled", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_44", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "function model from a model block allows you to partition the function calls without changing the model itself. simulink functions in an export - functions model cannot be scheduled, and do not appear as partitions in the schedule editor. add a model block to a new simulink model. in the model name box, enter the name of an export - function model. for example, use the export - function model created in create export - function model. to enable the use of the schedule editor, configure the model to be multitasking. open the model configuration parameters. in solver selection on the solver pan", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_45", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "of the schedule editor, configure the model to be multitasking. open the model configuration parameters. in solver selection on the solver pane, set the type to fixed - step. check the treat each discrete rate as a separate task and automatically handle rate transition for data transfer parameters. click ok. the model is enabled for partitioning. do not convert a subsystem into a model because it automatically creates inport blocks. add outport blocks to the output _ 100ms and output _ 10ms ports for saving simulation data to matlab®. for this example, in the export - function", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_46", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##port blocks to the output _ 100ms and output _ 10ms ports for saving simulation data to matlab®. for this example, in the export - function model, set the sample time of both the function calls to - 1. add a sine wave block to provide data input. set amplitude to 2 and sample time to 0. 01. to partition the function calls of the export - function model, in the block parameters dialog box for the model block, select schedule editor option from the schedule rates with drop - down menu. open the schedule editor and update the diagram to see the function calls as partitions. multi", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_47", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "select schedule editor option from the schedule rates with drop - down menu. open the schedule editor and update the diagram to see the function calls as partitions. multicore programming with simulink using the process of partitioning, mapping, and profiling in simulink®, you can address common challenges of designing systems for concurrent execution. partitioning enables you to designate regions of your model as tasks, independent of the details of the embedded multicore processing hardware. this independence enables you to arrange the content and hierarchy of your model to best suit the needs of your application. in a partitioned system, mapping enables you to assign", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_48", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "independence enables you to arrange the content and hierarchy of your model to best suit the needs of your application. in a partitioned system, mapping enables you to assign partitions to processing elements in your embedded processing system. use the simulink mapping tool to represent and manage the details of executing threads, hdl code on fpgas, and the work that these threads or fpgas perform. while creating your model, you do not need to track the partitions or data transfer between them because the tool does this work. also, you can reuse your model across multiple architectures. profiling simulates deployment of your", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_49", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "or data transfer between them because the tool does this work. also, you can reuse your model across multiple architectures. profiling simulates deployment of your application under typical computational loads. it enables you to determine the partitioning and mapping for your model that gives the best performance, before you deploy to your hardware. simulink tries to optimize the host computer performance regardless of the modeling method you use. for more information on the ways that simulink helps you to improve performance, see optimize performance. basic workflow to deploy your model to the target. set up your model for concurrent execution. for", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_50", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "helps you to improve performance, see optimize performance. basic workflow to deploy your model to the target. set up your model for concurrent execution. for more information about configuring your model for concurrent execution, see configure your model for concurrent execution. with these settings, simulink partitions your model based on the sample time of blocks at the root level, with each sample time in your model corresponding to a partition, and all blocks of a single rate or sample time belonging to the same partition. if you want to specify how to partition your model, use explicit partitioning. with explicit partition", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_51", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "of a single rate or sample time belonging to the same partition. if you want to specify how to partition your model, use explicit partitioning. with explicit partitioning, you must specify a target architecture, and then explicitly partition your model. for more information, see specify a target architecture, and partition your model using explicit partitioning. generate code and deploy it to your target. you can choose to deploy onto multiple targets. to build and deploy on a desktop target, see build on desktop. to deploy onto embedded targets using embedded coder®, see deploy generated software ( embedded coder ). to build and deploy on a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_52", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "see build on desktop. to deploy onto embedded targets using embedded coder®, see deploy generated software ( embedded coder ). to build and deploy on a real - time target using simulink real - time™, see standalone operation ( simulink real - time ). to deploy onto fpgas using hdl coder™, see deployment ( hdl coder ). deployment onto fpgas is supported only for explicitly partitioned models. optimize your design. this step is optional, and includes iterating over the design of your model and mapping to get the best performance, based on your", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_53", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##imize your design. this step is optional, and includes iterating over the design of your model and mapping to get the best performance, based on your metrics. one way to evaluate your model is to profile it and get execution times. how simulink helps you to overcome challenges in multicore programming manually programming your application for concurrent execution poses challenges beyond the typical challenges with manual coding. with simulink, you can overcome the challenges of portability across multiple architectures, efficiency of deployment for an architecture, and cyclic data dependencies between application components. for more information on these challenges, see challenges in multicore", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_54", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "multiple architectures, efficiency of deployment for an architecture, and cyclic data dependencies between application components. for more information on these challenges, see challenges in multicore programming. portability simulink enables you to determine the content and hierarchical needs of the modeled system without considering the target system. while creating model content, you do not need to keep track of the number of cores in your target system. instead, you select the partitioning methods that enable you to create model content. simulink generates code for the architecture you specify. you can select an architecture from the available supported architectures or add a custom architecture. when you", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_55", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "content. simulink generates code for the architecture you specify. you can select an architecture from the available supported architectures or add a custom architecture. when you change your architecture, simulink generates only the code that needs to change for the second architecture. the new architecture reuses blocks and functions. for more information, see supported targets for multicore programming and specify a target architecture. deployment efficiency to improve the performance of the deployed application, simulink allows you to simulate it under typical computational loads and try multiple configurations of partitioning and mapping the application. simulink compares the performance of each of these configurations to provide", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_56", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "to simulate it under typical computational loads and try multiple configurations of partitioning and mapping the application. simulink compares the performance of each of these configurations to provide the optimal configuration for deployment. this is known as profiling. profiling helps you to determine the optimum partition configuration before you deploy your system to the desired hardware. you can create a mapping for your application in which simulink maps the application components across different processing nodes. you can also manually assign components to processing nodes. for any mapping, you can see the data dependencies between components and remap accordingly. you can also introduce and remove data dependencies", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_57", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "to processing nodes. for any mapping, you can see the data dependencies between components and remap accordingly. you can also introduce and remove data dependencies between different components. cyclic data dependency some tasks of a system depend on the output of other tasks. the data dependency between tasks determines their processing order. two or more partitions containing data dependencies in a cycle creates a data dependency loop, also known as an algebraic loop. simulink does not allow algebraic loops to occur across potentially parallel partitions because of the high cost of solving the loop using parallel algorithms. in some cases, the algebraic loop is artificial. for", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_58", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "loops to occur across potentially parallel partitions because of the high cost of solving the loop using parallel algorithms. in some cases, the algebraic loop is artificial. for example, you can have an artificial algebraic loop because of model - block - based partitioning. an algebraic loop involving model blocks is artificial if removing the use of model partitioning eliminates the loop. you can minimize the occurrence of artificial loops. in the configuration parameter dialog boxes for the models involved in the algebraic loop, select model referencing > minimize algebraic loop occurrences. ensuring deterministic delay for periodic signals can also help break algebraic loops. to configure", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_59", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "algebraic loop, select model referencing > minimize algebraic loop occurrences. ensuring deterministic delay for periodic signals can also help break algebraic loops. to configure this setting, open model settings > solver > additional parameters > configure tasks. in the data transfer pane, set the default option for periodic signals to ensure deterministic transfer ( maximum delay ). additionally, if the model is configured for the generic real - time target ( grt. tlc ) or the embedded real - time target ( ert. tlc ) in the configuration parameters dialog box, clear the single output / update function", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_60", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "tlc ) or the embedded real - time target ( ert. tlc ) in the configuration parameters dialog box, clear the single output / update function check box. if the algebraic loop is a true algebraic condition, you must either contain all the blocks in the loop in one model partition, or eliminate the loop by introducing a delay element in the loop. the following examples show how to implement different types of parallelism in simulink. these examples contain models that are partitioned and mapped to a simple architecture with one cpu and one fpga. partition your model using explicit partitioning when you have a model that", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_61", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "that are partitioned and mapped to a simple architecture with one cpu and one fpga. partition your model using explicit partitioning when you have a model that is configured for concurrent execution, you can add tasks, create partitions, and map individual tasks to partitions using explicit partitioning. this enables you to execute different parts of your model to different parts of your architecture. for more information, see implicit and explicit partitioning of models. prerequisites for explicit partitioning to use explicit partitioning, you must meet the following prerequisites : set up your model for concurrent execution. for more information, see", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_62", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "explicit partitioning to use explicit partitioning, you must meet the following prerequisites : set up your model for concurrent execution. for more information, see configure your model for concurrent execution. convert all blocks at the root level of your model into one of the following types of blocks. models that are referenced using model blocks subsystem blocks matlab® system blocks matlab function blocks stateflow® charts for more information, see implicit and explicit partitioning of models. when using referenced models, replicate the model configuration parameters of the top model to the referenced models. consider using a single configuration reference to use", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_63", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "partitioning of models. when using referenced models, replicate the model configuration parameters of the top model to the referenced models. consider using a single configuration reference to use for all of your referenced models. for more information, see model configuration sets. select the target architecture on which to deploy your model. for more information, see specify a target architecture. add periodic triggers and tasks add periodic tasks for components in your model that you want to execute periodically. to add aperiodic tasks whose execution is trigger based, see add aperiodic triggers and tasks. if you want to explore the effects of increasing the concurrency on your model execution,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_64", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "tasks whose execution is trigger based, see add aperiodic triggers and tasks. if you want to explore the effects of increasing the concurrency on your model execution, you can create additional periodic tasks in your model. in the concurrent execution dialog box, right - click the periodic node and select add task. a task node appears in the configuration execution hierarchy. select the task node and enter a name and period for the task, then click apply. the task node is renamed to the name you enter. optionally, specify a color for the task. the color illustrates the block - to - task mapping. if you do not assign", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_65", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "to the name you enter. optionally, specify a color for the task. the color illustrates the block - to - task mapping. if you do not assign a color, simulink® chooses a default color. if you enable sample time colors for your model, the software honors the setting. click apply as necessary. to create more periodic triggers, click the add periodic trigger symbol. you can also create multiple periodic triggers with their own trigger sources. periodic triggers let you represent multiple periodic interrupt sources such as multiple timers. the periodicity of the trigger is either the base rate of the tasks that the trigger schedules, or", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_66", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "you represent multiple periodic interrupt sources such as multiple timers. the periodicity of the trigger is either the base rate of the tasks that the trigger schedules, or the period of the trigger. data transfers between triggers can only be ensure data integrity only types. with blocks mapped to periodic triggers, you can only generate code for ert. tlc and grt. tlc system target files. to delete tasks and triggers, right - click them in the pane and select delete. when the periodic tasks and trigger configurations are complete, configure the aperiodic ( interrupt ) tasks as necessary. if you", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_67", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "and select delete. when the periodic tasks and trigger configurations are complete, configure the aperiodic ( interrupt ) tasks as necessary. if you do not need aperiodic tasks, continue to map blocks to tasks, triggers, and nodes. add aperiodic triggers and tasks add aperiodic tasks for components in your model whose execution is interrupt - based. to add periodic tasks whose execution is periodic, see add periodic triggers and tasks. to create an aperiodic trigger, in the concurrent execution dialog box, right - click the concurrent execution node and click the add aperiodic trigger symbol. a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_68", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "an aperiodic trigger, in the concurrent execution dialog box, right - click the concurrent execution node and click the add aperiodic trigger symbol. a node named interruptn appears in the configuration tree hierarchy, where n is an integer. select interrupt. this node represents an aperiodic trigger for your system. specify the name of the trigger and configure the aperiodic trigger source. depending on your deployment target, choose either posix signal ( linux / vxworks 6. x ) or event ( windows ). for posix® signals, specify the signal number to use for delivering the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_69", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "( linux / vxworks 6. x ) or event ( windows ). for posix® signals, specify the signal number to use for delivering the aperiodic event. for windows® events, specify the name of the event. click apply. the software services aperiodic triggers as soon as possible. if you want to process the trigger response using a task : right - click the interrupt node and select add task. a new task node appears under the interrupt node. specify the name of the new task node. optionally, specify a color for the task. the color illustrates the block - to - task mapping", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_70", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "interrupt node. specify the name of the new task node. optionally, specify a color for the task. the color illustrates the block - to - task mapping. if you do not assign a color, simulink chooses a default color. once you have created your tasks and triggers, map your execution components to these tasks. for more information, see map blocks to tasks, triggers, and nodes. tip to set up your model for aperiodic tasks, connect the function call ports of the model blocks to asynchronous task specification ( simulink coder ) blocks. then map the asynchron", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_71", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "the function call ports of the model blocks to asynchronous task specification ( simulink coder ) blocks. then map the asynchronous task specification ( simulink coder ) blocks to aperiodic triggers. for more information regarding mapping interrupts, see map blocks to tasks, triggers, and nodes. map blocks to tasks, triggers, and nodes after you create the tasks and triggers, you can explicitly assign partitions to these execution elements. in the concurrent execution dialog box, click the tasks and mapping node. the tasks and mapping pane appears. if you add a model block to", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_72", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "elements. in the concurrent execution dialog box, click the tasks and mapping node. the tasks and mapping pane appears. if you add a model block to your model, the new block appears in the table with a select task entry under it. if you want to add a task to a block, in the name column, right - click a task under the block and select add new entry. to assign a task for the entry, click the box in the name column and select an entry from the list. for example, periodic tasks and an aperiodic trigger are mapped to specific blocks. the block - to - task", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_73", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "column and select an entry from the list. for example, periodic tasks and an aperiodic trigger are mapped to specific blocks. the block - to - task mapping symbol appears on the top - left corner of the model block for periodic tasks or triggers and the top - left corner of the inport block for aperiodic tasks or triggers. if you assign a model block to multiple tasks, multiple task symbols are displayed in the top - left corner. to display the concurrent execution dialog box from the block, click the block - to - task mapping symbol. system tasks allow you to perform mapping incrementally. if", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_74", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "concurrent execution dialog box from the block, click the block - to - task mapping symbol. system tasks allow you to perform mapping incrementally. if only one periodic trigger is present, simulink assigns any model blocks, subsystem blocks, or matlab system blocks that you have not explicitly mapped to a task, trigger, or hardware node to a task created by the system. simulink creates at most one system task for each rate in the model. if multiple periodic triggers are created, explicitly map the model block partitions, subsystems, or matlab system blocks to a task, trigger,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_75", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "the model. if multiple periodic triggers are created, explicitly map the model block partitions, subsystems, or matlab system blocks to a task, trigger, or hardware node. map model block partitions that contain continuous blocks to the same periodic trigger. you can map only model blocks to hardware nodes. also, if you map the model block to a hardware node and the model block contains multiple periodic sample times, clear the allow tasks to execute concurrently on target check box in the solver pane of the configuration parameters dialog box. when the mapping is complete, simulate the model again. execution profiling for real - time", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_76", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "in the solver pane of the configuration parameters dialog box. when the mapping is complete, simulate the model again. execution profiling for real - time applications this example shows how you can profile the task execution time and function execution time of your real - time application that is running on the target computer. using that information, you can then tune its performance. profiling is especially useful if you configure your real - time application to take advantage of multicore processors on the target computer. to profile the real - time application : in the configuration parameters dialog box for the model, enable the collection of function execution", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_77", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "##core processors on the target computer. to profile the real - time application : in the configuration parameters dialog box for the model, enable the collection of function execution time data during execution. build, download, and execute the model. start and stop the profiler. display the profiler data. the execution profiler and slrt overload options block use different mechanisms to measure tet and do not generate identical tet values. configure real - time application for function execution profiling slrt _ ex _ mds _ subsystem1 slrt _ ex _ mds _ subsystem2 sl", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_78", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "for function execution profiling slrt _ ex _ mds _ subsystem1 slrt _ ex _ mds _ subsystem2 slrt _ ex _ mds _ and _ tasks generate real - time application execution profile tg = slrealtime ; connect ( tg ) ; model ='slrt _ ex _ mds _ and _ tasks'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \" systemtargetfile \", modelstf ) ; open _ system ('slrt _ ex _ md", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_79", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": ") ; set _ param ( model, \" systemtargetfile \", modelstf ) ; open _ system ('slrt _ ex _ mds _ subsystem1') ; set _ param ('slrt _ ex _ mds _ subsystem1 ', \" systemtargetfile \", modelstf ) ; open _ system ('slrt _ ex _ mds _ subsystem2') ; set _ param ('slrt _ ex _ mds _ subsystem2 ', \" systemtargetfile \", models", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_80", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": ") ; set _ param ('slrt _ ex _ mds _ subsystem2 ', \" systemtargetfile \", modelstf ) ; evalc ('slbuild ( model )') ; load ( tg, model ) ; setstoptime ( tg, 20 ) ; startprofiler ( tg ) ; start ( tg ) ; pause ( 5 ) ; stopprofiler ( tg ) ; stop ( tg ) ; while 1 tmp = strcmp ( tg. profilerstatus,'dataavailable') ;", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_81", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": ") ; stop ( tg ) ; while 1 tmp = strcmp ( tg. profilerstatus,'dataavailable') ; if tmp = = true break end end profiler _ data = getprofilerdata ( tg ) ; plot ( profiler _ data ) ; report ( profiler _ data ) ; to display the profile data for a section of the model, in the section column, click the membrane button next to the task. to display the tet data for the section in simulation data inspector, click the plot time series data button. to view the section in", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_82", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "next to the task. to display the tet data for the section in simulation data inspector, click the plot time series data button. to view the section in simulink editor, click the link next to the expand tree button. to view the lines of generated code corresponding to the section, click the expand tree button, and then click the view source button. bdclose ( model ) ; bdclose ('slrt _ ex _ mds _ subsystem1') ; bdclose ('slrt _ ex _ mds _ subsystem2') ; schedule", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_83", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "_ subsystem1') ; bdclose ('slrt _ ex _ mds _ subsystem2') ; schedule ( embedded coder ) | report | plot | profilerdata | stopprofiler | startprofiler | resetprofiler | getprofilerdata | getavailableprofile | deleteprofilerdata plot run profiler and plot profiler data stop the profiler. stop the application. retrieve profiler data. call plot function on the data. profiler _ object — object that contains profiler result structure target", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_84", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "profiler. stop the application. retrieve profiler data. call plot function on the data. profiler _ object — object that contains profiler result structure targetname — name of speedgoat® target computer in target computer settings. modelinfo — information about model on which profiler ran : modelname — name of real - time application. matlabrelease — matlab release under which model was built. topics startprofiler ready status indicates that the target _ object exists, no profiling data is available, and the startprofiler function has not been called. startrequested status indicates that the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_85", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": "target _ object exists, no profiling data is available, and the startprofiler function has not been called. startrequested status indicates that the target _ object exists, no profiling data is available, the startprofiler function has started the profiler, and the real - time application is not loaded. running status indicates that the target _ object exists, profiling data is being collected, the startprofiler function has started the profiler, and the real - time application is loaded and running. dataavailable status indicates that the target _ object exists, profiling data is available, and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "f6c859e9fd584cb45146aee6835adea7_86", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-unsatisfactory-real-time-performance.html", "title": "Troubleshoot Unsatisfactory Real-Time Performance", "tags": ["R2024B", "R2025A"], "chunk_text": ", and the real - time application is loaded and running. dataavailable status indicates that the target _ object exists, profiling data is available, and the real - time application and the profiler have stopped. profile execution of real - time application check profiler status from target object property start the profiler, and then start the application. after the application stops, check the profiler status. target _ object — object that represents target computer slrealtime. target object app _ name — real - time application name character vector | string scalar", "token_count": 111, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "4c76e1d8cc0a4ac66f39a8aacbb08d34_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-for-streaming-or-file-log-logging.html", "title": "Troubleshoot Signals for Streaming or File Logging", "tags": [], "chunk_text": "troubleshoot signals for streaming or file logging there are signals selected for streaming or connected to file log blocks in a model that generate an error that includes the text : unable stream signal signal _ name. what this issue means this error message for signals selected for streaming or connected to file log blocks could indicate that the signal has one or more of these issues : the signal is not available in application. the signal does not use globally accessible memory in application. the signal connects to a send / messagesend block. the signal has inherited sample time. the signal is discontiguous. try these workarounds the workarounds for these", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "4c76e1d8cc0a4ac66f39a8aacbb08d34_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-for-streaming-or-file-log-logging.html", "title": "Troubleshoot Signals for Streaming or File Logging", "tags": [], "chunk_text": "send / messagesend block. the signal has inherited sample time. the signal is discontiguous. try these workarounds the workarounds for these issues vary. try these. workaround for signal not available make sure that these signal types are not being logged or streamed by name in the real - time application : virtual or bus signals ( including signals from bus creator blocks and virtual blocks ) signals that simulink optimizes away signals of complex or multiword data types blocks without alphanumeric names workaround for signal not global available or discontiguous signal to resolve, try inserting a signal copy block", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "4c76e1d8cc0a4ac66f39a8aacbb08d34_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-for-streaming-or-file-log-logging.html", "title": "Troubleshoot Signals for Streaming or File Logging", "tags": [], "chunk_text": "##word data types blocks without alphanumeric names workaround for signal not global available or discontiguous signal to resolve, try inserting a signal copy block ( a signal conversion block in signal copy mode ) into the signals that you want to stream. log the copied signal output instead. if you use a dashboard block, connect it to the output signal of the signal copy block. workaround for signal connected to message block to resolve, try streaming or file logging the input signal to the send / messagesend block. the output of the block ( a message ) cannot be streamed or logged. workaround for signal has inherited sample", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "4c76e1d8cc0a4ac66f39a8aacbb08d34_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-for-streaming-or-file-log-logging.html", "title": "Troubleshoot Signals for Streaming or File Logging", "tags": [], "chunk_text": "input signal to the send / messagesend block. the output of the block ( a message ) cannot be streamed or logged. workaround for signal has inherited sample time to resolve, change the signal sample time from inherited to a value. signals with inherited sample time cannot be streamed or logged. send animate and understand sending and receiving messages use a queue block to manage messages establish message send and receive interfaces between software components connect message receive interface with simulink functions input port _ enable — external enable signal scalar dependencies port _ 1 — input signal scalar | vector | matrix output port _ 1 — output message scalar |", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "4c76e1d8cc0a4ac66f39a8aacbb08d34_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-for-streaming-or-file-log-logging.html", "title": "Troubleshoot Signals for Streaming or File Logging", "tags": [], "chunk_text": "_ enable — external enable signal scalar dependencies port _ 1 — input signal scalar | vector | matrix output port _ 1 — output message scalar | vector | matrix show enable port — display the enable port off ( default ) | on programmatic use message send — create and send message c / c + + code generation generate c and c + + code using simulink® coder™. topics", "token_count": 83, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "troubleshoot signal data logging from send and receive blocks a model uses send and receive blocks. it would be helpful to view signal data from the message line ( output of send or input of receive ) in the simulation data inspector. unexpected data appears when a message line in simulink real - time explorer is selected for streaming to the simulation data inspector. what this issue means there are some guidelines to data logging message line signals : message line signals that are marked for logging with the simulation data inspector display the data accurately in the simulation data inspector. message line signals that are connected to file log blocks display the data accurately in the simulation data", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "the simulation data inspector display the data accurately in the simulation data inspector. message line signals that are connected to file log blocks display the data accurately in the simulation data inspector. message line signals that are selected for dynamic streaming with an instrument object — either by selecting the signals in simulink real - time explorer or adding the signals by using the application object api — do not display the data accurately in the simulation data inspector or in app designer instrument panel applications. for more information about message lines, see animate and understand sending and receiving messages. try this workaround to get accurate display of message line signals in the simulation data inspector,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "about message lines, see animate and understand sending and receiving messages. try this workaround to get accurate display of message line signals in the simulation data inspector, mark the signals for data logging in the model or connect the signals to file log blocks. file log post - process real - time signals streamed to the simulation data inspector this example shows how to use a simulink® real - time™ log of signal data and the simulation data inspector. signals are logged during model execution. at the end of the run, the simulation data inspector interface displays the signal. this example shows how to get the signals from the simulation data inspector", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "model execution. at the end of the run, the simulation data inspector interface displays the signal. this example shows how to get the signals from the simulation data inspector interface for post - processing by using matlab® functions. create target object and connect copy openexample command paste command in matlab to download and open example files tg = slrealtime ; connect ( tg ) ; open, build, and download model model ='slrt _ suspn _ 3dof'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \"", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "##n _ 3dof'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \" systemtargetfile \", modelstf ) ; set _ param ( model,'rtwverbose ','off') ; evalc ('slbuild ( model )') ; bdclose ( model ) ; run model to calculate the vertical vehicle displacement load ( tg, model ) ; setparam ( tg,'','cf ', 125 ) ; start ( tg ) ; while ~", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "( tg, model ) ; setparam ( tg,'','cf ', 125 ) ; start ( tg ) ; while ~ strcmp ( tg. status,'stopped') pause ( 5 ) ; end stop ( tg ) ; update parameters and re - calculate the vertical vehicle displacement load ( tg, model ) ; setparam ( tg,'','cf ', 2375 ) ; start ( tg ) ; while ~ strcmp ( tg. status,'stopped') pause ( 5 ) ; end stop ( tg ) ;", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "( tg ) ; while ~ strcmp ( tg. status,'stopped') pause ( 5 ) ; end stop ( tg ) ; display signals in simulation data inspector simulink. sdi. view retrieve and plot signal data from simulation data inspector get all the runs get the run information get the signal get the signal objects plot the signals runids = simulink. sdi. getallrunids ( ) ; for i = 1 : length ( runids ) run = simulink. sdi. getrun ( runids ( i ) ) ; signalid = run. getsign", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": ": length ( runids ) run = simulink. sdi. getrun ( runids ( i ) ) ; signalid = run. getsignalidsbyname ('vertical _ disp') ; if ~ isempty ( signalid ) signalobj = simulink. sdi. getsignal ( signalid ) ; signalarray ( :, i ) = signalobj. values ( :, 1 ). data ; timevalues = signalobj. values ( :, 1 ). time ; plot ( timevalues, signalarray ) ; drawnow", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "data ; timevalues = signalobj. values ( :, 1 ). time ; plot ( timevalues, signalarray ) ; drawnow ; end end grid on ; title ('response of a 3 - dof suspension model') ; xlabel ('time ( s )') ; ylabel ('vehicle vertical displacement ( m )') ; slrttetmonitor | slrt overload options animate and understand sending and receiving messages this example shows how to send, receive, and visualize messages. the example also shows how to use simulation data inspector, sequence viewer,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "sending and receiving messages this example shows how to send, receive, and visualize messages. the example also shows how to use simulation data inspector, sequence viewer, animation, and storage inspector to understand how messages flow in your model. model description sine wave — the signal source. the sample time parameter of the block is set to 0. 1. send — converts data signals and send messages. the specified value for the sample time parameter of the sine wave block determines the rate at which the send block sends messages. therefore, the send block sends one message every 0. 1 simulation time. queue — stores messages. observe the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "the rate at which the send block sends messages. therefore, the send block sends one message every 0. 1 simulation time. queue — stores messages. observe the message line between the send block and the queue block. the default capacity of the queue is 16, which means the queue block can store at most 16 messages. the default message sorting behavior is lifo, which means incoming messages are sorted based on last - in - first - out policy. by default, the overwrite the oldest element if queue is full check box is selected. when the queue is full, an incoming message overwrites the oldest message in the queue", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "overwrite the oldest element if queue is full check box is selected. when the queue is full, an incoming message overwrites the oldest message in the queue. for more information about using the queue block, see use a queue block to manage messages. receive — receives messages and converts them to signal data. in the block, sample time parameter is set to 0. 1. the receive block receives a message every 0. 1 simulation time. scope — visualizes messages received by the receive block. simulate the model and review results the sine wave block generates the sine wave signal ( green ). every 0. 1 simulation", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "received by the receive block. simulate the model and review results the sine wave block generates the sine wave signal ( green ). every 0. 1 simulation time, send block converts the value of the signal to a message and sends it to the queue block. simulation data inspector displays messages as stem plots. observe the simulation data inspector displaying sent messages ( purple ). the queue block sends messages to the receive block ( blue ). receive block output is the reconstructed sine wave signal ( orange ). use sequence viewer to visualize messages to activate logging events, in the simulink toolstrip, on the simulation tab,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "##e wave signal ( orange ). use sequence viewer to visualize messages to activate logging events, in the simulink toolstrip, on the simulation tab, in the prepare section, click log events. simulate your model. to open the sequence viewer tool, on the simulation tab, in the review results section, click sequence viewer. use animation and storage inspector display message payload using port value labels open _ system ('simplemessagesportvaluemodel') ; sine wave | send | receive | queue | hit crossing probe | sequence viewer application application _ name — name of real - time application ( character vector", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": ") ; sine wave | send | receive | queue | hit crossing probe | sequence viewer application application _ name — name of real - time application ( character vector or string scalar ). for example,'slrt _ ex _ osc _ inport '. this argument is the file name without the. mldatx file extension of the mldatx file that the build produces on the development computer. app _ object — represent real - time application files on the development computer. this argument provides access to methods that manipulate the real - time application files. applicationname — name of real - time application character vector", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "files on the development computer. this argument provides access to methods that manipulate the real - time application files. applicationname — name of real - time application character vector | string scalar modelname — name of simulink model character vector | string scalar userdata — user data to be add to real - time application [ ] ( default ) | character vector | numeric vector | cell array options — real - time application options character vector | string scalar filelogmaxruns selects the number of simulation runs that are stored for the real - time application when file logging is enabled. loglevel selects the log message", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "##logmaxruns selects the number of simulation runs that are stored for the real - time application when file logging is enabled. loglevel selects the log message level for the target computer system log. the available levels are error, warning, info, debug, and trace. overridebaserateperiod selects an override value for the application base rate period. pollingthreshold selects the sample rate below which the rtos thread scheduler switches polling mode, instead of interrupt - driven mode, for clocking the real - time application. polling mode can be useful for reducing sample time jitter. but,", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "mode, instead of interrupt - driven mode, for clocking the real - time application. polling mode can be useful for reducing sample time jitter. but, enabling this option causes the real - time application to consume a cpu core completely to clock and execute the base rate. startupparameterset indicates the start up parameter set from the parameterset objects that have been added to the application object. to change the selection, use the updatestartupparameterset function. stoptime selects the stop time for the real - time application. extract asap2 file create an application object for the real - time application. retrieve the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": ". stoptime selects the stop time for the real - time application. extract asap2 file create an application object for the real - time application. retrieve the asap2 file from the real - time application. update root - level inport data change inport waveform data from a square wave to sine wave. create an application object. update the inport data. download the updated inport data to the default target computer. get and set application options view application options by getting the application options property values. change the application stop time value option. note you can inadvertently delete existing file logs for an installed real -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "application options by getting the application options property values. change the application stop time value option. note you can inadvertently delete existing file logs for an installed real - time application on the target computer if you use the slrealtime. application function to change the options for filelogmaxruns and then reload the application. to change the number of stored logs without deleting existing logs, load the real - time application and then change the filelogmaxruns option by using the start ( tg ) function. save application options to a matlab variable. apply options from the variable to the real - time application by", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "option by using the start ( tg ) function. save application options to a matlab variable. apply options from the variable to the real - time application by using the load function. get application signals and parameters get the application signals values as structures in an array. view application signals as array elements. get the application parameters values as structures in an array. view application parameters as array elements. r2022b : added application parameter set options and auto save topics real - time signal logging and parameter tuning tune decimation for file log data without model rebuild input s — signal data for file log scalar | vector | matrix |", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "time signal logging and parameter tuning tune decimation for file log data without model rebuild input s — signal data for file log scalar | vector | matrix | array | bus | nonvirtual bus decimation — applies decimation to file log data 1 ( default ) | integer getallfilelogblocks getfilelogdecimation setfilelogdecimation programmatic use input processing — selects processing mode for file log data elements as channels ( sample based ) ( default ) | columns as channels ( frame based ) c / c + + code generation generate c and c + + code using", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1be84dc1709cce16b4bc3efa85e01696_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-send-and-receive-blocks.html", "title": "Troubleshoot Signal Data Logging from Send and Receive Blocks", "tags": ["R2022A", "R2022B", "Values"], "chunk_text": "as channels ( sample based ) ( default ) | columns as channels ( frame based ) c / c + + code generation generate c and c + + code using simulink® coder™. r2022a : decimation, log retention, and frame - based input", "token_count": 57, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "troubleshoot signal data logging from inport in referenced model in test harness a simulink® test™ test harness is available for a simulink real - time™ model. the model has a referenced model that contains an inport whose signal are marked for data logging in the simulation data inspector. during testing, this error occurs : warning : streaming to the sdi is not available for signal at < sldiag objui = \" outport \" objparam = \" 1 \" objname = \" {'example _ harness1 / example ','example / input'} \" > output port 1", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "##param = \" 1 \" objname = \" {'example _ harness1 / example ','example / input'} \" > output port 1 < / sldiag > of block'{'example _ harness1 / example ','example / input'} '. add a signalcopy block at that port and instrument the signalcopy output port. what this issue means it is not possible to stream signal data from the referenced model inport for logging from within the test harness. try this workaround mark the input signals to the model block for logging. this model provides an example workaround.", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "##port for logging from within the test harness. try this workaround mark the input signals to the model block for logging. this model provides an example workaround. for more information, see the simulink test documentation. test real - time application in simulink test this example shows how to perform a frequency - response test of the model slrt _ ex _ osc _ sltest. slrt _ ex _ osc _ sltest using this information, in the design phase, you can modify the internal parameters of the model to meet your frequency requirements. in the production phase, you can bin manufactured parts based on frequency", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "the design phase, you can modify the internal parameters of the model to meet your frequency requirements. in the production phase, you can bin manufactured parts based on frequency response. open the model copy openexample command paste command in matlab to download and open example files model ='slrt _ ex _ osc _ sltest'; open _ system ( model ) ; step 1. create frequency parameter open model explorer. create a simulink® parameter frequency in model workspace for model slrt _ ex _ osc _ sltest. mark the parameter as a model argument. enter a default value of 1.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "in model workspace for model slrt _ ex _ osc _ sltest. mark the parameter as a model argument. enter a default value of 1. change the storage class to be model default. open the signal generator block parameters and change the frequency parameter to be the new simulink parameter frequency. step 2. create test harness on the simulink apps tab, click simulink test. on the test tab, click add test harness. the software creates a test harness with the default name slrt _ ex _ osc _ sltest _ harness1. in the basic properties tab, for the input to", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "creates a test harness with the default name slrt _ ex _ osc _ sltest _ harness1. in the basic properties tab, for the input to component under test, select none. for the output from component under test, select outport. select the add separate assessment block check box. select the open harness after creation check box. take the defaults in the remaining tabs. in simulink editor, on the test tab, click manage test harnesses. click slrt _ ex _ osc _ sltest _ harness1. step 3. configure test harness open the test assessment block.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "##es. click slrt _ ex _ osc _ sltest _ harness1. step 3. configure test harness open the test assessment block. to simplify the test assessment configuration, in the input symbol list, delete the existing input outport and add inputs int1 and siggen. open the block parameters for the test assessment block and change the show port labels option to fromporticon. this will show the input symbol names next to the port icon of the block. in slrt _ ex _ osc _ sltest _ harness1, connect a demux block to the signal named out.", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "port icon of the block. in slrt _ ex _ osc _ sltest _ harness1, connect a demux block to the signal named out. in the demux block dialog box, set number of outputs to 2. connect the top demux block output to test assessment / int1 and the bottom output to test assessment / siggen. step 4. configure simulink parameters open the model explorer. on the modeling tab, pull down the design section and click model explorer. in the toolbar, click the add simulink parameter button. add the following simulink. parameter", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "pull down the design section and click model explorer. in the toolbar, click the add simulink parameter button. add the following simulink. parameter object : name — criterion value — 0 datatype — double storage class — exportedglobal step 5. setup frequency argument right click on slrt _ ex _ osc _ sltest _ harness1 / slrt _ ex _ osc _ sltest. select block parameter ( model reference ). select instance parameters on pop out window. mark frequency as an argument. step 6. prepare test assessment steps criterion w _ open w _ close hicheck when (", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "instance parameters on pop out window. mark frequency as an argument. step 6. prepare test assessment steps criterion w _ open w _ close hicheck when ( ( et > = w _ open ) & & ( et < = w _ close ) ) verify ( ( abs ( int1 ) > = abs ( siggen ) * ( 1. 0 - criterion ) ) & &... ( abs ( int1 ) < = abs ( siggen ) * ( 1. 0 + criterion ) ) ) ; lo when ( siggen < 0 ) locheck when ( ( et > = w _ open", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": ") * ( 1. 0 + criterion ) ) ) ; lo when ( siggen < 0 ) locheck when ( ( et > = w _ open ) & & ( et < = w _ close ) ) verify ( ( abs ( int1 ) > = abs ( siggen ) * ( 1. 0 - criterion ) ) & &... ( abs ( int1 ) < = abs ( siggen ) * ( 1. 0 + criterion ) ) ) ; step 7. initialize test suite open the slrt _ ex _ osc _ sltest _ harness1 test harness if not already", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "criterion ) ) ) ; step 7. initialize test suite open the slrt _ ex _ osc _ sltest _ harness1 test harness if not already open. then, click on the slrt _ ex _ osc _ sltest subsystem. on the harness tab, click simulink test manager. name the test file realtimetest. right - click on the existing test suite and click delete to remove the example test file contents. right - click the test file and select new > real - time test. in the new real - time test dialog box, enter simulation in the test type", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "right - click the test file and select new > real - time test. in the new real - time test dialog box, enter simulation in the test type field. click create. rename the new test case to frequencysweep. rename the new test suite to realtimesuite. step 8. initialize system under test in the simulink test manager, select test case frequencysweep. select tab system under test. set model to slrt _ ex _ osc _ sltest. expand the test harness tab, set harness to slrt _ ex _ osc _ sltest _ harness", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "slrt _ ex _ osc _ sltest. expand the test harness tab, set harness to slrt _ ex _ osc _ sltest _ harness1. expand the simulation settings overrides tab, select the stop time check box. take the defaults for the other fields. step 9. initialize parameter overrides step 10. create scripted iterations cstartfreq = 15. 0 start frequency of parameter sweep. cstopfreq = 25. 0 end frequency of parameter sweep. cfreqincr = 1. 0 frequency increment. cwopen = 0. 90 start", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "##q = 25. 0 end frequency of parameter sweep. cfreqincr = 1. 0 frequency increment. cwopen = 0. 90 start of time window for evaluating criterion. cwclose = 0. 99 end of time window for evaluating criterion. ccriterion = 0. 025 maximum normalized amplitude difference between signal generator and integrator1 within the time window. vfreq frequency at each iteration. vw _ open window opens once in each half - period. vw _ close window closes once in each half - period. in the text box, enter the following code. to", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "opens once in each half - period. vw _ close window closes once in each half - period. in the text box, enter the following code. to resize the scripted iterations text box, click and drag the lower - right corner of the box. % initialize constants cstartfreq = 15. 0 ; cstopfreq = 25. 0 ; cfreqincr = 1. 0 ; cwopen = 0. 90 ; cwclose = 0. 99 ; ccriterion = 0. 025 ; % loop through test frequencies for vfreq = cstartf", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "; cwclose = 0. 99 ; ccriterion = 0. 025 ; % loop through test frequencies for vfreq = cstartfreq : cfreqincr : cstopfreq % create a new iteration testitr = sltest. testmanager. testiteration ( ) ; % calculate the time window half _ period = 0. 5 * ( 1. 0 / vfreq ) ; vw _ open = half _ period * cwopen ; vw _ close = half _ period * cwclose ; % set the parameters for the iteration testit", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "_ open = half _ period * cwopen ; vw _ close = half _ period * cwclose ; % set the parameters for the iteration testitr. setvariable ('name ','frequency ','source ',...'slrt _ ex _ osc _ sltest ','value ', vfreq ) ; testitr. setvariable ('name ','w _ open ','source ',...'','value ', vw _ open ) ; testitr. setvariable ('name ',", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "' source ',...'','value ', vw _ open ) ; testitr. setvariable ('name ','w _ close ','source ',...'','value ', vw _ close ) ; testitr. setvariable ('name ','criterion ','source ',...'','value ', ccriterion ) ; % name and add the iteration to the testcase str = sprintf ('%. 0f hz ', vfreq ) ; additeration", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "name and add the iteration to the testcase str = sprintf ('%. 0f hz ', vfreq ) ; additeration ( sltest _ testcase, testitr, str ) ; end step 11. run test connect to your target computer. build and download real - time application slrt _ ex _ osc _ sltest to the target computer. in the simulink test manager, click the run button with the test case selected. to view test results, in the left column, click results and artifacts. in this case, the test failed at iteration 23 hz.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "the test case selected. to view test results, in the left column, click results and artifacts. in this case, the test failed at iteration 23 hz. to view the failing results, open nodes 23 hz > verify statements and 23 hz > sim output ( slrt _ ex _ osc _ sltest ). step 12. display results in the data inspector tab, select the subplots button. select a 2x1 grid configuration. in the simulation data inspector top display, select the two out check boxes and the top test assessment check box. this assessment corresponds to the hicheck substep. in the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "ac0dc552407dc206b80d65d69e8aeef0_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-mode-test-harness.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model in Test Harness", "tags": ["Parameter", "TestIteration"], "chunk_text": "inspector top display, select the two out check boxes and the top test assessment check box. this assessment corresponds to the hicheck substep. in the bottom display, select the two out check boxes and the bottom test assessment check box. this assessment corresponds to the locheck substep. click the zoom in time button and select the range 4. 00 - 4. 1. test assessment ( simulink test ) | test sequence ( simulink test )", "token_count": 95, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "troubleshoot signal data logging from inport in referenced model a model contains referenced models. the referenced models have root - inport signals that would be helpful to log and stream to the simulation data inspector for visualization. when these signals are marked in the model for logging, a warning occurs in the diagnostic viewer when building the model : warning : streaming to the sdi is not available for signal at < sldiag objui = \" outport \" objparam = \" 1 \" objname = \" {'a / b ','b / b1'} \" > output port 1 < / sldia", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "##m = \" 1 \" objname = \" {'a / b ','b / b1'} \" > output port 1 < / sldiag > of block'{'a / b ','b / b1'} '. add a signalcopy block at that port and instrument the signalcopy output port. what this issue means the warning message reports that the root - inport signals of referenced models are not available for streaming. within top model a, the referenced model root inports that generate this warning message appear in referenced model a / b and referenced model a / b / c.", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "within top model a, the referenced model root inports that generate this warning message appear in referenced model a / b and referenced model a / b / c. top model a referenced model a / b referenced model a / b / c try this workaround to instrument a root - inport signal in a referenced model and stream the signal to the simulation data inspector, you can connect the signal to a signal conversion block that you configure as a signal copy block. mark the output of the signal copy block for logging to the simulation data inspector. real - time signal logging and streaming basics simulink® real - time", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": ". mark the output of the signal copy block for logging to the simulation data inspector. real - time signal logging and streaming basics simulink® real - time™ signal logging with a file log block or signal streaming from a real - time application differs from non - real - time signal logging in simulink. the differences include : real - time file logging of signals acquires signal data during a real - time application run and stores it on the speedgoat® target computer. after the real - time application stops writing to the log file, the signal data can be transferred from the target computer to the development computer for analysis", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "target computer. after the real - time application stops writing to the log file, the signal data can be transferred from the target computer to the development computer for analysis. you can plot and analyze the data, and later save it to a disk on the matlab® development computer. real - time signal streaming uses an instrument that you add to the real - time application. you add signals to the instrument by using selections from the real - time tab in the simulink editor, by selecting signals for streaming in the simulink real - time explorer, by marking signals for logging, or by adding other signal viewers such as a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "editor, by selecting signals for streaming in the simulink real - time explorer, by marking signals for logging, or by adding other signal viewers such as a scope block. the streaming signal data is transferred from the target computer to the development computer while the real - time application is running. this graphic shows the signal data flow for visualizing signals by using real - time signal logging and streaming. retain real - time signal data for post - processing you can visualize and analyze real - time signal data in the simulation data inspector after running the real - time application. to select these signals in the model before building the real - time", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "analyze real - time signal data in the simulation data inspector after running the real - time application. to select these signals in the model before building the real - time application : mark signals for logging to the simulation data inspector. the streamed signal data for these signals is visible while the real - time application is running and available in the simulation data inspector after the real - time application stops. connect signals to file log blocks for logging to a file on the target computer. after the real - time application stops writing the log file, the signal data is imported into the simulation data inspector. with regards to file logging : real - time signal logging", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "real - time application stops writing the log file, the signal data is imported into the simulation data inspector. with regards to file logging : real - time signal logging to a log file samples at the base sample time by default. you can observe signals that are present in the real - time application. some signals are not observable. simulink real - time explorer works with multidimensional signals in column - major format. display real - time signal data without retaining for post - processing most types of signal streaming permit viewing signal data only during a real - time application run on the target computer. for these run - time", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "retaining for post - processing most types of signal streaming permit viewing signal data only during a real - time application run on the target computer. for these run - time - only viewers, signal streaming can use a viewer that you add to the model before building the real - time application, use an instrument that you add to the real - time application, or use a viewer — such as an app designer instrument panel — that connects to the real - time application. types of run - time - only signal viewers include : adding a scope block or other viewer to the model for viewing signals in a scope window during external mode simulation with the model", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "- time - only signal viewers include : adding a scope block or other viewer to the model for viewing signals in a scope window during external mode simulation with the model connected to the real - time application. adding signals to an instrument in the real - time application by using selections from the real - time tab in the simulink editor or by selecting signals for streaming in the simulink real - time explorer. you can view these signals in the simulation data inspector or on an axes tab in the simulink real - time explorer. connecting signals to an axes component or other viewer in an app designer instrument panel for viewing signals in", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "an axes tab in the simulink real - time explorer. connecting signals to an axes component or other viewer in an app designer instrument panel for viewing signals in the app while the real - time application runs. real - time signal logging is affected by how application is run the run on target button provides slightly different data logging support than running the real - time application by using the start ( tg ) function : start ( tg ) when you run the real - time application by using the start ( tg ) function, only signals marked for signal logging or connected to a file log block are logged to the simulation data inspector.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "application by using the start ( tg ) function, only signals marked for signal logging or connected to a file log block are logged to the simulation data inspector. when you run the real - time application by using the run on target button on the real - time tab in the simulink editor or the start button in the simulink real - time explorer, signals marked for logging, signals connected to file log blocks, and signals connected to scope blocks are logged to the simulation data inspector. signal triggering for external mode simulation when setting up signal triggering ( source set to signal ), explicitly specify the element number of the signal in", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "the simulation data inspector. signal triggering for external mode simulation when setting up signal triggering ( source set to signal ), explicitly specify the element number of the signal in the trigger signal : element box. if the signal is a scalar, enter a value of 1. if the signal is a wide signal, enter a value from 1 to 10. when uploading simulink real - time signals to simulink scopes, do not enter last or any in this box. 1 10 last any the direction : holdoff value does not affect the simulink real - time signal uploading feature. for more information about external", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "441d4ec3c8697c9899f88786285b4eff_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-inport-ref-model.html", "title": "Troubleshoot Signal Data Logging from Inport in Referenced Model", "tags": [], "chunk_text": "box. 1 10 last any the direction : holdoff value does not affect the simulink real - time signal uploading feature. for more information about external mode, see simulink external mode interface. file log | enable file log | import | start | stop | startrecording | stoprecording", "token_count": 64, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "troubleshoot signal data logging from nonvirtual bus, fixed - point, and multidimensional signals some models use signals in nonvirtual buses, signals with fixed - point data types, and multidimensional signals that have a number of dimensions greater than two. it would be helpful to view signal data from these signals in the simulation data inspector. the data for these signals is not visible when they are selected in simulink real - time explorer for streaming to the simulation data inspector. what this issue means there are some guidelines to data logging signals in nonvirtual buses, signals with fixed - point", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "for streaming to the simulation data inspector. what this issue means there are some guidelines to data logging signals in nonvirtual buses, signals with fixed - point data types, and multidimensional signals that have a number of dimensions greater than two : when these signals are marked for logging with the simulation data inspector, the signal data displays in the simulation data inspector. when these signals are connected to file log blocks, the signal data displays in the simulation data inspector. when these signals are selected for dynamic streaming with an instrument object — either by selecting the signals in simulink real - time explorer or adding the signals by using", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "when these signals are selected for dynamic streaming with an instrument object — either by selecting the signals in simulink real - time explorer or adding the signals by using the application object api, the signal data does not display in the simulation data inspector or in app designer instrument panel applications. try this workaround there are workarounds to get signals in nonvirtual buses, signals with fixed - point data types, and mutidimensional signals ( that have a number of dimensions greater than two ) to display in the simulation data inspector. signals in nonvirtual buses to get signals in nonvirtual buses to", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "number of dimensions greater than two ) to display in the simulation data inspector. signals in nonvirtual buses to get signals in nonvirtual buses to display in the simulation data inspector, mark the signals for data logging in the model or connect the signals to file log blocks. to instrument signals in nonvirtual buses to stream to an instrument object, use the buselement argument in the addsignal, connectline, or connectscalar methods. signals with fixed - point data types to get signals with fixed - point data types to display in the simulation data inspector, mark the signals for data logging in the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "signals with fixed - point data types to get signals with fixed - point data types to display in the simulation data inspector, mark the signals for data logging in the model or connect the signals to file log blocks. multidimensional signal to get signals in multidimensional signals ( that have a number of dimensions greater than two ) to display in the simulation data inspector, mark the signals for data logging in the model or connect the signals to file log blocks. bus creator | fixdt | addsignal | connectline | connectscalar variable - size signal basics a simulink® signal can be a scalar,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "creator | fixdt | addsignal | connectline | connectscalar variable - size signal basics a simulink® signal can be a scalar, vector ( 1 - d ), matrix ( 2 - d ), or n - d. a simulink variable - size signal is a signal whose size ( the number of elements in a dimension ), in addition to its values, can change during a model simulation. however, during a simulation, the number of dimensions cannot change. this capability allows you to model systems with varying resources, constraints, and environments. you can create variable - size signals in your sim", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "number of dimensions cannot change. this capability allows you to model systems with varying resources, constraints, and environments. you can create variable - size signals in your simulink model by using : switch or multiport switch blocks with different input ports having fixed - size signals with different sizes. the output is a variable - size signal. a selector block with the starting and ending indices ( port ) indexing option. the index port signal can specify different subregions of the input data signal which produce an output signal of variable size as the simulation progresses. an s - function block with the output port configured for a variable - size signal", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "input data signal which produce an output signal of variable size as the simulation progresses. an s - function block with the output port configured for a variable - size signal. the output includes not only the values but also the dimension of the signal. a matlab function block with the output configured for a variable - size signal. how variable - size signals propagate in the simulink environment, variable - size signals can change their size during model execution in one of two ways : at every step of model execution various blocks in the model modify the sizes of the signals during execution of the output method. only during initialization of conditional", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "ways : at every step of model execution various blocks in the model modify the sizes of the signals during execution of the output method. only during initialization of conditionally executed subsystems size changes occur during distinct mode - switching events in subsystems such as action, enable, and function - call subsystems. you can see the key difference by considering a discrete 2 - tap filter block with states. discrete 2 - tap filter assume that the input signal dimension to this filter changes from 4 to 1 during simulation. it is ambiguous when and how the states of the unit delay blocks should adapt from 4 to 1 to continue processing the input.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "from 4 to 1 during simulation. it is ambiguous when and how the states of the unit delay blocks should adapt from 4 to 1 to continue processing the input. to ensure consistency, both unit delay blocks must change their state behavior synchronously. to prevent ambiguity, simulink generally disallows blocks whose number of states depends on input signal sizes in contexts where signal sizes change at any point during execution. in contrast, consider the same discrete 2 - tap filter block in a function - call subsystem. assume that this subsystem is using the second way to propagate variable - size signals", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "filter block in a function - call subsystem. assume that this subsystem is using the second way to propagate variable - size signals. in this case, the size of the input signal changes from 4 to 1 only at the initialization of the subsystem. at initialization, the subsystem resets all of its states ( including the states of the two unit delay blocks ) to their initial values. resetting the subsystem ensures no ambiguity on the assignment of states to the input signal of the filter. mode - dependent variable - size signals shows how you can use", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "subsystem ensures no ambiguity on the assignment of states to the input signal of the filter. mode - dependent variable - size signals shows how you can use the two ways of propagating variable - size signals in a complementary fashion to model complex systems. determine whether signal line has variable size the following example demonstrates how to use commands at the command prompt or in a script to determine whether a signal line has a variable size. in a large model or hierarchy of subsystems or referenced models, use this technique to determine whether a signal has a variable size due to an upstream block. the example model sldemo _ varsi", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##systems or referenced models, use this technique to determine whether a signal has a variable size due to an upstream block. the example model sldemo _ varsize _ basic contains a signal a that is downstream of a switch block. open the example model. select the sum block whose output signal is labeled a. type the following at the command window to set the model to a compiled state ( similar to a diagram update ). sldemo _ varsize _ basic ( [ ], [ ], [ ],'compile') get a handle to the block output port. porthandles = get _ para", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "basic ( [ ], [ ], [ ],'compile') get a handle to the block output port. porthandles = get _ param ( gcb,'porthandles') ; outporthandle = porthandles. outport ; query the programmatic parameter compiledportdimensionsmode of the output port. varsize = get _ param ( outporthandle,'compiledportdimensionsmode') varsize = 1 the value of the variable varsize is 1, which indicates that the signal a has variable size. the value 0", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##de') varsize = 1 the value of the variable varsize is 1, which indicates that the signal a has variable size. the value 0 indicates that a signal does not have variable size. terminate the model compilation. sldemo _ varsize _ basic ( [ ], [ ], [ ],'term') empty signals an empty signal is a signal with a length of 0. for example, signals with size [ 0 ], [ 0x3 ], [ 2x0 ], and [ 2x0x3 ] are all empty signals. simulink allows empty signals with", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "[ 0x3 ], [ 2x0 ], and [ 2x0x3 ] are all empty signals. simulink allows empty signals with variable - size signals and supports most element - wise operations. however, simulink does not support empty signals for blocks that modify signal dimensions. unsupported blocks include reshape, permute, and sum along a specified dimension. 0 [ 0 ] [ 0x3 ] [ 2x0 ] [ 2x0x3 ] simulink block support for variable - size signals the simulink block data type support table includes a complete list of", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "] [ 2x0x3 ] simulink block support for variable - size signals the simulink block data type support table includes a complete list of blocks that support variable - size signals. to view the table : open a simulink model. in the matlab® command line, enter showblockdatatypetable. a separate window with the simulink block data type support table opens. an x in the variable - size support column indicates support for that block. tip you can also view the table by entering showblockdatatypetable at the command prompt. subsystem initialization of variable", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "for that block. tip you can also view the table by entering showblockdatatypetable at the command prompt. subsystem initialization of variable - size signals the initial signal size from an outport block in a conditionally executed subsystem varies depending on the parameters you select. if you set the propagate sizes of variable - size signals parameter in the parent subsystem to during execution, the initial output parameter for the output block must not exceed the maximum size of the input port. if the initial output parameter value is : if you set the propagate sizes of variable - size signals", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "must not exceed the maximum size of the input port. if the initial output parameter value is : if you set the propagate sizes of variable - size signals parameter in the parent subsystem to only when enabling, the initial output parameter for the output block must be a scalar value. when size is repropagated for the input of the outport block, the initial output value is set using scalar expansion from the scalar parameter value. if the initial output parameter is the default value [ ], simulink treats the initial output as a grounded value. if the model does not activate the parent sub", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "the initial output parameter is the default value [ ], simulink treats the initial output as a grounded value. if the model does not activate the parent subsystem at start time ( t = 0 ), the current size of the subsystem output corresponding to the outport block is set to maximum size. when its parent subsystem repropagates signal sizes, the values of the subsystem variable - size output signals are also reset to their initial output parameter values. conditionally executed subsystem blocks control port blocks are in conditionally executed subsystems. you can set the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "also reset to their initial output parameter values. conditionally executed subsystem blocks control port blocks are in conditionally executed subsystems. you can set the propagate sizes of variable - size signals parameter for these blocks to during execution, only when execution is resumed ( action port ), and only when enabling ( enable and trigger or function - call ). during execution only when execution is resumed only when enabling action port enable trigger — trigger type set to function - call switching blocks switching blocks support variable - size signals by allowing input signals with different sizes and propagating the size of the input signal to the output signal.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "call switching blocks switching blocks support variable - size signals by allowing input signals with different sizes and propagating the size of the input signal to the output signal. you can set the allow different data input sizes parameter for these blocks on the signal attributes pane to either on or off. switch multiport switch manual switch variable - size signal limitations the following table describes variable - size signal limitations. nonvirtual buses that contain variable - size signals directly or in nested buses buses with nested nonvirtual buses that contain variable - size signals signal basics a signal is a time - varying quantity that has values at all points", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "buses buses with nested nonvirtual buses that contain variable - size signals signal basics a signal is a time - varying quantity that has values at all points in time. you can specify a wide range of signal attributes, including : signal name data type ( for example, 8 - bit, 16 - bit, or 32 - bit integer ) numeric type ( real or complex ) dimensionality ( one - dimensional, two - dimensional, or multidimensional array ) in simulink®, signals are the outputs of dynamic systems represented by blocks in a simulink diagram and by the diagram itself. the lines in", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_23", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": ") in simulink®, signals are the outputs of dynamic systems represented by blocks in a simulink diagram and by the diagram itself. the lines in a block diagram represent mathematical relationships among the signals defined by the block diagram. for example, a line connecting the output of block a to the input of block b indicates that the signal output of b depends on the signal output of a. simulink block diagrams represent signals with lines that have an arrowhead. the source of the signal corresponds to the block that writes to the signal during evaluation of its block methods ( equations ). the destinations of the signal are blocks that", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_24", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "the source of the signal corresponds to the block that writes to the signal during evaluation of its block methods ( equations ). the destinations of the signal are blocks that read the signal during the evaluation of the block methods ( equations ). the destination of signals in a model do not necessarily represent the order of simulation of blocks in a model. the simulation order is determined by simulink automatically. note simulink signals are mathematical, not physical, entities. the lines in a block diagram represent mathematical, not physical, relationships among blocks. simulink signals do not travel along the lines that connect blocks in the same way that electrical", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_25", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "a block diagram represent mathematical, not physical, relationships among blocks. simulink signals do not travel along the lines that connect blocks in the same way that electrical signals travel along a wire. block diagrams do not represent physical connections between blocks. you can create a signal by adding a source block to your model. for example, you can create a signal that varies sinusoidally with time by adding an instance of the sine, cosine block from the simulink sources library into your model. to see a list of the blocks that create signals in a model, see sources. alternatively, you can use the viewers", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_26", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##ulink sources library into your model. to see a list of the blocks that create signals in a model, see sources. alternatively, you can use the viewers and generators manager to create signals in your model without using blocks. signal line styles a simulink model can include many different types of signals. as you construct a block diagram, all signal types appear as a thin, solid line. after you update the diagram or start simulation, the signals appear with the specified line styles. these signal types enable you to differentiate between different signal types. from all signal types, you can only customize the nonscalar signal type.", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_27", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "line styles. these signal types enable you to differentiate between different signal types. from all signal types, you can only customize the nonscalar signal type. to learn more, see signal types. signal properties you may want to specify signal properties in your model to give a name or a label to your signals, prepare data for logging, or to customize your signals in a model. use the property inspector, the model data editor, or the signal properties dialog box to specify properties for : signal names and labels signal logging simulink coder™ to use to generate code documentation of the signal to access the signal properties", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_28", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "box to specify properties for : signal names and labels signal logging simulink coder™ to use to generate code documentation of the signal to access the signal properties in the property inspector, first display the property inspector. on the modeling tab, under design, click property inspector. when you select a signal, the properties appear in the property inspector. to open the model data editor, on the modeling tab, click model data editor. then, inspect the signals tab and select a signal. to use the signal properties dialog box, right - click a signal and select properties. to specify signal properties programmatically, use a function", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_29", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "a signal. to use the signal properties dialog box, right - click a signal and select properties. to specify signal properties programmatically, use a function such as get _ param to create a variable that holds the handle to the block output port that creates the signal line. then, use set _ param to set the programmatic parameters of the port. for example : p = get _ param ( gcb,'porthandles') l = get _ param ( p. outport,'line') set _ param ( l,'name ','s9') you", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_30", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "= get _ param ( p. outport,'line') set _ param ( l,'name ','s9') you can name a signal interactively or programmatically in a model. the syntactic requirements for a signal name depend on how you use the name. the most common cases are : do not use a less than character ( < ) to start a signal name. the signal name can resolve to a simulink. signal object. ( see simulink. signal. ) the signal name must then be a legal matlab® identifier. this ident", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_31", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##k. signal object. ( see simulink. signal. ) the signal name must then be a legal matlab® identifier. this identifier starts with an alphabetic character, followed by alphanumeric or underscore characters up to the length given by the function namelengthmax. the signal has a name so the signal can be identified and referenced by name in a data log. ( see save signal data using signal logging. ) such a signal name can contain space and newline characters. these characters can improve readability but sometimes require special handling techniques, as described in access logged signals with", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_32", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "such a signal name can contain space and newline characters. these characters can improve readability but sometimes require special handling techniques, as described in access logged signals with spaces and newlines in logged names the signal name exists only to clarify the diagram and has no computational significance. such a signal name can contain anything and does not need special handling. the signal is an element of a bus object. use a valid c language identifier for the signal name. inputs to a bus creator block must have unique names. if there are duplicate names, the bus creator block appends ( signal # ) to all input signal names, where", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_33", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "bus creator block must have unique names. if there are duplicate names, the bus creator block appends ( signal # ) to all input signal names, where # is the input port index. making every signal name a legal matlab identifier handles a wide range of model configurations. unexpected requirements can require changing signal names to follow a more restrictive syntax. you can use the function isvarname to determine whether a signal name is a legal matlab identifier. name a signal interactively by using one of these options : the property inspector tool the model data editor tool the signal properties dialog box the signal name appears", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_34", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": ". name a signal interactively by using one of these options : the property inspector tool the model data editor tool the signal properties dialog box the signal name appears below a signal, displayed as a signal label. to name a signal programmatically, use the get _ param and set _ param functions on the signal. the table below summarizes how to work with signal names and labels in the simulink editor. signal display options displaying signal attributes in the model diagram can make the model easier to read. for example, in the simulink editor, on the debug tab, use the information over", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_35", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "the model diagram can make the model easier to read. for example, in the simulink editor, on the debug tab, use the information overlays menu to include in the model layout information about signal attributes, such as : port data types design ranges signal dimensions signal resolution for details, see display signal attributes. you can also highlight a signal and its source or destination blocks. for details, see highlight signal sources and destinations. store design attributes of signals and states you can use block parameters and signal properties to specify signal design attributes such as data type, minimum and maximum values, physical unit, and numeric complexity", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_36", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "and states you can use block parameters and signal properties to specify signal design attributes such as data type, minimum and maximum values, physical unit, and numeric complexity. to configure states, you can use block parameters. when you use these block parameters and signal properties, you store the specifications in the model file. alternatively, you can specify these attributes by using the properties of a simulink. signal or simulink. valuetype object that you store in a workspace or data dictionary. choose which strategy to use based on your modeling goals. to configure design attributes and code generation settings for signals", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_37", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "in a workspace or data dictionary. choose which strategy to use based on your modeling goals. to configure design attributes and code generation settings for signals by using a list that you can sort, group, and filter, consider using the model data editor. for objects, you can also use the model explorer. to determine where to permanently store a simulink. signal or simulink. valuetype object, see determine where to store variables and objects for simulink models. test signals you can perform the following kinds of tests on signals : minimum and maximum values — for many simulink blocks, you can", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_38", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "simulink models. test signals you can perform the following kinds of tests on signals : minimum and maximum values — for many simulink blocks, you can specify a range of valid values for the output signals. simulink provides a diagnostic for detecting when blocks generate signals that exceed their specified ranges during simulation. for details, see specify signal ranges. connection validation — many simulink blocks have limitations on the types of signals that they accept. before simulating a model, simulink checks all blocks to ensure that the blocks can accommodate the types of signals output by the ports to which the blocks connect and reports errors about", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_39", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "model, simulink checks all blocks to ensure that the blocks can accommodate the types of signals output by the ports to which the blocks connect and reports errors about incompatibilities. to detect signal compatibility errors before running a simulation, update the diagram. the signal editor block displays interchangeable groups of scenarios. use the signal editor to display, create, edit, and switch interchangeable scenarios. scenarios can help with testing a model. fixed - point data in matlab and simulink fixed - point data in simulink you can use the fixdt function in simulink® to specify a fixed - point data type", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_40", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "and simulink fixed - point data in simulink you can use the fixdt function in simulink® to specify a fixed - point data type. the fixdt function creates a simulink. numerictype object. fixdt simulink. numerictype fixed - point data type and scaling notation simulink data type names must be valid matlab® identifiers with less than 128 characters. the data type name provides information about container type, number encoding, and scaling. the following table provides a key for various symbols that appear in simulink products to indicate the data type and scaling of", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_41", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "type, number encoding, and scaling. the following table provides a key for various symbols that appear in simulink products to indicate the data type and scaling of a fixed - point value. if you pass this character vector to the sldatatypeandscale function, it returns a valid fixdt data type. if you pass this character vector to the sldatatypeandscale, it returns a valid fixdt data type. fixed - point data in matlab to assign a fixed - point data type to a number or variable in matlab, use the fi ( fixed - point designer ) constructor. the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_42", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "matlab to assign a fixed - point data type to a number or variable in matlab, use the fi ( fixed - point designer ) constructor. the resulting fixed - point value is called a fi object. for example, the following creates fi objects a and b with attributes shown in the display, all of which we can specify when the variables are constructed. note that when the fractionlength property is not specified, it is set automatically to \" best precision \" for the given word length, keeping the most - significant bits of the value. when the wordlength property is not specified it defaults to 16", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_43", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "\" for the given word length, keeping the most - significant bits of the value. when the wordlength property is not specified it defaults to 16 bits. fi fractionlength wordlength a = fi ( pi ) a = 3. 1416015625 datatypemode : fixed - point : binary point scaling signedness : signed wordlength : 16 fractionlength : 13 b = fi ( 0. 1 ) b = 0. 0999984741210938 datatypemode : fixed - point : binary point scaling signedness : signed word", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_44", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "b = 0. 0999984741210938 datatypemode : fixed - point : binary point scaling signedness : signed wordlength : 16 fractionlength : 18 read fixed - point data from the workspace use the from workspace block to read fixed - point data from the matlab workspace into a simulink model. to do this, the data must be in structure format with a fi object in the values field. in array format, the from workspace block only accepts real, double - precision data. values write fixed - point data to the workspace you", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_45", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "values field. in array format, the from workspace block only accepts real, double - precision data. values write fixed - point data to the workspace you can write fixed - point output from a model to the matlab workspace via the to workspace block in either array or structure format. fixed - point data written by a to workspace block to the workspace in structure format can be read back into a simulink model in structure format by a from workspace block. scaled doubles scaled doubles are a hybrid between floating - point and fixed - point numbers. fixed - point designer™ stores them as doubles with the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_46", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "workspace block. scaled doubles scaled doubles are a hybrid between floating - point and fixed - point numbers. fixed - point designer™ stores them as doubles with the scaling, sign, and word length information retained. for example, the storage container for a fixed - point data type sfix16 _ en14 is int16. the storage container of the equivalent scaled doubles data type, flts16 _ en14 is floating - point double. fixed - point designer applies the scaling information to the stored floating - point double to obtain the real - world value. storing the value in a double almost always eliminates overflow and precision issues", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_47", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "scaling information to the stored floating - point double to obtain the real - world value. storing the value in a double almost always eliminates overflow and precision issues. sfix16 _ en14 int16 flts16 _ en14 double functions create nonvirtual buses within component create nonvirtual buses a nonvirtual bus is analogous to a structure in c code. use nonvirtual buses to : construct an array of buses. have bus data cross matlab function block or stateflow® chart boundaries. package bus data as structures in generated c code. interface with external code through an s - function", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_48", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "data cross matlab function block or stateflow® chart boundaries. package bus data as structures in generated c code. interface with external code through an s - function. reduce the number of function arguments passed to a subcomponent in generated code. a simulink. bus object data type must define the bus you want to make nonvirtual. a bus becomes nonvirtual when you select a block parameter such as output as nonvirtual bus. making the bus nonvirtual causes simulation and code generation to apply the structure defined by the bus object. when the bus is virtual, the bus object", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_49", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": ". making the bus nonvirtual causes simulation and code generation to apply the structure defined by the bus object. when the bus is virtual, the bus object only validates the properties of the bus. to simulate a model that contains nonvirtual buses, the referenced bus objects must be in the base workspace or a data dictionary used by the model. for more information, see specify bus properties with bus objects. nonvirtual buses also require all elements of the bus to have the same sample time. for more information, see modify sample times for nonvirtual buses. the way to create nonvirtua", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_50", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "of the bus to have the same sample time. for more information, see modify sample times for nonvirtual buses. the way to create nonvirtual buses differs based on the location of the bus and the block that creates the bus : create nonvirtual buses at interfaces convert virtual bus to nonvirtual bus create nonvirtual bus from matlab structure to focus on fundamental steps, the examples are simple. however, buses are most useful when you have many signals to combine. you can use bus creator blocks to create nonvirtual buses within components. open and compile the model named bush", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_51", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "when you have many signals to combine. you can use bus creator blocks to create nonvirtual buses within components. open and compile the model named bushierarchy, which uses bus creator blocks to create a hierarchy of virtual buses. to compile the model, on the modeling tab of the simulink® toolstrip, click update model or run. compiling the model updates the line styles, which you can use to visually identify buses. copy openexample command paste command in matlab to download and open example files mdl = bushierarchy ; open _ system ( mdl ) set _ para", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_52", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##ample command paste command in matlab to download and open example files mdl = bushierarchy ; open _ system ( mdl ) set _ param ( mdl, simulationcommand = \" update \" ) to create this model, see group signal lines within component. the virtual buses in this model are not defined by simulink. bus objects. to change the output of the bus creator blocks to nonvirtual buses, you must have bus objects that match the bus hierarchy. to create the bus objects that correspond to topbus and nestedbus, use the simulink. bus. create", "token_count": 127, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_53", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "bus objects that match the bus hierarchy. to create the bus objects that correspond to topbus and nestedbus, use the simulink. bus. createobject function. in the matlab® command window, enter this command. simulink. bus. createobject ( \" bushierarchy \", \" bushierarchy / bus creator1 \" ) ; this function creates the bus object that corresponds to the output bus of the specified block. if the output bus contains nested buses, the function also creates bus objects that correspond to the nested buses. in this example, the function creates two bus", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_54", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "if the output bus contains nested buses, the function also creates bus objects that correspond to the nested buses. in this example, the function creates two bus objects that are named after the corresponding buses, topbus and nestedbus. to view the bus objects, open the type editor. in the simulink toolstrip, on the modeling tab, in the design gallery, click type editor. to expand an external data source or bus, click the arrow next to its name. now that you have bus objects that correspond to the nonvirtual buses you want to create, create the nonvirtual buses.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_55", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "to its name. now that you have bus objects that correspond to the nonvirtual buses you want to create, create the nonvirtual buses. in the simulink editor, double - click the bus creator block named bus creator1. in the block parameters dialog box, set output data type to bus : topbus, select the output as nonvirtual bus check box, and click ok. topbus is now a nonvirtual bus, while nestedbus remains a virtual bus. to identify the nonvirtual bus by line style, compile the model. double - click the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_56", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "bus, while nestedbus remains a virtual bus. to identify the nonvirtual bus by line style, compile the model. double - click the block named bus creator. in the block parameters dialog box, set output data type to bus : nestedbus, select the output as nonvirtual bus check box, and click ok. nestedbus is now a nonvirtual bus. to update its line style, compile the model. if you do not save the bus objects, then you must recreate the bus objects when you reopen the model. for information on how to save the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_57", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": ". if you do not save the bus objects, then you must recreate the bus objects when you reopen the model. for information on how to save the bus objects, see specify bus properties with bus objects. to create a nonvirtual bus at an interface, connect the bus elements to out bus element blocks and specify that the output bus is nonvirtual. open the model named busoutput, which uses three out bus element blocks to create a virtual bus at the output port. to create this model, see connect multiple output signals to a port. nonvirtual buses require a simulink.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_58", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "virtual bus at the output port. to create this model, see connect multiple output signals to a port. nonvirtual buses require a simulink. bus object data type. create the bus object that corresponds to the output bus. in the simulink® toolstrip, on the modeling tab, in the design gallery, select type editor. in the type editor, create bus objects named interface and sinusoidal. for each bus object, create the simulink. buselement objects that correspond to the elements of the buses. in sinusoidal, create elements named chirp and sine. in interface", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_59", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##ulink. buselement objects that correspond to the elements of the buses. in sinusoidal, create elements named chirp and sine. in interface, create elements named nestedbus and step. specify a bus object data type for any nested buses. for nestedbus, set data type to bus : sinusoidal. to output a nonvirtual bus, specify the bus object data type and bus virtuality. open the dialog box for the port by double - clicking one of the out bus element blocks. in the tree hierarchy of the dialog box, pause on outbus. then,", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_60", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "for the port by double - clicking one of the out bus element blocks. in the tree hierarchy of the dialog box, pause on outbus. then, click the pencil icon that appears next to outbus. specify the bus object data type. set data type to bus : interface. in the tree hierarchy of the dialog box, click the signal attributes that now appear next to outbus. specify the bus virtuality. set bus virtuality to nonvirtual. the output of the model is a nonvirtual bus. to see the nonvirtual bus, reference the model in another model or move", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_61", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##l. the output of the model is a nonvirtual bus. to see the nonvirtual bus, reference the model in another model or move the out bus element blocks into a subsystem. the line styles update when you compile the model. to compile the model, on the modeling tab of the simulink toolstrip, click update model or run. if you do not save the bus objects, you must recreate the bus objects when you reopen the model. for information on how to save the bus objects, see specify bus properties with bus objects. in bus element blocks use the", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_62", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "objects when you reopen the model. for information on how to save the bus objects, see specify bus properties with bus objects. in bus element blocks use the bus virtuality parameter to determine whether they inherit or define the bus virtuality. if the block defines the bus virtuality and the virtuality of the input bus does not match, compiling the model produces an error. root inport and outport blocks can also create nonvirtual buses at interfaces. to specify the bus virtuality : for a root inport block, on the signal attributes tab of the dialog box, select output as nonvirtual bus", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_63", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "specify the bus virtuality : for a root inport block, on the signal attributes tab of the dialog box, select output as nonvirtual bus. for a root outport block, on the signal attributes tab of the dialog box, select output as nonvirtual bus in parent model. you can convert a virtual bus to a nonvirtual bus anywhere within a model by using a signal conversion block. open and compile the model named busconversion, which contains a virtual bus hierarchy created by bus creator blocks. to compile the model, on the modeling tab of the simulink tools", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_64", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "busconversion, which contains a virtual bus hierarchy created by bus creator blocks. to compile the model, on the modeling tab of the simulink toolstrip, click update model or run. compiling the model updates the line styles, which you can use to visually identify buses. to define the buses and support conversion to nonvirtual buses, the bus creator blocks specify simulink. bus object data types. to create the bus objects in the base workspace when the model is loaded, the model uses the preloadfcn callback. to view the callback, in the simulink toolstrip,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_65", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "##pace when the model is loaded, the model uses the preloadfcn callback. to view the callback, in the simulink toolstrip, on the modeling tab, click model settings > model properties. in the model properties dialog box, open the callbacks tab and select the preloadfcn model callback. to view the bus objects, open the type editor. to convert a virtual bus to a nonvirtual bus, use a to nonvirtual bus block, which is a preconfigured version of the signal conversion block that has output set to nonvirtual bus", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_66", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "to nonvirtual bus block, which is a preconfigured version of the signal conversion block that has output set to nonvirtual bus. in the example model : add a to nonvirtual bus block to the model. drag the to nonvirtual bus block onto the line between the bus creator block named bus creator1 and the scope block. when you drag the block onto the line, the block connects to the line at both ends. suppose the data type of the bus you want to convert is not specified by a bus object. you would need to perform these additional actions : create the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_67", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "ends. suppose the data type of the bus you want to convert is not specified by a bus object. you would need to perform these additional actions : create the corresponding bus objects. specify the bus object data type for the bus. for example, set the data type parameter of the to nonvirtual bus block to the bus object that corresponds to the input bus. the input to the to nonvirtual bus block is a virtual bus, and the output is a nonvirtual bus. to see the nonvirtual bus line style, compile the model. you can use a constant block to compactly", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_68", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "a nonvirtual bus. to see the nonvirtual bus line style, compile the model. you can use a constant block to compactly represent a nonvirtual bus with constant - valued elements. on the constant block, specify : a matlab structure for constant value. a simulink. bus object as the output data type. constant blocks only support matlab structures when the output data type is a bus object. for example, define a matlab structure named const _ param _ struct with elements named offset, gain, and threshold. const _ param _ stru", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_69", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "a matlab structure named const _ param _ struct with elements named offset, gain, and threshold. const _ param _ struct. offset = 197 ; const _ param _ struct. gain = 4. 32 ; const _ param _ struct. threshold = 795. 68 ; define the corresponding bus object data type. simulink. bus. createobject ( const _ param _ struct ) the new bus object uses the default name slbus1. open and simulate the example model, which contains a constant block with constant value", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "a9c5360f57aeb997844122547257b5be_70", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signal-data-logging-from-nonvirtual-bus-fixed-point-and-multidimensional-signals.html", "title": "Troubleshoot Signal Data Logging from Nonvirtual Bus, Fixed-Point, and Multidimensional Signals", "tags": [], "chunk_text": "_ struct ) the new bus object uses the default name slbus1. open and simulate the example model, which contains a constant block with constant value set to const _ param _ struct and output data type set to bus : slbus1. open _ system ('nonvirtualbusfromstructmodel') sim ('nonvirtualbusfromstructmodel') ; the output of the constant block is a nonvirtual bus. blocks objects", "token_count": 104, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "troubleshoot signals not accessible by name some signal types cannot be logged or streamed in the real - time application. what this issue means you cannot log or stream by name these types of signals in the real - time application : virtual or bus signals ( including signals from bus creator blocks and virtual blocks ). for example, assume that you connect the output of a mux block ( a virtual block ) to a simulink® scope block. the scope block displays the names of the mux input signals rather than the names of the mux output signals. signals that simulink optimizes away after you set the signal storage", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "of the mux input signals rather than the names of the mux output signals. signals that simulink optimizes away after you set the signal storage reuse or block reduction configuration parameters. the output of a block that was optimized away is replaced with the corresponding input signal to the block. to access these signals, make them test points. signals of complex or multiword data types. if a block name consists only of spaces, simulink real - time™ explorer does not display a node for signals from that block. to reference such a block : provide an alphanumeric name for the block. rebuild", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "- time™ explorer does not display a node for signals from that block. to reference such a block : provide an alphanumeric name for the block. rebuild and download the model to the speedgoat® target computer. reconnect the matlab® session to the target computer. try this workaround check these signal types are not being logged or streamed by name in the real - time application : : virtual or bus signals ( including signals from bus creator blocks and virtual blocks ) signals that simulink optimizes away signals of complex or multiword data types blocks without alphanumeric names gain internationalization issues for sim", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "virtual blocks ) signals that simulink optimizes away signals of complex or multiword data types blocks without alphanumeric names gain internationalization issues for simulink real - time simulink® real - time™ inherits the internationalization support of the products that it works with : simulink, simulink coder™, and embedded coder®. signal and parameter names that include unicode® characters are displayed as expected in simulink real - time explorer and at the matlab® command line. when you use the simulation data inspector to observe signals, the non - ascii signal names are", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "- time explorer and at the matlab® command line. when you use the simulation data inspector to observe signals, the non - ascii signal names are displayed as expected. for example, assume that the signal with id 1 appears in an english - language and a japanese - language version of the same model. in the english - language version, the signal label is input1 and the block path is block1 / block2. in the japanese - language version, the signal label is 力 1 and the block path is フロック1 / フロック2. third - party code ( for example,", "token_count": 125, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "the signal label is 力 1 and the block path is フロック1 / フロック2. third - party code ( for example, parsers for vendor configuration files ) sometimes does not support cross - locale, cross - platform internationalization. for such code, you must give files and folders locale - specific names. for example, when parsing a configuration file on an english - locale machine, name the file and enclosing folder with english - locale - specific names. block reduction blocks that simply copy their input to their output blocks or signals in an unused code path understand", "token_count": 125, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "##closing folder with english - locale - specific names. block reduction blocks that simply copy their input to their output blocks or signals in an unused code path understand unused code paths all signal paths for a block end with a block that does not execute, such as a terminator block, a disabled assertion block, or an s - function block configured for block reduction. no signal paths for the block include global signal storage downstream from the block. in the first signal path, the gain block connects to an outport block. the software does not reduce blocks in this signal path. in the second signal path, the gain block connects to", "token_count": 127, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "the gain block connects to an outport block. the software does not reduce blocks in this signal path. in the second signal path, the gain block connects to a terminator block. this signal path is unused because the terminator block does not execute. these blocks are reduced for simulation and code generation when you enable block reduction. in the last signal path, the output of the gain block connects to a scope block. the scope block does execute in simulation, so this code path is not reduced in simulation. the software generates code for this signal path only when you select mat - file logging ( simulink coder ).", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "code path is not reduced in simulation. the software generates code for this signal path only when you select mat - file logging ( simulink coder ). identify reduced blocks topics signal storage reuse enable local block outputs reuse local block outputs eliminate superfluous local variables ( expression folding ) optimize global data access ( embedded coder ) perform in - place updates for assignment and bus assignment blocks ( embedded coder ) reuse global block outputs ( embedded coder ) optimize block operation order in generated code ( embedded coder ) reuse buffers for data store read and data store write blocks ( embedded code", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "##r ) optimize block operation order in generated code ( embedded coder ) reuse buffers for data store read and data store write blocks ( embedded coder ) reuse output buffers of model blocks ( embedded coder ) signal storage reuse can occur only among signals that have the same data type. clearing this option can substantially increase the amount of memory required to simulate large models. clear this option if you need to : debug a c - mex s - function use a floating scope or a floating scope block with the floating display option selected to inspect signals in a model that you are debugging sim", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "##x s - function use a floating scope or a floating scope block with the floating display option selected to inspect signals in a model that you are debugging simulink software opens an error dialog if signal storage reuse is enabled and you attempt to use a floating scope or floating display block to display a signal whose buffer has been reused. composite interface guidelines to simplify model appearance, you can group signals, messages, or conserving connections to create composite interfaces for model components and blocks. composite interfaces reduce the number of ports on a model component and the number of lines in a block diagram. elements of a composite interface", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "for model components and blocks. composite interfaces reduce the number of ports on a model component and the number of lines in a block diagram. elements of a composite interface retain their separate identities. virtual buses meet most modeling requirements for composite interfaces, and they give you the flexibility to group different types of elements. they reduce line complexity and clutter in a block diagram and make it easier to change the interface incrementally. for example, if you must add or remove elements from a component interface, modifying a bus can be simpler than adding or removing ports. when you create a composite interface, such as a virtual bus, group lines", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "from a component interface, modifying a bus can be simpler than adding or removing ports. when you create a composite interface, such as a virtual bus, group lines based on their functionality. by organizing signals, messages, or connections into logical groupings, you reduce the likelihood of significant refactoring in the future. at component interfaces, use in bus element and out bus element blocks. in bus element blocks let you extract bus elements by name at their point of use. out bus element blocks let you build an output bus by connecting elements to multiple out bus element blocks for the same output port. to enforce the composition of a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": ". out bus element blocks let you build an output bus by connecting elements to multiple out bus element blocks for the same output port. to enforce the composition of a bus at an interface, use a simulink. bus object. to implement the bus definition as a structure in generated code or to iteratively process buses in a subsystem such as a for - each subsystem, consider making the virtual buses into nonvirtual buses. visualize composite interfaces suppose you have this relatively simple model. each component interface in this model has multiple ports, and the signal lines clutter the model. with composite", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "##ize composite interfaces suppose you have this relatively simple model. each component interface in this model has multiple ports, and the signal lines clutter the model. with composite interfaces, you can simplify the block diagram by reducing the number of lines. virtual buses simplify the signal lines in the block diagram based on four different types of functionality : sensor data, system goals, control signals, and system disturbances. the components use in bus element and out bus element blocks at their interface. for example, consider the contents of the subsystem named controller. each in bus element and out bus element block has a label that displays the corresponding", "token_count": 129, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": ". for example, consider the contents of the subsystem named controller. each in bus element and out bus element block has a label that displays the corresponding element, for example, sensor. x1. in this example, sensor is the name of the port, and x1 is the name of the bus element. two in bus element blocks select this element to avoid a branched signal line. define composite interfaces before you create composite interfaces, consider your high - level and low - level modeling requirements. tip to identify the boundaries, scope of data, and interface attributes of your model component, see define interfaces of model components.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "and low - level modeling requirements. tip to identify the boundaries, scope of data, and interface attributes of your model component, see define interfaces of model components. nonvirtual and virtual blocks simulink® blocks fall into two basic categories : nonvirtual blocks and virtual blocks. nonvirtual blocks play an active role in the simulation of a system. if you add or remove a nonvirtual block, you change the model behavior. virtual blocks help organize a model graphically. while they play no active role in the simulation, they can affect the execution order of other blocks. some simulink", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "blocks help organize a model graphically. while they play no active role in the simulation, they can affect the execution order of other blocks. some simulink blocks are virtual in some circumstances and nonvirtual in others. such blocks are called conditionally virtual blocks. the table lists simulink virtual and conditionally virtual blocks. scope triggers — set triggers to sync repeating signals and pause the display when events occur. cursor measurements — measure signal values using vertical and horizontal cursors. signal statistics — display the maximum, minimum, peak - to - peak difference, mean, median, and rms values of a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "vertical and horizontal cursors. signal statistics — display the maximum, minimum, peak - to - peak difference, mean, median, and rms values of a selected signal. peak finder — find maxima, showing the x - axis values at which they occur. bilevel measurements — measure transitions, overshoots, undershoots, and cycles. simulation control — debug models from a scope window using run, step forward, and step backward toolbar buttons. multiple signals — plot multiple signals on the same y - axis ( display ) using multiple input ports. multiple y - axes ( displays ) — display multiple", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "buttons. multiple signals — plot multiple signals on the same y - axis ( display ) using multiple input ports. multiple y - axes ( displays ) — display multiple y - axes. all the y - axes have a common time range on the x - axis. modify parameters — modify scope parameter values before and during a simulation. axis autoscaling — autoscale axes during or at the end of a simulation. margins are drawn at the top and bottom of the axes. display data after simulation — scope data is saved during a simulation. if a scope is closed at the start of a simulation, when you open the scope after", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": ". display data after simulation — scope data is saved during a simulation. if a scope is closed at the start of a simulation, when you open the scope after a simulation, the scope displays simulation results for attached input signals. note if you have a high sample rate or long simulation time, you may run into issues with memory or system performance because the scope saves data internally. to limit the amount of data saved for scope visualization, use the limit data points to last, limit frames to last property. thermal model of a house simulating systems with variable transport delay phenomena do not use scope blocks in a library. if you place", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": ", limit frames to last property. thermal model of a house simulating systems with variable transport delay phenomena do not use scope blocks in a library. if you place a scope block inside a library block with a locked link or in a locked library, simulink displays an error when trying to open the scope window. to display internal data from a library block, add an output port to the library block, and then connect the port to a scope block in your model. if you step through a model, the scope only updates when the scope block runs. this means that the time shown in the status bar may not match the model", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "if you step through a model, the scope only updates when the scope block runs. this means that the time shown in the status bar may not match the model time. when connected to a constant signal, a scope block may plot a single point. the scope shows gaps in the display when the signal value is nan. when you visualize multiple frame - based signals in the scope, some samples of signals with a frame size of 1 might not be displayed. to visualize these signals, move the signals with frame size of 1 to a separate scope. scope displays have limitations in rapid accelerator mode. see behavior of scopes and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_23", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "##ize these signals, move the signals with frame size of 1 to a separate scope. scope displays have limitations in rapid accelerator mode. see behavior of scopes and viewers with rapid accelerator mode when the scope is in a foreach subsystem, the scope only displays the last index. input port _ 1 — signal or signals to visualize scalar | vector | matrix | array | bus | nonvirtual bus type — continuous ( sample - based ) or discrete ( sample - based and frame - based ). data type — any data type that simulink supports. see data types supported by simulink.", "token_count": 129, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_24", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "discrete ( sample - based and frame - based ). data type — any data type that simulink supports. see data types supported by simulink. this block accepts fixed - point input, but converts it to double for display. dimension — scalar, one dimensional ( vector ), two dimensional ( matrix ), or multidimensional ( array ). display multiple channels within one signal depending on the dimension. see signal dimensions and determine signal dimensions. input limitations when the input is a constant signal, the scope plots a single point. bus support configuration properties open at simulation start — specify when scope window opens off (", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_25", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "limitations when the input is a constant signal, the scope plots a single point. bus support configuration properties open at simulation start — specify when scope window opens off ( default for scope ) | on ( default for time scope ) programmatic use display the full path — display block path on scope title bar off ( default ) | on number of input ports — number of input ports on scope block 1 ( default ) | integer layout — number and arrangement of displays 1 - by - 1 display ( default ) | an arrangement of m - by - n axes sample time — simulation interval between scope updates - 1 ( for inherited ) ( default )", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_26", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "1 display ( default ) | an arrangement of m - by - n axes sample time — simulation interval between scope updates - 1 ( for inherited ) ( default ) | positive real number input processing — channel or element signal processing elements as channels ( sample based ) ( default for scope ) | columns as channels ( frame based ) ( default for time scope ) elements as channels ( sample based ) - process each element as a unique sample. columns as channels ( frame based ) - process signal values in a channel as a group of values from multiple time intervals. frame - based processing is available only with discrete input signals. maximize axes — maximize", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_27", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "process signal values in a channel as a group of values from multiple time intervals. frame - based processing is available only with discrete input signals. maximize axes — maximize size of plots off ( default for scope ) | auto ( default for time scope ) | on auto - if title and y - label properties are not specified, maximize all plots. on - maximize all plots. values in title and y - label are hidden. off - do not maximize plots. time span — length of x - axis to display auto ( default ) | user defined | one frame period auto — difference between the simulation start and stop times. the block calculate", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_28", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "length of x - axis to display auto ( default ) | user defined | one frame period auto — difference between the simulation start and stop times. the block calculates the beginning and end times of the time range using the time display offset and time span properties. for example, if you set the time display offset to 10 and the time span to 20, the scope sets the time range from 10 to 30. user defined — enter any value less than the total simulation time. one frame period — use the frame period of the input signal to the time scope block. this option is only available when the input processing parameter is set to", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_29", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": ". one frame period — use the frame period of the input signal to the time scope block. this option is only available when the input processing parameter is set to columns as channels ( frame based ). time span overrun action — display data beyond visible x - axis wrap ( default ) | scroll wrap — draw a full screen of data from left to right, clear the screen, and then restart drawing the data from the left. scroll — move data to the left as new data is drawn on the right. this mode is graphically intensive and can affect run - time performance. time units — x - axis units none ( default for", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_30", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "data is drawn on the right. this mode is graphically intensive and can affect run - time performance. time units — x - axis units none ( default for scope ) | metric ( default for time scope ) | seconds metric — display time units based on the length of time span. seconds — display time in seconds. none — do not display time units. time display offset — x - axis offset 0 ( default ) | scalar | vector scalar — offset all channels of an input signal by the same time value. vector — independently offset the channels. time - axis labels — display of x - axis labels bottom displays only", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_31", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "channels of an input signal by the same time value. vector — independently offset the channels. time - axis labels — display of x - axis labels bottom displays only ( default for scope ) | all ( default for time scope ) | none all — display x - axis labels on all y - axes. none — do not display labels. selecting none also clears the show time - axis label check box. bottom displays only — display x - axis label on the bottom y - axis. dependencies show time - axis label to on. maximize axes to off. show time - axis label — display or hide x - axis labels off (", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_32", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "axis. dependencies show time - axis label to on. maximize axes to off. show time - axis label — display or hide x - axis labels off ( default for scope ) | on ( default for time scope ) active display — selected display 1 ( default ) | positive integer dependency show legend — display signal legend off ( default ) | on the legend only shows the first 20 signals. any additional signals cannot be controlled from the legend. show grid — show internal grid lines on ( default ) | off plot signals as magnitude and phase — split display into magnitude and phase plots off ( default ) | on on — display magnitude and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_33", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "lines on ( default ) | off plot signals as magnitude and phase — split display into magnitude and phase plots off ( default ) | on on — display magnitude and phase plots. if the signal is real, plots the absolute value of the signal for the magnitude. the phase is 0 degrees for positive values and 180 degrees for negative values. this feature is useful for complex - valued input signals. if the input is a real - valued signal, selecting this check box returns the absolute value of the signal for the magnitude. off — display signal plot. if the signal is complex, plots the real and imaginary parts on the same y -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_34", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "absolute value of the signal for the magnitude. off — display signal plot. if the signal is complex, plots the real and imaginary parts on the same y - axis. y - limits ( minimum ) — minimum y - axis value - 10 ( default ) | real scalar y - limits ( maximum ) — maximum y - axis value 10 ( default ) | real scalar y - label — y - axis label none ( default for scope ) | amplitude ( default for time scope ) | string limit data points to last, limit frames to last — limit buffered data points or frames off, 5000 ( default ) | on |", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_35", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "time scope ) | string limit data points to last, limit frames to last — limit buffered data points or frames off, 5000 ( default ) | on | positive integer elements as channels ( sample based ) – – the scope saves the last n data points and the name of this property is limit data points to last. n is the scalar value you specify in this property text box. columns as channels ( frame based ) – – the scope saves the last n data frames and the name of this property is limit frames to last. if you do not select this property and you have a high sample rate or long simulation time,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_36", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "frames and the name of this property is limit frames to last. if you do not select this property and you have a high sample rate or long simulation time, you can run into issues with memory or system performance. decimation, decimate frames — reduce amount of scope data to display and save off, 2 ( default ) | on | positive integer elements as channels ( sample based ) – – the scope plots and logs data every nth data point. the name of this property is decimation. columns as channels ( frame based ) – – - the scope plots and logs data every nth frame. the name of", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_37", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "of this property is decimation. columns as channels ( frame based ) – – - the scope plots and logs data every nth frame. the name of this property is decimate frames. log data to workspace — save data to matlab workspace off ( default ) | on variable name — name of saved data variable scopedata ( default ) | string save format — matlab variable format dataset ( default ) | structure with time | structure | array dataset — save data as a dataset object, by default a timeseries object. structure with time — save data as a structure with associated time information.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_38", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "dataset — save data as a dataset object, by default a timeseries object. structure with time — save data as a structure with associated time information. structure — save data as a structure. array — save data as an array with associated time information. this format does not support variable - size data. axes scaling properties axes scaling — y - axis scaling mode manual ( default ) | auto | after n updates manual — manually scale the y - axis range with the scale y - axis limits toolbar button. auto — scale the y - axis range during and after simulation. selecting this option displays the do not allow y -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_39", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "scale y - axis limits toolbar button. auto — scale the y - axis range during and after simulation. selecting this option displays the do not allow y - axis limits to shrink check box. if you want the y - axis range to increase and decrease with the maximum value of a signal, set axes scaling to auto and clear the do not allow y - axis limits to shrink check box. after n updates — scale y - axis after the number of time steps specified in the number of updates text box ( 10 by default ). scaling occurs only once during each run. do not allow y - axis limits to shrink — when", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_40", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "in the number of updates text box ( 10 by default ). scaling occurs only once during each run. do not allow y - axis limits to shrink — when y - axis limits can change on ( default ) | off number of updates — number of updates before scaling 10 ( default ) | integer scale axes limits at stop — when y - axis limits can change on ( default ) | off on — scale axes when simulation stops. off — scale axes continually. y - axis data range ( % ) — percent of y - axis to use for plotting 80 ( default ) | integer between [ 1, 100 ] y - axis align", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_41", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "axis data range ( % ) — percent of y - axis to use for plotting 80 ( default ) | integer between [ 1, 100 ] y - axis align — alignment along y - axis center ( default ) | top | bottom top — align signals with the maximum values of the y - axis range. center — center signals between the minimum and maximum values. bottom — align signals with the minimum values of the y - axis range. autoscale x - axis limits — scale x - axis range limits off ( default ) | on x - axis data range ( % ) — percent of x - axis to use for plotting 100", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_42", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "— scale x - axis range limits off ( default ) | on x - axis data range ( % ) — percent of x - axis to use for plotting 100 ( default ) | integer in the range [ 1, 100 ] x - axis align — alignment along x - axis center ( default ) | left | right right — align signals with the maximum values of the x - axis range. left — align signals with the minimum values of the x - axis range. style properties figure color — background color for window black ( default ) | color plot type — how to plot signal auto ( default for scope ) | line ( default for", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_43", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "properties figure color — background color for window black ( default ) | color plot type — how to plot signal auto ( default for scope ) | line ( default for time scope ) | stairs | stem axes colors — background and axes color for individual displays black ( default ) | color preserve colors for copy to clipboard — copy scope without changing colors off ( default ) | on properties for line — line to change channel 1 ( default ) visible — line visibility on ( default ) | off line — line style solid line ( default style ) | 0. 75 ( default width ) | yellow ( default color ) marker — data point marker style", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_44", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": "| off line — line style solid line ( default style ) | 0. 75 ( default width ) | yellow ( default color ) marker — data point marker style none ( default ) | marker shape c / c + + code generation generate c and c + + code using simulink® coder™. hdl code generation generate vhdl, verilog and systemverilog code for fpga and asic designs using hdl coder™. plc code generation generate structured text code using simulink® plc coder™. fixed - point conversion design and simulate fixed - point systems using fixed -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "82edb71141c2fb84757df942c56a4cf0_45", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-signals-not-accessible-by-name.html", "title": "Troubleshoot Signals Not Accessible by Name", "tags": [], "chunk_text": ". plc code generation generate structured text code using simulink® plc coder™. fixed - point conversion design and simulate fixed - point systems using fixed - point designer™.", "token_count": 36, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "3d2aa98620d733050c6883e1858fe93d_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-parameters-not-accessible-by-name.html", "title": "Troubleshoot Parameters Not Accessible by Name", "tags": [], "chunk_text": "troubleshoot parameters not accessible by name some parameters cannot be observed or tuned in the real - time application. what this issue means reasons that you cannot observe or tune some parameters in the real - time application are : simulink® real - time™ does not support parameters of multiword data types. during execution, you cannot tune parameters that change the model structure, for example, by adding a port. to change these parameters, you must stop the execution, change the parameter, and rebuild the real - time application. try this workaround check the parameters for the issues described in what this issue means.", "token_count": 121, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "d195adb3474a327bca909779bddbb062_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-s-function-build-upgrade-for-r2020b.html", "title": "Troubleshoot S-Function Build Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "troubleshoot s - function build upgrade for r2020b a pre - r2020b model uses s - functions. when migrating this model to the current release, this s - function related message appears in the build log : undefined reference to'c function in s - function'what this issue means in r2020b, the compiler for model builds changed from a windows® compatible c compiler to the qnx® neutrino® c + + compiler. to accommodate this change, update s - function code for c + + compatibility. tip fortran s - functions are not supported in r2020b and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "d195adb3474a327bca909779bddbb062_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-s-function-build-upgrade-for-r2020b.html", "title": "Troubleshoot S-Function Build Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": ". to accommodate this change, update s - function code for c + + compatibility. tip fortran s - functions are not supported in r2020b and later releases of simulink® real - time™. try this workaround to update s - function code for c + + compatibility, modify the declaration of the s - function in the header file. for example, update this c s - function declaration : void getalldatamyfunction ( short ) ; void myfunction _ initialize ( short, unsigned char *, short * ) ; void myfunction _ terminate ( short, int ) ;", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "d195adb3474a327bca909779bddbb062_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-s-function-build-upgrade-for-r2020b.html", "title": "Troubleshoot S-Function Build Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": ") ; void myfunction _ initialize ( short, unsigned char *, short * ) ; void myfunction _ terminate ( short, int ) ; updated the code to this c + + s - function declaration : # ifdef _ _ cplusplus extern \" c \" { # endif void getalldatamyfunction ( short ) ; void myfunction _ initialize ( short, unsigned char *, short * ) ; void myfunction _ terminate ( short, int ) ; # ifdef _ _ cplusplus } # endif before building the updated code,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "d195adb3474a327bca909779bddbb062_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-s-function-build-upgrade-for-r2020b.html", "title": "Troubleshoot S-Function Build Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "void myfunction _ terminate ( short, int ) ; # ifdef _ _ cplusplus } # endif before building the updated code, remember to remove all artifacts from previous model builds. how to mix c and c + + contents of this section : what do i need to know when mixing c and c + + code? ¶ δ how do i call a c function from c + +? ¶ δ how do i call a c + + function from c? ¶ δ how can i include a standard c header file in my c + + code? ¶ δ how can i include a non - system", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "d195adb3474a327bca909779bddbb062_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-s-function-build-upgrade-for-r2020b.html", "title": "Troubleshoot S-Function Build Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "function from c? ¶ δ how can i include a standard c header file in my c + + code? ¶ δ how can i include a non - system c header file in my c + + code? ¶ δ how can i modify my own c header files so it ’ s easier to # include them in c + + code? ¶ δ how can i call a non - system c function f ( int, char, float ) from my c + + code? ¶ δ how can i create a c + + function f ( int, char, float ) that is callable by my c code? ¶ δ why", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "d195adb3474a327bca909779bddbb062_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-s-function-build-upgrade-for-r2020b.html", "title": "Troubleshoot S-Function Build Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "? ¶ δ how can i create a c + + function f ( int, char, float ) that is callable by my c code? ¶ δ why is the linker giving errors for c / c + + functions being called from c + + / c functions? ¶ δ how can i pass an object of a c + + class to / from a c function? ¶ δ can my c function directly access data in an object of a c + + class? ¶ δ why do i feel like i ’ m “ further from the machine ” in c + + as opposed to c? ¶ δ external code integration category", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "d195adb3474a327bca909779bddbb062_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-s-function-build-upgrade-for-r2020b.html", "title": "Troubleshoot S-Function Build Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "? ¶ δ why do i feel like i ’ m “ further from the machine ” in c + + as opposed to c? ¶ δ external code integration category integrate existing matlab® code into simulink integrate existing c / c + + code into simulink integrate existing c or c + + functions, such as device drivers or external simulation code examine considerations for external code integration and simulink real - time™ models. control real - time application by using c # code run real - time application by using python script hello world! example external code integration for simulink real - time", "token_count": 120, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "2c26ef0c9044f17170afb74fe418ac01_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-model-upgrade-to-r2020b.html", "title": "Troubleshoot Model Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "troubleshoot model upgrade for r2020b when building a pre - r2020b simulink real - time models in r2020b, build errors occur. some of the blocks in the model have the label obsolete simulink real - time block. what this issue means for r2020b, you must upgrade the simulink real - time model. a model upgrade advisor check is available to support this upgrade. try this workaround to upgrade your model for simulink real - time r2020b features, use this software upgrade process : install simulink real - time and other required products", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "2c26ef0c9044f17170afb74fe418ac01_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-model-upgrade-to-r2020b.html", "title": "Troubleshoot Model Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "your model for simulink real - time r2020b features, use this software upgrade process : install simulink real - time and other required products. install the simulink real - time target support package by using the matlab add - ons menu. install the speedgoat i / o blockset. go to the speedgoat website. upgrade the target machine software. see troubleshoot system upgrade for r2020b. open a r2020b or earlier simulink real - time model. run the upgrade advisor. on the modeling tab, select model advisor > upgrade advisor. in the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "2c26ef0c9044f17170afb74fe418ac01_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-model-upgrade-to-r2020b.html", "title": "Troubleshoot Model Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "##2020b or earlier simulink real - time model. run the upgrade advisor. on the modeling tab, select model advisor > upgrade advisor. in the upgrade advisor dialog box, select check model for upgradable simulink real - time features. click the run this check button. the advisor lists the upgrades that it can apply and the upgrades that require manual changes. after the check, click the upgrade button. the advisor upgrades the model by applying all nonmanual changes. apply manual changes when the upgrade advisor encounters model issues that it cannot resolve by using automated changes, the upgrade advisor reports these as warning :", "token_count": 127, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "2c26ef0c9044f17170afb74fe418ac01_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-model-upgrade-to-r2020b.html", "title": "Troubleshoot Model Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "nonmanual changes. apply manual changes when the upgrade advisor encounters model issues that it cannot resolve by using automated changes, the upgrade advisor reports these as warning : some of the features require manual changes. it is a good practice to copy the text of these warnings and save it for reference as you apply changes to your model. apply speedgoat utilities in r2020b, speedgoat® software provides support for configuring interrupts and ethernet communications. to configure model interrupts, use a single block from the speedgoat i / o blockset. you can use this block for asyn", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "2c26ef0c9044f17170afb74fe418ac01_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-model-upgrade-to-r2020b.html", "title": "Troubleshoot Model Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "to configure model interrupts, use a single block from the speedgoat i / o blockset. you can use this block for asynchronous subsystems or for triggering the base rate of the model. the list of available interrupt sources reflects the speedgoat i / o blockset blocks configured in the model. for more information see the block documentation in speedgoatlib _ utilities. to configure additional ethernet ports on the target machine, the speedgoat i / o blockset provides a tool to configure these ethernet ports. the configuration is specific to the target machine", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "2c26ef0c9044f17170afb74fe418ac01_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-model-upgrade-to-r2020b.html", "title": "Troubleshoot Model Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "target machine, the speedgoat i / o blockset provides a tool to configure these ethernet ports. the configuration is specific to the target machine and reflects the labeling on the front plates of the target machine. for more information, in the matlab command window, type : speedgoat. configureethernet troubleshoot system upgrade for r2020b required products training events learning resources visit the help center to explore product documentation, engage with community forums, check release notes, and more. matlab and simulink videos learn about products, watch demonstrations, and explore what's new. company", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "2c26ef0c9044f17170afb74fe418ac01_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-model-upgrade-to-r2020b.html", "title": "Troubleshoot Model Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "community forums, check release notes, and more. matlab and simulink videos learn about products, watch demonstrations, and explore what's new. company careers decarbonizing mathworks see how mathworks is protecting and restoring earth's resources. search supported platforms product requirements eligible for use with matlab compiler and simulink compiler eligible for use with parallel computing toolbox and matlab parallel server supported third - party compilers", "token_count": 88, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "troubleshoot working with persistent variables when running the getpersistentvariables function or setpersistentvariables function, this error appears : cannot parse the file that stores persistent variables from target computer. to clear the issue, delete all persistent variables on target computer. for more information, see troubleshoot working with persistent variables. what this issue means this error message indicates that the file on the speedgoat® target computer that stores the persistent variable values is corrupted or unreadable. try this workaround to resolve this issue, clear the persistent variable values that are stored on the target computer. on the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "values is corrupted or unreadable. try this workaround to resolve this issue, clear the persistent variable values that are stored on the target computer. on the development computer, create a target object tg and connect to the target computer. tg = slrealtime ; connect ( tg ) ; use the setpersistentvariables function to clear the persistent variable values that are stored on the target computer. setpersistentvariables ( tg, [ ] ) ; getpersistentvariables | setpersistentvariables | persistent variable read | persistent variable write apply persistent variables", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "##g, [ ] ) ; getpersistentvariables | setpersistentvariables | persistent variable read | persistent variable write apply persistent variables in real - time applications this example shows how to apply persistent variables in real - time applications. in a model, you save variables on target computer whose values persist when the real - time application stops and even when the target computer is shut down by using persistent variable write blocks. at real - time application start, you direct the real - time application to read these persistent variables by using persistent variable read blocks. in matlab®, you can get or set the values of", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "you direct the real - time application to read these persistent variables by using persistent variable read blocks. in matlab®, you can get or set the values of persistent variables on the target computer by using the getpersistentvariables function and the setpersistentvariables function. examine persistent variables in the model create target object and connect copy openexample command paste command in matlab to download and open example files build real - time application model ='slrt _ ex _ persist'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "='slrt _ ex _ persist'; open _ system ( model ) ; modelstf = getstfname ( tg ) ; set _ param ( model, \" systemtargetfile \", modelstf ) build and load the real - time application evalc ('slbuild ( model )') ; load ( tg, model ) ; initial value of persistent variable observe how persistent variable changes in first run start ( tg ) ; pause ( 5 ) ; mypersistvars = getpersistentvariables ( tg ) mypersistvars = struct", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "; pause ( 5 ) ; mypersistvars = getpersistentvariables ( tg ) mypersistvars = struct with fields : position : 20 observe how persistent variable changes in second run load ( tg, model ) ; start ( tg ) ; mypersistvars = struct with fields : position : 40 clear the persistent variable values mynewpersistvars = rmfield ( mypersistvars,'position') ; setpersistentvariables ( tg, mynewpersistvars ) ; mypersistvar", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "##vars,'position') ; setpersistentvariables ( tg, mynewpersistvars ) ; mypersistvars = getpersistentvariables ( tg ) mypersistvars = [ ] setpersistentvariables ( tg, [ ] ) ; preserve persistent variable data by safe shutdown of target computer close all files bdclose ( model ) ; setpersistentvariables get and set persistent variables get persistent variable values from target computer tg. change the value of variable1 in the mypersist structure. add", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "##variables get and set persistent variables get persistent variable values from target computer tg. change the value of variable1 in the mypersist structure. add variable1 to the structure. set the persistent variable values on the target computer. get the variables from the target computer. remove persistent variables from target computer remove a persistent variable from target computer get the persistent variable values from the target computer. copy the persistent variable values to a variable and remove the field for the variable. this example removes the field for the variable position. use the setpersistentvariables function to apply the updated persistent variable values to the target computer", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": ". this example removes the field for the variable position. use the setpersistentvariables function to apply the updated persistent variable values to the target computer. target _ object — object that represents target computer slrealtime. target object variables _ struct — structure of persistent variable values struct topics target start and stop the real - time application. read and set parameters. log and stream signals. retrieve status information about the target computer. restart the target computer. load the real - time application. start, stop, and retrieve information from the profiler. target _ name — name assigned to target computer ( character", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "011e40254379a116a948be453f3cb232_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-working-with-persistent-variables.html", "title": "Troubleshoot Working with Persistent Variables", "tags": ["R2021B", "R2022B"], "chunk_text": "computer. load the real - time application. start, stop, and retrieve information from the profiler. target _ name — name assigned to target computer ( character vector or string scalar ). for example,'targetpc1 '. target _ object — object representing target computer. for example, tg. create target object for default target computer create target object for named target computer build and run real - time application r2022b : removed and added target object functions r2021b : additional target object functions", "token_count": 104, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "33d915313dbcac572abc2b5b2c613327_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-long-build-times-for-real-time-application.html", "title": "Troubleshoot Long Build Times for Real-Time Application", "tags": [], "chunk_text": "troubleshoot long build times for real - time application the model build process for a simscape™ multibody™ models is slow and uses an unexpected amount of memory. what this issue means the default qnx® neutrino® compiler switches for simulink® real - time™ apply optimizations that lead to long build times or slow builds for some complex models, such as simscape multibody models. try this workaround to improve the real - time application build speed, change the compiler switch selections from the default selections by adding the - fdisable - rtl - sched2 switch for the c / c +", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "33d915313dbcac572abc2b5b2c613327_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-long-build-times-for-real-time-application.html", "title": "Troubleshoot Long Build Times for Real-Time Application", "tags": [], "chunk_text": "speed, change the compiler switch selections from the default selections by adding the - fdisable - rtl - sched2 switch for the c / c + + compiler : open your simulink real - time model. in the simulink editor, from the real - time tab, select hardware settings. click the c compiler options and add option - fdisable - rtl - sched2. click the c + + compiler options and add option - fdisable - rtl - sched2. click apply and ok. after updating the compiler options, the options appear as shown. if you prefer", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "33d915313dbcac572abc2b5b2c613327_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-long-build-times-for-real-time-application.html", "title": "Troubleshoot Long Build Times for Real-Time Application", "tags": [], "chunk_text": "fdisable - rtl - sched2. click apply and ok. after updating the compiler options, the options appear as shown. if you prefer to use a programmatic approach to update these compiler switches, you could use this code. % add a compiler flag'- fdisable - rtl - sched2'set _ param ( modelname,'buildconfiguration ','specify') ; options = get _ param ( modelname,'customtoolchainoptions') ; ccompiler _ idx = find ( strcmp ( options,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "33d915313dbcac572abc2b5b2c613327_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-long-build-times-for-real-time-application.html", "title": "Troubleshoot Long Build Times for Real-Time Application", "tags": [], "chunk_text": "##m ( modelname,'customtoolchainoptions') ; ccompiler _ idx = find ( strcmp ( options,'c compiler') ) ; cppcompiler _ idx = find ( strcmp ( options,'c + + compiler') ) ; options { ccompiler _ idx + 1 } =... [ options { ccompiler _ idx + 1 }'- fdisable - rtl - sched2'] ; options { cppcompiler _ idx + 1 } =...", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "33d915313dbcac572abc2b5b2c613327_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-long-build-times-for-real-time-application.html", "title": "Troubleshoot Long Build Times for Real-Time Application", "tags": [], "chunk_text": "' - fdisable - rtl - sched2'] ; options { cppcompiler _ idx + 1 } =... [ options { cppcompiler _ idx + 1 }'- fdisable - rtl - sched2'] ; set _ param ( modelname,'customtoolchainoptions ', options ) ;", "token_count": 82, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "troubleshoot build error for accelerator mode a build error occurs when building a model in accelerator mode or rapid accelerator mode when the model contains simulink real - time blocks ( for example, model blocks that represent hardware ). what this issue means simulink real - time does not support accelerator mode or rapid accelerator mode simulation of models with blocks that represent hardware. for example, open the slrt _ ex _ serialasciitest model. openexample ('slrt _ ex _ serialasciitest'). change the simulink mode to rapid accelerator, and run the model, simulink", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "' slrt _ ex _ serialasciitest'). change the simulink mode to rapid accelerator, and run the model, simulink displays this error : unable to build a standalone executable to simulate the model'slrt _ ex _ serialasciitest'in rapid accelerator mode. this error occurs because accelerator mode and rapid accelerator mode produce compiled code that runs on the development computer, not on the speedgoat® target computer. any blocks that access hardware report a build error if you compile the model by using accelerator mode or rapid accelerator mode. try this workaround change the simulation", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": ". any blocks that access hardware report a build error if you compile the model by using accelerator mode or rapid accelerator mode. try this workaround change the simulation mode to normal mode or external mode. simulink real - time options pane control the code created by simulink® coder™ code generation software for a simulink real - time™ application. set up general information about building real - time applications, including target, execution, data logging, and other options. configuration the simulink real - time options node in the configuration parameters dialog box allows you to specify how the software generates the real -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "and other options. configuration the simulink real - time options node in the configuration parameters dialog box allows you to specify how the software generates the real - time application. to reveal the simulink real - time options node, do the following : in the code generation pane, in the system target file list, select slrealtime. tlc or another simulink real - time stf. this setting generates system target code for simulink real - time. note if you open a model that was originally saved with system target file set to xpctarget. tlc, the software updates the setting", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "- time. note if you open a model that was originally saved with system target file set to xpctarget. tlc, the software updates the setting to slrealtime. tlc. to retain the updated setting, save the updated model. tips the default values work for the generation of most real - time applications. if you want to customize the build of your real - time application, set the option parameters to suit your specifications. to access configuration parameters from the matlab® command line, use : gcs — to access the current model. set _ param — to set the parameter value. get _", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "from the matlab® command line, use : gcs — to access the current model. set _ param — to set the parameter value. get _ param — to get the current value of the parameter. to get help on an option right - click the option text label. from the context menu, select what's this. how acceleration modes work overview the accelerator and rapid accelerator modes use portions of the simulink® coder™ product to create an executable. the accelerator and rapid accelerator modes replace the interpreted code normally used in simulink simulations, shortening model run time. although the acceleration", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "an executable. the accelerator and rapid accelerator modes replace the interpreted code normally used in simulink simulations, shortening model run time. although the acceleration modes use some simulink coder code generation technology, you do not need the simulink coder software installed to accelerate your model. the code generated by the accelerator and rapid accelerator modes is suitable only for speeding the simulation of your model. use simulink coder to generate code for other purposes. normal mode in normal mode, the matlab® technical computing environment is the foundation on which the simulink software is built. simulink controls the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": ". normal mode in normal mode, the matlab® technical computing environment is the foundation on which the simulink software is built. simulink controls the solver and model methods used during simulation. model methods include such things as computation of model outputs. normal mode runs in one process. accelerator mode by default, accelerator mode uses just - in - time ( jit ) acceleration to generate an execution engine in memory instead of generating c code or mex files. you can also have your model fall back to the classic accelerator mode, in which simulink generates and links code into a c - mex s - function", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "you can also have your model fall back to the classic accelerator mode, in which simulink generates and links code into a c - mex s - function. in accelerator mode, the model methods are separate from the simulink software and are part of the acceleration target code, which is used in later simulations. simulink checks that the acceleration target code is up to date before reusing it. for more information, see code regeneration in accelerated models. there are two modes of operation in accelerator mode. just - in - time accelerator mode in this default mode, simulink generates an execution engine in memory for the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "are two modes of operation in accelerator mode. just - in - time accelerator mode in this default mode, simulink generates an execution engine in memory for the top - level model only and not for referenced models. as a result, a c compiler is not required during simulation. because the acceleration target code is in memory, it is available for reuse as long as the model is open. simulink also serializes the acceleration target code so that the model does not need rebuilding when it is opened. classic accelerator mode if you want to simulate your model using the classic, c - code generating, accelerator mode, run the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "not need rebuilding when it is opened. classic accelerator mode if you want to simulate your model using the classic, c - code generating, accelerator mode, run the following command : set _ param ( 0,'globaluseclassicaccelmode ','on') ; in this mode, simulink generates and links code into a shared library, which communicates with the simulink software. the target code executes in the same process as matlab and simulink. rapid accelerator mode rapid accelerator mode creates a rapid accelerator standalone executable from your model. this executable includes the solve", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "752b734718a85d19666540ebabc1b550_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-build-error-for-accelerator-mode.html", "title": "Troubleshoot Build Error for Accelerator Mode", "tags": [], "chunk_text": "matlab and simulink. rapid accelerator mode rapid accelerator mode creates a rapid accelerator standalone executable from your model. this executable includes the solver and model methods, but it resides outside of matlab and simulink. it uses external mode ( see external mode communication ( simulink coder ) ) to communicate with simulink. matlab and simulink run in one process, and if a second processing core is available, the standalone executable runs there.", "token_count": 101, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "troubleshoot model links to static libraries or shared objects some model build and runtime issues occur when linking a real - time application to static libraries (. a ) or shared objects (. so ). what this issue means when building or running real - time an application that links to static link libraries (. a ) or shared object libraries (. so ), there are some considerations that help you use libraries that are compatible with the qnx® neutrino® rtos on the speedgoat® target computer. these recommendations are helpful when troubleshooting library usage, including : a link to a library from qnx ne", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##os on the speedgoat® target computer. these recommendations are helpful when troubleshooting library usage, including : a link to a library from qnx neutrino rtos that is available in the simulink real - time target support package a shared object that is included in the model through an fmu block a custom static library or shared object that is linked to the real - time application try this workaround these workarounds explore the possible issues. link to accessible libraries or objects when you link to a static library or shared object, the library or object must be : compatible with the qnx neutrino rt", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "to accessible libraries or objects when you link to a static library or shared object, the library or object must be : compatible with the qnx neutrino rtos accessible to the toolchain at build time check to ensure that you have followed the guidelines for library compatibility. see external code integration of libraries and c / c + + code with simulink real - time models. check that the toolchain can access the library at build time. remember that the qnx neutrino cannot process spaces in the path to files. install shared objects on target computer after you build the real - time application that links to a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "qnx neutrino cannot process spaces in the path to files. install shared objects on target computer after you build the real - time application that links to a shared object, install both the real - time application and the shared object on the target computer. copy the shared objects to a location on the target computer where they can be found and loaded at runtime. the recommended locations are / lib, / usr / lib, or / usr / local / lib. root access is required to copy files to these locations. rebuild real - time application when rebuilding static libraries because linked static libraries are included in the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "/ lib. root access is required to copy files to these locations. rebuild real - time application when rebuilding static libraries because linked static libraries are included in the real - time application, when you modify and rebuild a static library, you rebuild any real - time applications that include that library. after rebuilding the static library and the real - time application, reinstall the real - time application on the target computer. fmu compile source code for functional mock - up units when you build a model that includes fmu blocks, you must compile the fmu source code by using the qnx neutrino compiler qcc", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "units when you build a model that includes fmu blocks, you must compile the fmu source code by using the qnx neutrino compiler qcc or q + +. this compiler creates shared object so files that you include in the fmu. this process makes sure that the fmu contains the code to run on a simulink real - time target computer. for more information, see apply functional mock - up units by using simulink real - time. implement the fmu block in model compile fmu file that contains source code copy openexample command paste command in matlab to download and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "time. implement the fmu block in model compile fmu file that contains source code copy openexample command paste command in matlab to download and open example files mkdir tempdir myfmudir ; cd tempdir ; cd myfmudir ; copyfile.. /.. / slrt _ ex _ fmu _ work ; warning : directory already exists. my _ file ='vanderpol. fmu'; evalc ('slrealtime. fmu. compilefmusources ( my _ file,'' overwritebinary '", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##u'; evalc ('slrealtime. fmu. compilefmusources ( my _ file,'' overwritebinary'', true )') ; fmu | slrealtime. fmu. compilefmusources build support for s - functions build integrated code within the simulink environment workflow to build executable programs that integrate generated code and external c or c + + code, iterate through the tasks in this table. configure parameters for integrated code build process the table provides a guide to model configuration parameters on code generation > custom code pan", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "the tasks in this table. configure parameters for integrated code build process the table provides a guide to model configuration parameters on code generation > custom code pane of the model configuration parameters dialog box that support the build process for external code integration. for information about folders for your external code, see manage build process folders ( embedded coder ). if you choose to place your external code in the code generation folder, see preserve external code files in build folder ( embedded coder ). %. obj : buildir \\ inc \\ %. c $ ( cc ) - c - fo $ ( @", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "folder ( embedded coder ). %. obj : buildir \\ inc \\ %. c $ ( cc ) - c - fo $ ( @ f ) $ ( cflags ) $ < preserve external code files in build folder by default, the build process deletes foreign source files. you can preserve foreign source files by following these guidelines. if you put a. c /. cpp or. h source file in a build folder, and you want to prevent the code generator from deleting it during the tlc code generation process, insert the text target specific file in the first line of the.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "want to prevent the code generator from deleting it during the tlc code generation process, insert the text target specific file in the first line of the. c /. cpp or. h file. for example : / * company - name target specific file * * this file is created for use with the * company - name target. * it is used for... * /... make sure that you spell the text “ target specific file ” as shown in the preceding example, and that the text is in the first line of the source file. other text can appear before or after this text. flag", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "as shown in the preceding example, and that the text is in the first line of the source file. other text can appear before or after this text. flagging user files in this manner prevents postprocessing these files to indent them with generated source files. auto - indenting occurred in previous releases to build folder files with names having the pattern model _ *. c /. cpp ( where * was text ). the indenting is harmless, but can cause differences detected by source control software that can potentially trigger unnecessary updates. user - written s - function blocks provide a powerful way to incorporate external code into the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "can cause differences detected by source control software that can potentially trigger unnecessary updates. user - written s - function blocks provide a powerful way to incorporate external code into the simulink® development environment. in most cases, you use s - functions to integrate existing external code with generated code. several approaches to writing s - functions are available : write noninlined s - function write wrapper s - function and tlc files write fully inlined s - functions write fully inlined s - functions with mdlrtw routine s - functions for code reuse s - functions for multirate multitasking environments s - functions also provide", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##d s - functions with mdlrtw routine s - functions for code reuse s - functions for multirate multitasking environments s - functions also provide the most flexible and capable way of including build information for legacy and custom code files in the build process. there are different ways of adding s - functions to the build process. implicit build support when building models with s - functions, the build process adds rules, include paths, and source file names to the generated makefile. the source files (. h,. c, and. cpp ) for the s - function must be in the same folder as the", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "makefile. the source files (. h,. c, and. cpp ) for the s - function must be in the same folder as the s - function mex - file. whether using the toolchain approach or template makefile approach for builds, the build process propagates this information through the toolchain or template makefile.. h. c. cpp if the file sfcnname. h exists in the same folder as the s - function mex - file ( for example, sfcnname. mexext ), the folder is added to the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "same folder as the s - function mex - file ( for example, sfcnname. mexext ), the folder is added to the include path. if the file sfcnname. c or sfcnname. cpp exists in the same folder as the s - function mex - file, the build process adds a makefile rule for compiling files from that folder. when an s - function is not inlined with a tlc file, the build process must compile the s - function source file. to determine the name of the source file to add to the list of files", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "tlc file, the build process must compile the s - function source file. to determine the name of the source file to add to the list of files to compile, the build process searches for sfcnname. cpp on the matlab path. if the source file is found, the build process adds the source file name to the makefile. if sfcnname. cpp is not found on the path, the build process adds the file name sfcnname. c to the makefile, whether or not it is on the matlab path. note for the simulink", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "the file name sfcnname. c to the makefile, whether or not it is on the matlab path. note for the simulink engine to find the mex - file for simulation and code generation, it must exist on the matlab path or exist in our current matlab working folder. specify additional source files for an s - function if your s - function has additional source file dependencies, you must add the names of the additional modules to the build process. specify the file names : in the s - function modules field in the s - function block parameter dialog box with the sfunction", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "to the build process. specify the file names : in the s - function modules field in the s - function block parameter dialog box with the sfunctionmodules parameter in a call to the set _ param function for example, suppose you build your s - function with multiple modules. mex sfun _ main. c sfun _ module1. c sfun _ module2. c you can then add the modules to the build process by doing one of the following : in the s - function block dialog box, specify sfun _ main, sfun _ module1, and sfun _ module", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "one of the following : in the s - function block dialog box, specify sfun _ main, sfun _ module1, and sfun _ module2 in the s - function modules field. at the matlab command prompt, enter : set _ param ( sfun _ block,'sfunctionmodules ','sfun _ module1 sfun _ module2') alternatively, you can define a variable to represent the parameter value. modules ='sfun _ module1 sfun _ module2'set _ param ( sfun _ block,'sfunctionmodules", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": ". modules ='sfun _ module1 sfun _ module2'set _ param ( sfun _ block,'sfunctionmodules ', modules ) the s - function modules field and sfunctionmodules parameter do not support complete source file path specifications. to use the parameter, the code generator must find the additional source files when executing the makefile. for the code generator to locate the additional files, place them in the same folder as the s - function mex - file. you can then leverage the implicit build support described in implicit build support. when you are ready to generate", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "same folder as the s - function mex - file. you can then leverage the implicit build support described in implicit build support. when you are ready to generate code, force the code generator to rebuild the top model, as described in control regeneration of top model code. for more complicated s - function file dependencies, such as specifying source files in other locations or specifying libraries or object files, use the rtwmakecfg. m api, as described in use rtwmakecfg. m api to customize generated makefiles. use tlc library functions if you inline your s", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "as described in use rtwmakecfg. m api to customize generated makefiles. use tlc library functions if you inline your s - function by writing a tlc file, you can add source file names to the build process by using the tlc library function libaddtomodelsources. for details, see libaddsourcefilecustomsection ( file, builtinsection, newsection ). libaddtomodelsources this function does not support complete source file path specifications. the function assumes that the code generator can find the additional source files when executing", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_23", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##dtomodelsources this function does not support complete source file path specifications. the function assumes that the code generator can find the additional source files when executing the makefile. another useful tlc library function is libaddtocommonincludes. use this function in a # include statement to include s - function header files in the generated model. h header file. for details, see libaddtocommonincludes ( incfilename ). precompile s - function libraries you can precompile new or updated s - function libraries ( mex - files ) for a model by using", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_24", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "). precompile s - function libraries you can precompile new or updated s - function libraries ( mex - files ) for a model by using the matlab language function rtw _ precompile _ libs. using a specified model and a library build specification, this function builds and places the libraries in a precompiled library folder. rtw _ precompile _ libs by precompiling s - function libraries, you can optimize system builds. once your precompiled libraries exist, the build process can omit library compilation from subsequent builds. for models that use numerous", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_25", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "optimize system builds. once your precompiled libraries exist, the build process can omit library compilation from subsequent builds. for models that use numerous libraries, the time savings for build processing can be significant. to use rtw _ precompile _ libs : set the library file suffix, including the file type extension, based on your system platform. consider determining the type of platform, and then use the targetlibsuffix parameter to set the library suffix accordingly. for example, when applying a suffix for a grt target, you can set the suffix to _ std. a for a unix®", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_26", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "library suffix accordingly. for example, when applying a suffix for a grt target, you can set the suffix to _ std. a for a unix® platform and _ vcx64. lib for a windows® platform. if isunix suffix ='_ std. a'; else suffix ='_ vcx64. lib'; end set _ param ( my _ model,'targetlibsuffix ', suffix ) ; there are a number of factors that influence the precompiled library suffix and extension. the following table provides examples for typical selections of system target file,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_27", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "; there are a number of factors that influence the precompiled library suffix and extension. the following table provides examples for typical selections of system target file, the compiler toolchain, and other options that affect your choice of suffix and extension. for more information, examine the template make files in the matlab / rtw / c / grt folder or matlab / rtw / c / ert folder. set the precompiled library folder. use one of the following methods to set the precompiled library folder : set the targetprecompliblocation parameter, as described in specify the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_28", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "use one of the following methods to set the precompiled library folder : set the targetprecompliblocation parameter, as described in specify the location of precompiled libraries. set the makeinfo. precompile field in an rtwmakecfg. m function file. ( for more information, see use rtwmakecfg. m api to customize generated makefiles. ) if you set targetprecompliblocation and makeinfo. precompile, the setting for targetprecompliblocation takes precedence. the following command sets", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_29", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##precompliblocation and makeinfo. precompile, the setting for targetprecompliblocation takes precedence. the following command sets the precompiled library folder for model my _ model to folder lib under the current working folder. set _ param ( my _ model,'targetprecompliblocation ', fullfile ( pwd,'lib') ) ; if you set both the target folder for the precompiled library files and a target library file suffix, the build process detects whether any precompiled library files are missing while processing", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_30", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "for the precompiled library files and a target library file suffix, the build process detects whether any precompiled library files are missing while processing builds. define a build specification. set up a structure that defines a build specification. the following table describes fields that you can define in the structure. these fields are optional, except for rtwmakecfgdirs. rtwmakecfgdirs a cell array of character vectors that name the folders containing rtwmakecfg files for libraries to be precompiled. the function uses the name and location elements of", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_31", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "that name the folders containing rtwmakecfg files for libraries to be precompiled. the function uses the name and location elements of makeinfo. library, as returned by rtwmakecfg, to specify the name and location of the precompiled libraries. if you set the targetprecompliblocation parameter to specify the library folder, that setting overrides the makeinfo. library. location setting. note : the specified model must contain blocks that use precompiled libraries specified by the rtwmakecfg files because the tm", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_32", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "setting. note : the specified model must contain blocks that use precompiled libraries specified by the rtwmakecfg files because the tmf - to - makefile conversion generates the library rules only if the build process uses the libraries. libsuffix intonlybuild makeopts addlibs a cell array of structures that specify libraries to be built that are not specified by an rtwmakecfg function. each structure must be defined with two fields that are character arrays : libname — the name of the library without a suffix libloc — the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_33", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "function. each structure must be defined with two fields that are character arrays : libname — the name of the library without a suffix libloc — the location for the precompiled library the target makefile ( tmf ) can specify other libraries and how those libraries are built. use this field to precompile those libraries. the following commands set up build specification build _ spec, which indicates that the files to be compiled are in folder src under the current working folder. build _ spec = [ ] ; build _ spec. rtwmakecfgdirs = { fullfile", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_34", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##c under the current working folder. build _ spec = [ ] ; build _ spec. rtwmakecfgdirs = { fullfile ( pwd,'src') } ; issue a call to rtw _ precompile _ libs. the call must specify the model for which you want to build the precompiled libraries and the build specification. for example : rtw _ precompile _ libs ( my _ model, build _ spec ) ; external code integration of libraries and c / c + + code with simulink real - time models considerations for integrating third", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_35", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "_ model, build _ spec ) ; external code integration of libraries and c / c + + code with simulink real - time models considerations for integrating third - party libraries and external code into simulink real - time when integrating code into simulink® real - time™ applications, start by following the guidance in build integrated code within the simulink environment. developers who integrate c / c + + code with simulink real - time applications notice some differences when they migrate the code that they integrated with simulink real - time applications from previous releases to r2020b and later releases. these differences include", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_36", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "differences when they migrate the code that they integrated with simulink real - time applications from previous releases to r2020b and later releases. these differences include : in release r2020a and previous releases, the on - time rtos on the speedgoat® target computer shared some libraries and system calls with windows®. in release r2020b and later releases, the qnx® neutrino® rtos on the target computer does not share libraries or system calls specific to windows. in release r2020a and previous releases, developers could use microsoft® visual studio® to compile libraries to integrate", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_37", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "libraries or system calls specific to windows. in release r2020a and previous releases, developers could use microsoft® visual studio® to compile libraries to integrate with simulink real - time applications. in release r2020b and later releases, you cannot use the microsoft visual studio compiler for this purpose. you can configure microsoft visual studio to use the qnx neutrino compiler from the simulink real - time target support package. in r2020b and later releases, developers use cross - compiling to produce libraries on their development computer for deployment to their target computer. value of upgrading your c", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_38", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "r2020b and later releases, developers use cross - compiling to produce libraries on their development computer for deployment to their target computer. value of upgrading your c / c + + code for integration into simulink real - time by updating your c / c + + code for integration into your simulink real - time application, you gain these benefits : leverage the qnx neutrino 64 - bit and posix® compatible rtos. code directly in c + + or wrap your legacy c code. use the code editor of your choice. for instance, customizing visual studio code with the source files and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_39", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "in c + + or wrap your legacy c code. use the code editor of your choice. for instance, customizing visual studio code with the source files and shipped qcc compiler from the simulink real - time target support package provides a similar experience to a full ide. leverage the precompiled qnx neutrino libraries and headers that are included in simulink real - time to extend the functionality of your real - time application. integrate any c / c + + application based on modern build and package software such as cmake. approaches for c / c + + code integration into simulink", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_40", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "any c / c + + application based on modern build and package software such as cmake. approaches for c / c + + code integration into simulink real - time there are advantages and disadvantages to each of these external code integration approaches. approach 1 : directly call c / c + + code. in this approach, you use c caller or c function blocks in the model. for more information, see integrate c / c + + code using c function blocks. advantages : there is no need to compile source code before building the model. disadvantages : this approach is hard to use for complex projects that have many", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_41", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": ". advantages : there is no need to compile source code before building the model. disadvantages : this approach is hard to use for complex projects that have many files and dependencies. approach 2 : build, link, and use static libraries (. a files ) advantages : all required files are packed in the real - time application mldatx file. in this approach, there is no need to install libraries on the target. and, this approach lets you protect your intellectual property. disadvantages : this approach is non - modular. a change in the library requires rebuilding the whole real - time application. also, this approach", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_42", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "your intellectual property. disadvantages : this approach is non - modular. a change in the library requires rebuilding the whole real - time application. also, this approach tends to produce larger real - time application mldatx files. approach 3 : build, deploy and use shared objects (. so files ) advantages : this approach is modular. you can build the real - time application and shared object independently. also, this approach tends to produce smaller real - time application mldatx files. and this approach lets you protect your intellectual property. disadvantages : in this approach, you need to access the target computer file system before", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_43", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##datx files. and this approach lets you protect your intellectual property. disadvantages : in this approach, you need to access the target computer file system before running the real - time application and install ( copy ) the shared objects to any of the common lib paths on the target computers. build libraries from source code for simulink real - time to integrate external code in a real - time application, the most flexible approaches are to build static libraries or shared objects from source code. the library build workflow is similar to the workflow used by most developers for release r2020a and previous releases. in those releases", "token_count": 127, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_44", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "from source code. the library build workflow is similar to the workflow used by most developers for release r2020a and previous releases. in those releases, the library build workflow for the target computer on - time rtos produced static libraries built with microsoft visual studio and produced. lib files. you achieve better usability when working with complex c + + projects that have many dependencies and source code files. s - functions offer better granularity when handling third - party libraries in simulink. s - functions enable the flexibility to use the same s - function source code with different platforms, including simulation on", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_45", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "handling third - party libraries in simulink. s - functions enable the flexibility to use the same s - function source code with different platforms, including simulation on the desktop in different operating systems. the s - functions are deployed and function in real - time on a target computer. cross - compiling is compiling a library for a target operating system ( for example, qnx neutrino rtos ) on a development operating system ( for example, windows ). some cross - compiling considerations for simulink real - time are : choice of development environment. many modern c + + projects use the cmake build environment. for more", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_46", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "- compiling considerations for simulink real - time are : choice of development environment. many modern c + + projects use the cmake build environment. for more information, see the cmake website. extensibility of development environment. for example, it is a common practice to extend most common cmake support for the qnx neutrino rtos by leveraging similarities with the unix® os and its posix compatibility. in your libraries, save cross - compiling libraries, including dependencies that might be already included in the simulink real - time target support package. these libraries can be linked to other c +", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_47", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "compiling libraries, including dependencies that might be already included in the simulink real - time target support package. these libraries can be linked to other c + + projects. the suggested workflow for integration of complex c + + applications into simulink real - time is : start from a c + + project with cmake as the build environment. set the dependencies, such as headers and libraries, in your simulink model. on the development computer, cross - compile libraries for the qnx neutrino rtos on the target computer. create an s - function, for instance using the s -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_48", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": ", cross - compile libraries for the qnx neutrino rtos on the target computer. create an s - function, for instance using the s - function builder block or a handwritten c - mex s - function, as the main function that calls the c + + functions defined in the header files and implemented in the compiled libraries for the qnx neutrino rtos. build the real - time application. by using ssh or ftp, copy your cross - compiled libraries to a location on the target computer where they can be found and loaded at run time. the recommended locations are / lib,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_49", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "copy your cross - compiled libraries to a location on the target computer where they can be found and loaded at run time. the recommended locations are / lib, / usr / lib, or / usr / local / lib. load and run the real - time application. external code integration for s - functions and simulink real - time when you include static libraries or shared objects in s - functions for external code integration with a real - time application, there are some tips for your development. when building from simulink : use rtwmakecfg. m and makeinfo object to", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_50", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": ", there are some tips for your development. when building from simulink : use rtwmakecfg. m and makeinfo object to map libraries and header files. for more information, see use makecfg to customize generated makefiles for s - functions. function makeinfo = rtwmakecfg proj = currentproject ; rootpath = proj. rootfolder ; makeinfo. linklibsobjs = { } ; systarget = get _ param ( bdroot,'rtwsystemtargetfile')", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_51", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "##libsobjs = { } ; systarget = get _ param ( bdroot,'rtwsystemtargetfile') ; switch systarget case'speedgoat. tlc'makeinfo. includepath ='< includepath >'; makeinfo. linklibsobjs { end + 1 } ='< librarypath >'; otherwise error ('no rtwmakecfg found for % s target file ', systarget ) ; end end enable linking for different target files. use macros, such as simulink _", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_52", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "found for % s target file ', systarget ) ; end end enable linking for different target files. use macros, such as simulink _ real _ time, in your source code to add lines at compile time for real - time simulation. simulink _ real _ time is useful to wrap the log function calls. when cross - compiling, use macros such as _ _ unix _ _ and _ _ qnxnto _ _ in your source code to add lines at compile time. additional c / c + + project for simulink real - time the ecal toolbox for simulin", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "78f4adf9142f8e246f64bcab94ca66a9_53", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-model-links-to-static-libraries-or-shared-objects.html", "title": "Troubleshoot Model Links to Static Libraries or Shared Objects", "tags": ["LibAddSourceFileCustomSection", "LibAddToCommonIncludes", "R2020A", "R2020B"], "chunk_text": "source code to add lines at compile time. additional c / c + + project for simulink real - time the ecal toolbox for simulink project on github. com / mathworks / ecal - toolbox shows complete external code integration with simulink real - time, including s - function wrappers, rtwmakecfg customization, and shared object compilation. you also can simulate this example on your development computer. rtwmakecfg", "token_count": 102, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "troubleshoot folder names with spaces or special characters halt model builds when a space character appears the file path, the simulink® real - time™ model build reports an error : simulink real - time model build cannot use a file path with spaces for model build directory. when a special character, such as an open parenthesis character \" ( \", appears in the file path, the model build reports an error : error ( s ) encountered while building \" xxxx \" what this issue means for the simulink real - time model build … message or for the error ( s ) encountered while building … message, message", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "##xx \" what this issue means for the simulink real - time model build … message or for the error ( s ) encountered while building … message, message indicates that a space character or special character appears in the file path. the qnx® neutrino® toolchain for the code generation target is not compatible with file paths that contain spaces or special characters, the model build halts and does not output a real - time application. try this workaround try these workaround options to resolve the model build errors. create a build folder create a folder name that does not have spaces or special characters in it. build", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "try these workaround options to resolve the model build errors. create a build folder create a folder name that does not have spaces or special characters in it. build your model in that folder. map the build folder map the folder name or path that has spaces or special characters in it to a folder name or path without spaces or special characters. build your model in the mapped folder. build process support for file and folder names filenames with spaces for the build process that uses toolchaininfo objects, only these toolchains support the use of filenames containing spaces : toolchaininfo gnu gcc / g +", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "uses toolchaininfo objects, only these toolchains support the use of filenames containing spaces : toolchaininfo gnu gcc / g + + | gmake ( 64 - bit linux ) on linux® mingw64 | gmake ( 64 - bit windows ) on windows® xcode with clang | gmake ( 64 - bit mac ) on mac the build process that uses template makefiles does not support the use of filenames containing spaces. folder names with spaces on a windows system, the code generator maps a drive corresponding to the matlab® installation folder for either of these conditions :", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "containing spaces. folder names with spaces on a windows system, the code generator maps a drive corresponding to the matlab® installation folder for either of these conditions : the matlabroot folder is a unc location. the path the matlabroot folder contains spaces, and the system has no alternative name support. these folder paths can contain spaces : the path to your matlab installation folder ( matlabroot ). for example, c : \\ program files \\ matlab \\ r2015b the path to the current working folder where you start the build ( pwd ). for example, c : \\ users", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "\\ matlab \\ r2015b the path to the current working folder where you start the build ( pwd ). for example, c : \\ users \\ username \\ documents \\ my work. the path to the installation folder for a compiler that the build process uses. if your work environment includes one or more of the preceding scenarios, use the following support mechanisms for the build process : if you are using the toolchain approach to build generated code, the system support for spaces in folder names influences toolchain operation : for linux systems and windows systems with 8. 3 name creation enabled, the toolchain manages", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "system support for spaces in folder names influences toolchain operation : for linux systems and windows systems with 8. 3 name creation enabled, the toolchain manages spaces in folder names by using alternative names from the operating system. the toolchain uses the transformpathswithspaces attribute to manage these names. addattribute ( toolchainobject,'transformpathswithspaces ', true ) ; the security permissions of drives and folders can determine whether the toolchain transforms the path. for example, if the path contains a folder with a security configuration that forbids 8. 3 path", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "##s can determine whether the toolchain transforms the path. for example, if the path contains a folder with a security configuration that forbids 8. 3 path transformations, the toolchain does not transform the path and the build process produces a warning. for windows systems with 8. 3 name creation disabled, the toolchain manages spaces in folder names by mapping a network drive using a batch file (. bat ). this operation requires adding the requiresbatchfile attribute to the toolchain definition. addattribute ( toolchainobject,'requiresbatchfile ', true ) ; when", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "##le attribute to the toolchain definition. addattribute ( toolchainobject,'requiresbatchfile ', true ) ; when developing a toolchain for a windows system, set both attributes. for more information about the toolchain attributes, see addattribute. if you are using the template makefile approach to build generated code, the template makefile (. tmf ) requires code to manage spaces in folder names. when the alternative folder names ( windows short names ) differ from the file system folder names ( windows long names ), add this code to the", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "in folder names. when the alternative folder names ( windows short names ) differ from the file system folder names ( windows long names ), add this code to the makefile. alt _ matlab _ root = | > alt _ matlab _ root < | alt _ matlab _ bin = | > alt _ matlab _ bin < |! if \" $ ( matlab _ root ) \"! = \" $ ( alt _ matlab _ root ) \" matlab _ root = $ ( alt _ matlab _ root )! endif! if \" $ ( matlab _ bin ) \"! = \" $", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "matlab _ root = $ ( alt _ matlab _ root )! endif! if \" $ ( matlab _ bin ) \"! = \" $ ( alt _ matlab _ bin ) \" matlab _ bin = $ ( alt _ matlab _ bin )! endif when the values of the location tokens are not equal, this code replaces matlab _ root with alt _ matlab _ root. the replacement indicates that the path to your matlab installation folder includes spaces. this code applies the same type of replacement for matlab _ bin with alt _ matlab _ bin. the preceding code is specific", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "##lab installation folder includes spaces. this code applies the same type of replacement for matlab _ bin with alt _ matlab _ bin. the preceding code is specific to nmake. for platform - specific examples, see the supplied template makefiles. with either build approach, when there is an issue with support for creation of alternate names ( short names ), build errors can occur on windows. if a build generates an error message similar to the following message, see troubleshooting errors when folder names have spaces. nmake : fatal error u1073 : don't know how to make '... when using", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "##hooting errors when folder names have spaces. nmake : fatal error u1073 : don't know how to make '... when using operating system commands, such as system or dos, enclose paths that specify executable files or command parameters in double quotes ( \" \" ). for example : system ('dir \" d : \\ applications \\ common files \"') this table provides a summary of build folder support and limitations for windows. \\ \\ networkdrive \\ matlab \\ r20xxb t : \\ c : \\ program files \\ matlab \\ r20xxb t : \\", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": ". \\ \\ networkdrive \\ matlab \\ r20xxb t : \\ c : \\ program files \\ matlab \\ r20xxb t : \\ r20xxb c : \\ program files \\ matlab \\ r20xxb sp1 rtwmakecfg. m model configuration parameter additional build information code replacement library getshortpathname ( ) ntfsdisable8dot3namecreation ntfs file system with short path name support disabled refs file system ( this file system does not support short path names ) troubleshooting errors when folder names have spaces on windows, when there is an", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "disabled refs file system ( this file system does not support short path names ) troubleshooting errors when folder names have spaces on windows, when there is an issue with support for creation of short filenames, build process errors can occur. when this issue affects a build, you see an error message similar to : nmake : fatal error u1073 : don't know how to make'c : \\ work \\ my'this message can occur if a space in the folder name ( c : \\ work \\ my models ) prevents the build process from finding the model or a file to build. for descriptions of", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "a space in the folder name ( c : \\ work \\ my models ) prevents the build process from finding the model or a file to build. for descriptions of the build - related folders that are sensitive to a space in the folder name or path, see folder names with spaces. to avoid issues from folder names with spaces when windows short filename support for filenames is disabled, do not use paths with spaces. for example, install third - party software to paths without spaces. do not use paths with spaces for folders containing your models, source files, or libraries. an issue can occur with builds that use folder", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "paths without spaces. do not use paths with spaces for folders containing your models, source files, or libraries. an issue can occur with builds that use folder names with spaces, because it is possible to disable windows alternate name support. the build process uses this alternate name support on windows systems. there are many terms for this file, folder, and path alternate name support : 8. 3 name dos path short filename ( sfn, shortfilename ) long name alias windows path alias verify the type of file system that the drive uses. in windows explorer, right - click the drive icon and select properties. if", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "long name alias windows path alias verify the type of file system that the drive uses. in windows explorer, right - click the drive icon and select properties. if the file system is refs ( resilient file system ), it is an issue. the refs does not provide short filename support. except for the matlab installation folder, the build process does not support folder names with spaces for the refs file system. if your work environment requires short filename support for the build folder or for additional external code folders, do not use refs. if the file system is ntfs ( new technology file system", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "##name support for the build folder or for additional external code folders, do not use refs. if the file system is ntfs ( new technology file system ), it is possible that the build error is related to a registry setting incompatibility. continue with troubleshooting steps. the error could stem from an issue with short filename support on a system using ntfs. check the windows registry setting that enables the creation of short names for files, folders, and paths. open the windows command prompt, running as administrator. for example, from the windows start menu, type cmd, right - click the", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "##s, and paths. open the windows command prompt, running as administrator. for example, from the windows start menu, type cmd, right - click the cmd. exe icon, and select run as administrator. change to the windows \\ system32 folder and query the ntfsdisable8dot3namecreation status by typing : if the registry state of ntfsdisable8dot3namecreation is not 0 ( enable 8dot3 name creation for all volumes on the system ), change the value to 0 by typing : changing the registry setting enables creation of short names only for files and folders", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "creation for all volumes on the system ), change the value to 0 by typing : changing the registry setting enables creation of short names only for files and folders that are created after the change. to create short names for files created while short name creation was disabled, at the windows command line, use the fsutil utility. to set the short name, the syntax is : for example, to create the short name progra ~ 1 for the long name c : \\ program files, type : the c : \\ program files folder name is in quotations because it has spaces. to verify that the short name was created", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": ": \\ program files, type : the c : \\ program files folder name is in quotations because it has spaces. to verify that the short name was created, use the dir command with / x option to show short names. folder names with special characters the build process might produce an error if a build - related folder path contains : unicode® characters that do not belong to the system locale. this limitation does not apply if the build process uses a microsoft® visual c + + ® compiler. a japanese ( multibyte ) character where the final byte is equal to the 5c hexadecimal character. the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "c + + ® compiler. a japanese ( multibyte ) character where the final byte is equal to the 5c hexadecimal character. the make and compiler tools might incorrectly interpret the final byte as the'\\'( backslash ) character. one or more of these characters :'&'( ampersand )':'( colon )';'( semicolon )'$'( dollar sign )'('( left parenthesis )')'( right parenthesis )'^'( circumflex accent ) very long folder paths for the mingw® compiler", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "400846ead1d1cb014f8c8ae26494883c_23", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-folder-names-with-spaces-or-special-characters-halt-model-builds.html", "title": "Troubleshoot Folder Names with Spaces or Special Characters Halt Model Builds", "tags": ["Error", "R2015B"], "chunk_text": "parenthesis )')'( right parenthesis )'^'( circumflex accent ) very long folder paths for the mingw® compiler, the build process produces an error when the command line length exceeds the windows limit of 32, 767 characters. if this error occurs, check the length of include paths. you can reduce the command line length by building the generated code in a code generation folder that has a shorter name addattribute", "token_count": 94, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "troubleshoot missing real - time tab where is the real - time tab? this tab is not visible in the simulink® editor. what this issue means from the model configuration, the simulink editor determines which tabs to display. the editor displays the real - time tab for models that are configured for simulink real - time™. try this workaround to configure your model for simulink real - time, in simulink editor, from the apps tab, click simulink real - time. this operation changes the code generation target for the model to a simulink real -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "editor, from the apps tab, click simulink real - time. this operation changes the code generation target for the model to a simulink real - time system target file ( stf ) and applies other configuration parameter changes for compatibility. after changing the configuration, the simulink editor displays the real - time tab for the model. create and run real - time application from simulink model this tutorial begins with a non - real - time simulink® model of a damped oscillator, slrt _ ex _ osc _ nrt. slrt _ ex _ osc _ nr", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "##k® model of a damped oscillator, slrt _ ex _ osc _ nrt. slrt _ ex _ osc _ nrt open the non - real - time model copy openexample command paste command in matlab to download and open example files model _ nrt ='slrt _ ex _ osc _ nrt'; open _ system ( model _ nrt ) ; model _ rt ='slrt _ ex _ osc _ rt'; open _ system ( model _ rt ) ; transform simulink model to real - time application add simulink real", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "ex _ osc _ rt'; open _ system ( model _ rt ) ; transform simulink model to real - time application add simulink real - time file log block in the matlab command window, type slrt _ ex _ osc _ nrt. matlab loads the oscillator model and displays the simulink block diagram. in simulink editor, from the apps tab, click simulink real - time. from the real - time tab prepare section, click library browser. in the simulink left pane, browse to and double - click the node simulin", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "the real - time tab prepare section, click library browser. in the simulink left pane, browse to and double - click the node simulink real - time. from the list of i / o block categories, click node logging. click and drag the file log block to the simulink block diagram. simulink adds a new real - time file log block to the model. connect the mux output to the file log block input. on the simulation tab, from the save button, click save as. enter a file name. for example, enter slrt _ ex _ osc _ uc", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "on the simulation tab, from the save button, click save as. enter a file name. for example, enter slrt _ ex _ osc _ ucf, and then click ok. to open the unconfigured model slrt _ ex _ osc _ ucf, in the matlab command window, type : model _ ucf ='slrt _ ex _ osc _ ucf'; open _ system ( model _ ucf ) ; set file log block parameters in the matlab command window, type slrt _ ex _ osc _ ucf. matlab loads the osci", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": ") ; set file log block parameters in the matlab command window, type slrt _ ex _ osc _ ucf. matlab loads the oscillator model and displays the simulink block diagram. double - click the file log block. in the decimation text box, type 1. this value means that data is collected at each sample interval. click ok, and then from the simulation tab, click save. set configuration parameters in the matlab command window, type slrt _ ex _ osc _ ucf. from the real - time tab, click hardware settings. in the configuration parameters dial", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "##lab command window, type slrt _ ex _ osc _ ucf. from the real - time tab, click hardware settings. in the configuration parameters dialog box, click the solver node. in the solver selection section, from the type list, select fixed - step. from the solver list, select a solver. for example, select the general - purpose solver ode4 ( runge - kutta ). under solver details, in the fixed - step size ( fundamental sample time ) box, enter the sample time for the real - time application. for example, enter 0. 00025", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "in the fixed - step size ( fundamental sample time ) box, enter the sample time for the real - time application. for example, enter 0. 00025 seconds ( 250 microseconds ). after creating the real - time application, you can change this value. if you find that a value overloads the cpu on the target computer, try a larger fixed - step size value, such as 0. 0002 seconds. the sample times of the model blocks can be multiples only of fixed - step size. if you enter'auto'in fixed - step size, the fundamental sample time is calculated from the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "blocks can be multiples only of fixed - step size. if you enter'auto'in fixed - step size, the fundamental sample time is calculated from the sample times of the model blocks. click ok. from the apps tab, select simulink real - time. this selection configures the system target file and other model settings for simulink real - time. in the simulation tab, from the save button, click save as. enter a file name. for example, enter slrt _ ex _ osc _ rt. start target computer and display status monitor start the target computer. the target computer displays", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "5a329912743e557d4a60f862b11562ea_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-missing-real-time-tab.html", "title": "Troubleshoot Missing Real-Time Tab", "tags": [], "chunk_text": "name. for example, enter slrt _ ex _ osc _ rt. start target computer and display status monitor start the target computer. the target computer displays session 1 ( default ) and the target computer status monitor. close models bdclose ( model _ nrt ) ; bdclose ( model _ rt ) ; bdclose ( model _ ucf ) ; target | mux | load", "token_count": 84, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1aa77c705e3e89a416dc40622c2a0b69_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-system-upgrade-to-r2020b.html", "title": "Troubleshoot System Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "troubleshoot system upgrade for r2020b after upgrading simulink real - time software to r2020b and installing the simulink real - time target support package, the system cannot download real - time applications to the target computer. what this issue means the upgrade for release r2020b requires software upgrades to the simulink real - time software and the speedgoat target machine software. try this workaround in r2020b, the change to a 64 - bit posix compliant real - time operating system on the target computer requires a software upgrade for your speedgoat® real - time target", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1aa77c705e3e89a416dc40622c2a0b69_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-system-upgrade-to-r2020b.html", "title": "Troubleshoot System Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "to a 64 - bit posix compliant real - time operating system on the target computer requires a software upgrade for your speedgoat® real - time target machine. for this upgrade, the speedgoat i / o blockset provides an interactive tool. to retain compatibility with previous versions of matlab, you can choose to upgrade the target machine to a dual - boot system where you can select the operating system at startup. or, you can upgrade the target machine to use only the new operating system. for the upgrade, you need a usb drive and the target machine needs a keyboard and a monitor. to upgrade your software", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "1aa77c705e3e89a416dc40622c2a0b69_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug_upgrade/troubleshoot-system-upgrade-to-r2020b.html", "title": "Troubleshoot System Upgrade for R2020b", "tags": ["R2020B"], "chunk_text": "to use only the new operating system. for the upgrade, you need a usb drive and the target machine needs a keyboard and a monitor. to upgrade your software : install simulink real - time and other required products. install the simulink real - time target support package by using the matlab add - ons menu. install the speedgoat i / o blockset. go to the speedgoat customer portal. to start the target machine upgrade, in the matlab command window, type : speedgoat. migratetarget for more information, go to the speedgoat website.", "token_count": 122, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "troubleshoot etas inca operation investigate issues that can occur when etas® inca controls a real - time application. a third - party calibration tool ( etas inca ) is not working with the real - time application. what this issue means you can use the etas inca tool to view signals and tune parameters in the real - time application. for more information, see the steps in prepare asap2 data description file. in addition to the limitations listed in etas inca limitations, there are various issues that can prevent the operation of this tool. try this workaround for etas inca tool issues, try these work", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "etas inca limitations, there are various issues that can prevent the operation of this tool. try this workaround for etas inca tool issues, try these workarounds. simulation data inspector in use simulation data inspector and the third - party calibration tools ( vector canape® and etas inca ) are mutually exclusive. if you use the simulation data inspector to view signal data, you cannot use the calibration tools. if you use the calibration tools, you cannot use the simulation data inspector to view signal data. client cannot connect check the ip address of the speedgoat® target computer associated with the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "tools, you cannot use the simulation data inspector to view signal data. client cannot connect check the ip address of the speedgoat® target computer associated with the model and compare it to the address stored in the asap2 file. asap2 file out of date when you rebuild a simulink® real - time™ application, update the asap2 file loaded in the calibration tool with the new version of the file. the asap2 file is valid only until the next time that you build the application. cannot disable freeze mode remove the dataset file from the target file system and reset the parameters", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "is valid only until the next time that you build the application. cannot disable freeze mode remove the dataset file from the target file system and reset the parameters to the original values specified in your model. the dataset file is named flashdata _ model _ name. dat. transport layer failure when a transport layer failure occurs, etas inca can display this message : error : transport layer failure, inconsistent msgcounter this error appears in etas inca when the incorrect setting is used for'counter consistency mode '. make sure that the'counter consistency mode'is set to'one counter for all ctos +", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "the incorrect setting is used for'counter consistency mode '. make sure that the'counter consistency mode'is set to'one counter for all ctos + dtos'in the hardware settings for your experiment. at etas, we provide high - performance hardware and software to capture all vehicle data - from ecus, networks, buses, and sensors - without data loss. our tools enable you to systematically and efficiently extract the information you truly need to master the mass of data. they help you optimize functions in operation for new models and variants, permanently increasing the value of your vehicle. our engineering services and consulting services", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "of data. they help you optimize functions in operation for new models and variants, permanently increasing the value of your vehicle. our engineering services and consulting services are available to assist with all your development needs. the open architecture, modular design, and support of industrial and automotive standards common to all etas products allow for flexible adaptation to different development requirements and existing infrastructures. our software development solutions take your team from concept to delivery with virtualization, automated testing, and secure, efficient release cycles. we provide a highly automated, collaborative environment on the pc, on the network or in the cloud. our openness to third -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_6", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "secure, efficient release cycles. we provide a highly automated, collaborative environment on the pc, on the network or in the cloud. our openness to third - party and in - house solutions, certified standardization and comprehensive services give you a high degree of flexibility. etas offers comprehensive test and validation solutions, including software - in - the - loop ( sil ) testing in the cloud and virtual validation. our solutions enable you to efficiently and reliably test embedded systems and automotive cybersecurity, ensuring high performance, safety, and compliance with industry standards throughout the development lifecycle. at etas, we provide high -", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_7", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "and automotive cybersecurity, ensuring high performance, safety, and compliance with industry standards throughout the development lifecycle. at etas, we provide high - performance real - time environments, including basic software, middleware, and configuration tools, based on autosar classic and adaptive standards, as well as adas / ad and edge middleware solutions. our vehicle software platform suite is a key enabler for seamless and reliable software integration in modern vehicles. we provide integrated authoring and diagnostic solutions with relevant repair and service data for manufacturers and workshops. our connected cross - lifecycle diagnostics feature automated content generation and enable you", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_8", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "integrated authoring and diagnostic solutions with relevant repair and service data for manufacturers and workshops. our connected cross - lifecycle diagnostics feature automated content generation and enable you to continuously monitor vehicle health as well as perform accurate troubleshooting and cloud - based predictive maintenance across the entire fleet. etas provides embedded software, such as hsm firmware and cryptographic libraries for microcontrollers, as well as security solutions for microprocessor systems and vehicle computers to protect against cyber - attacks. we also offer dedicated tools to improve system robustness, while our intrusion detection and prevention solution secures vehicles and fleets throughout their", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_9", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "to protect against cyber - attacks. we also offer dedicated tools to improve system robustness, while our intrusion detection and prevention solution secures vehicles and fleets throughout their lifecycle. at etas, we offer security consulting, security testing services, risk management, and vulnerability management to improve the security resilience of automotive components or vehicle platforms. we also provide a product security organization framework to help you achieve compliance with current automotive cybersecurity standards and regulations. etas offers a centralized and comprehensive customer service for hardware products, which includes repair, maintenance, and calibration services. all services are carried out by professionals who are", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_10", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "offers a centralized and comprehensive customer service for hardware products, which includes repair, maintenance, and calibration services. all services are carried out by professionals who are specialized in etas products and their services. to compete in the future mobility race, rapid software delivery is key. it allows you to integrate innovations faster. it keeps vehicles competitive and up to date. and it helps you meet customer expectations as quickly as possible. adas data acquisition & management are critical to the development of automated driving functions. adas / ad data recorded in the vehicle or across the fleet reduce test drive time and costs, and ensure that adas /", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_11", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "development of automated driving functions. adas / ad data recorded in the vehicle or across the fleet reduce test drive time and costs, and ensure that adas / ad systems operate safely and efficiently in real - world scenarios. calibration of automotive electronics is an essential part of the development process of new vehicles from the first prototypes until after sop. by parameterizing the control unit software, the behavior of the control and diagnostic functions can be easily adapted to different system variants or vehicle models. as the industry moves toward software - defined vehicles, new demands and opportunities are emerging for vehicle diagnostics. with cloud - based vehicle monitoring,", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_12", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "or vehicle models. as the industry moves toward software - defined vehicles, new demands and opportunities are emerging for vehicle diagnostics. with cloud - based vehicle monitoring, on - demand vehicle diagnostics and software updates, and predictive analysis of failure probabilities, you can unlock value throughout the vehicle lifecycle. increasingly connected vehicles present new cybersecurity risks. as a result, automotive - specific regulations mandate the implementation of cybersecurity measures. as an automotive oem or supplier you need to ensure your products are cyber - mature, in compliance with international regulations and standards. microcontroller programming is a cyclical", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_13", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "oem or supplier you need to ensure your products are cyber - mature, in compliance with international regulations and standards. microcontroller programming is a cyclical routine task of oems and suppliers. the challenge is to adapt the software development process chain and make it as efficient as possible, while at the same time navigating a complex landscape of technical and regulatory challenges. as vehicles become \" computers on wheels \", cybersecurity challenges arise. in an increasingly connected ecosystem, it is essential to establish a robust, holistic security framework across the vehicle lifecycle and supply chain. effectively managing vulnerabilities and", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_14", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "increasingly connected ecosystem, it is essential to establish a robust, holistic security framework across the vehicle lifecycle and supply chain. effectively managing vulnerabilities and securing vehicle computers and systems is key to successful sdv development. virtualization, automation, and parallelization are key to accelerating automotive software testing. by virtualizing ecus, vehicles, and environments, and integrating them into automated, cloud - based workflows, testing becomes faster and more efficient, paving the way for innovation in software - defined vehicles. as vehicles become more connected, cybersecurity has advanced to a major business factor for modern cars : software vu", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_15", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "way for innovation in software - defined vehicles. as vehicles become more connected, cybersecurity has advanced to a major business factor for modern cars : software vulnerabilities have led to safety recalls, automotive - specific regulations mandate security in the largest markets, and automotive companies rank cyber incidents as a top business risk. our vehicle software platform is crucial for integrating disparate software components, managing real - time data, and supporting scalable, updatable vehicle architectures. it bridges communication within the vehicle's software architecture, allowing applications to be developed, maintained, and upgraded independently. the central challenge in adas /", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_16", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "##s. it bridges communication within the vehicle's software architecture, allowing applications to be developed, maintained, and upgraded independently. the central challenge in adas / ad function development is ensuring safety and reliability while achieving robust performance across diverse scenarios. this makes the development of such functions resource - intensive, requiring an iterative and data - driven approach, thorough validation, and continuous improvement. with the shift to electric vehicles. the demands on measurement, validation, and calibration systems are increasing. the aim is to create sophisticated energy management systems that reconcile limited battery capacity with the highest levels of comfort and performance. even though differentiating functional", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_17", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "systems are increasing. the aim is to create sophisticated energy management systems that reconcile limited battery capacity with the highest levels of comfort and performance. even though differentiating functionalities are trending in the vehicle market, developers need a solid base of enabling technologies and software to relieve them from repetitive side quests. free & open - source software ( foss ) unleashes the power of collaboration frees up your resources to accelerate on creating future customer value. the shift from traditional ecus to centralized, zonal e / e architectures is accelerating as the industry moves toward software - defined vehicles. these new e / e architectures", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_18", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "traditional ecus to centralized, zonal e / e architectures is accelerating as the industry moves toward software - defined vehicles. these new e / e architectures enable efficient, high - bandwidth communication but bring new challenges for oems and suppliers. the future of mobility is defined by software. throughout its entire lifecycle, the vehicle can be optimized with new services and functions via software updates, customizing it to the driver ’ s needs. this opens up new digital business models for oems, fleet operators, and service providers. a software factory streamlines software development like an assembly line, optimizing work", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_19", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "new digital business models for oems, fleet operators, and service providers. a software factory streamlines software development like an assembly line, optimizing workflows through automation, cloud solutions, and parallelization. it enhances collaboration, speeds up delivery, and reduces redundant tasks while maintaining safety and quality. at etas, we don't just talk about the future, we're building it today. we kickstart future mobility by combining the reliability of a leading automotive supplier with the agility of digital talent in one software factory. we are here to accelerate your journey into the future of mobility, providing immediate", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_20", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "of a leading automotive supplier with the agility of digital talent in one software factory. we are here to accelerate your journey into the future of mobility, providing immediate support from day one. at etas, diversity and inclusion are firmly anchored in our corporate culture. we value the different perspectives and talents of each individual. all employees have equal opportunities and are empowered to bring their authentic selves to work, thus contributing to a unique workplace. our etas partnerships will grow together to become holistic partnership networks. these partner networks address the transformation of the automotive industry together with manufacturers and suppliers in an innovative and conscientious manner.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_21", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "to become holistic partnership networks. these partner networks address the transformation of the automotive industry together with manufacturers and suppliers in an innovative and conscientious manner. we, at etas, are teaming up with software and consulting companies, device manufacturers, service providers, and infrastructure partners. furthermore, we want to leverage synergies and innovation through active participation in committees, associations, and research projects. quality is deeply rooted in the business principles at etas. we are committed to offer our customers only top - quality products and services that are compliant with international regulations and standards. to achieve and accomplish the best possible performance, we continuously", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_22", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "committed to offer our customers only top - quality products and services that are compliant with international regulations and standards. to achieve and accomplish the best possible performance, we continuously improve our management system and regularly undergo audits and assessments. visit our newsroom for the latest news about etas, our products and services, and the latest trends in software - defined mobility. or subscribe to our newsletter and receive the latest news in your inbox. get first - hand information live, and join us at numerous trade shows and conferences around the world. here you will find an overview of the events where we participate with an exhibit or a lecture.", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_23", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "and join us at numerous trade shows and conferences around the world. here you will find an overview of the events where we participate with an exhibit or a lecture. the etas press room is our service for journalists, bloggers and online multipliers. here you will find our press releases, related images, and contact information for your worldwide press contacts. discover exciting career opportunities at etas. join a team of innovators and grow your career in a supportive and dynamic environment. all - in - one powertrain calibration for ice, ev, and fuel cells etas and thundersoft are joining forces to drive", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_24", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "dynamic environment. all - in - one powertrain calibration for ice, ev, and fuel cells etas and thundersoft are joining forces to drive innovation in automotive software solutions etas at auto shanghai 2025 : innovations for software - defined vehicles accredited calibration guarantees highest precision and reliability adas / ad function development automotive cybersecurity vehicle software platform e - mobility free and open - source software ( foss ) new e / e architectures software - defined vehicle software factory shift your software delivery performance into a higher gear accelerating software development adas data acquisition & management calibrating automotive electronics cross lifecycle diagnostic", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_25", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "- defined vehicle software factory shift your software delivery performance into a higher gear accelerating software development adas data acquisition & management calibrating automotive electronics cross lifecycle diagnostics cybersecurity compliance & regulations software development for deeply embedded microcontrollers virtualization & automated testing support & training webinars support hotlines join # teametas and be part of a community where your potential is our priority. we are close to you, at 42 locations in europe, asia, and the americas. etas inca limitations for etas® inca, the simulink® real - time™ software does not support : connecting mat", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_26", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "asia, and the americas. etas inca limitations for etas® inca, the simulink® real - time™ software does not support : connecting matlab® to the target computer while using etas inca. loading, starting, or stopping the real - time application by using etas inca commands. to load, start, or stop the real - time application on the target computer, use the target computer command - line interface. for example : slrealtime load - - appname app _ name slrealtime start slrealtime stop for more information, see target computer command - line interface. etas inca flash", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_27", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "load - - appname app _ name slrealtime start slrealtime stop for more information, see target computer command - line interface. etas inca flash programming. multiple simultaneous etas inca connections to a single target computer. tunability of parameters with exportedglobal storage class when the model has other parameters with pageswitching storage class. as a work around you can : place all the parameters you want to tune in model workspace. or change the default mapping for storage class from pageswitching to default. the pageswitching storage class is not used, and the page switching functionality is not available", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_28", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "default mapping for storage class from pageswitching to default. the pageswitching storage class is not used, and the page switching functionality is not available. event mode data acquisition has the following limitations : every piece of data that the simulink real - time software adds to the event list slows the real - time application. the amount of data that you can observe depends on the model sample time and the speed of the target computer. it is possible to overload the target computer cpu to where data integrity is reduced. you can trace only signals and scalar parameters. you cannot trace vector parameters. prepare asap", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_29", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "overload the target computer cpu to where data integrity is reduced. you can trace only signals and scalar parameters. you cannot trace vector parameters. prepare asap2 data description file this example shows how to configure a simulink® real - time™ model so that the build generates an asap2 ( a2l ) data description file for the real - time application. the real - time application models a damped oscillator that feeds into 1 - d and 2 - d lookup tables, which invert and rescale the input waveform. open the model copy openexample command", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_30", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "1 - d and 2 - d lookup tables, which invert and rescale the input waveform. open the model copy openexample command paste command in matlab to download and open example files model ='slrt _ ex _ osc _ cal'; open _ system ( model ) ; initial setup kg - - parameter object for the gain1 block dampedosc, signalgenerator, l _ 1d, l _ 2d - - signal objects for output signals lut _ 1d _ obj, lut _ 2d _ obj - - 1 - d and 2 - d look", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_31", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "- signal objects for output signals lut _ 1d _ obj, lut _ 2d _ obj - - 1 - d and 2 - d lookup tables data respectively signalgenerator - - test input data set up parameters value - - 400 data type - - double set up signals minimum - - - 10 maximum - - 10 data type * - - double minimum - - - 15 maximum - - 15 set up lookup tables number of table dimensions - - 1 data specification - - lookup table object name - - lut _ 1d _ obj number of table dimensions - - 2 name - - lu", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_32", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "- 1 data specification - - lookup table object name - - lut _ 1d _ obj number of table dimensions - - 2 name - - lut _ 2d _ obj generate data description file coder. asap2. export ('slrt _ ex _ osc _ cal ',...'mapfile ','slrt _ ex _ osc _ cal _ slrealtime _ rtw / slrt _ ex _ osc _ cal ',...'comments ', false ) ; close all open files bdclose ( model ) ; n - d", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "8aa39aff8b1f804679638c88715728d6_33", "source_url": "https://in.mathworks.com/help/slrealtime/ug/etas-inca-troubleshooting.html", "title": "Troubleshoot ETAS Inca Operation", "tags": [], "chunk_text": "_ osc _ cal ',...'comments ', false ) ; close all open files bdclose ( model ) ; n - d lookup table | coder. asap2. export", "token_count": 44, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "7ab5deb5451feba1848fef445576a5bb_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/vector-canape-troubleshooting.html", "title": "Troubleshoot Vector CANape Operation", "tags": [], "chunk_text": "troubleshoot vector canape operation a third - party calibration tool ( vector canape® ) is not working with the real - time application. what this issue means you can use the vector canape tool to view signals and tune parameters in the real - time application. for more information, see the steps in prepare asap2 data description file. in addition to the limitations listed in vector canape limitations, there are various issues that can prevent the operation of this tool. try this workaround for vector canape tool issues, try these workarounds. simulation data inspector in use simulation data inspector and the third - party", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "7ab5deb5451feba1848fef445576a5bb_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/vector-canape-troubleshooting.html", "title": "Troubleshoot Vector CANape Operation", "tags": [], "chunk_text": "tool. try this workaround for vector canape tool issues, try these workarounds. simulation data inspector in use simulation data inspector and the third - party calibration tools ( vector canape and etas® inca ) are mutually exclusive. if you use the simulation data inspector to view signal data, you cannot use the calibration tools. if you use the calibration tools, you cannot use the simulation data inspector to view signal data. client cannot connect check the ip address of the speedgoat® target computer associated with the model and compare it to the address stored in the asap2 file. asa", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "7ab5deb5451feba1848fef445576a5bb_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/vector-canape-troubleshooting.html", "title": "Troubleshoot Vector CANape Operation", "tags": [], "chunk_text": "connect check the ip address of the speedgoat® target computer associated with the model and compare it to the address stored in the asap2 file. asap2 file out of date when you rebuild a simulink® real - time™ application, update the asap2 file loaded in the calibration tool with the new version of the file. the asap2 file is valid only until the next time that you build the application. frequently selected 1. region 2. language putting engineers in the fast lane vector in a nutshell on your marks. really a tough guy. our defense against cyber attacks. it", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "7ab5deb5451feba1848fef445576a5bb_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/vector-canape-troubleshooting.html", "title": "Troubleshoot Vector CANape Operation", "tags": [], "chunk_text": ". region 2. language putting engineers in the fast lane vector in a nutshell on your marks. really a tough guy. our defense against cyber attacks. it ’ s good if your software runs. even better if it conquers every challenge. during development everyone is in the same boat. finally. follow the racing line. even when developing. the right equipment. for every game. cookie information strictly necessary cookies functional cookies performance cookies targeting cookies vendors list vector canape limitations for vector canape®, the simulink® real - time™ software does not support : connecting matlab® to the target computer while using vector can", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "7ab5deb5451feba1848fef445576a5bb_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/vector-canape-troubleshooting.html", "title": "Troubleshoot Vector CANape Operation", "tags": [], "chunk_text": "for vector canape®, the simulink® real - time™ software does not support : connecting matlab® to the target computer while using vector canape. loading, starting, or stopping the real - time application by using vector canape commands. to load, start, or stop the real - time application on the target computer, use the target computer command - line interface. for example : slrealtime load - - appname app _ name slrealtime start slrealtime stop for more information, see target computer command - line interface. vector canape flash programming. multiple simultaneous vector canape connections to a", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "7ab5deb5451feba1848fef445576a5bb_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/vector-canape-troubleshooting.html", "title": "Troubleshoot Vector CANape Operation", "tags": [], "chunk_text": "##time start slrealtime stop for more information, see target computer command - line interface. vector canape flash programming. multiple simultaneous vector canape connections to a single target computer. event mode data acquisition has the following limitations : every piece of data that the simulink real - time software adds to the event list slows the real - time application. the amount of data that you can observe depends on the model sample time and the speed of the target computer. it is possible to overload the target computer cpu to where data integrity is reduced. you can trace only signals and scalar parameters. you cannot trace vector parameters.", "token_count": 128, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "bac24d1b67a99136baf5237dd849e86b_0", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-cannot-load-shared-object-on-target-computer.html", "title": "Troubleshoot Cannot Load Shared Object on Target Computer", "tags": [], "chunk_text": "troubleshoot cannot load shared object on target computer when loading and running on the target computer a real - time application that depends on a shared object (. so ), the real - time application cannot run and load the library. in the system log, a message like this error appears : ldd : fatal : could not load library xyz. so what this issue means an error loading a shared object can indicate some issue with missing or corrupt library dependencies on the target computer. the issue could be : the download to the speedgoat® target computer has modified or has removed some required files on the target computer. the", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "bac24d1b67a99136baf5237dd849e86b_1", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-cannot-load-shared-object-on-target-computer.html", "title": "Troubleshoot Cannot Load Shared Object on Target Computer", "tags": [], "chunk_text": "target computer. the issue could be : the download to the speedgoat® target computer has modified or has removed some required files on the target computer. the download to the target computer put the library in a location that is not accessible when the real - time application runs. try this workaround these workarounds explore the possible issues. check for issues with required files to check for this issue, connect to the target computer, and then try to build, load, and run example model slrt _ ex _ osc. if working with the default target computer, in the matlab® command window, type : tg", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "bac24d1b67a99136baf5237dd849e86b_2", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-cannot-load-shared-object-on-target-computer.html", "title": "Troubleshoot Cannot Load Shared Object on Target Computer", "tags": [], "chunk_text": "and run example model slrt _ ex _ osc. if working with the default target computer, in the matlab® command window, type : tg = slrealtime ; connect ( tg ) ; openexample ('slrealtime / slrtaddioblockstosimulinkmodelexample') ; open _ system ('slrt _ ex _ osc') ; slbuild ('slrt _ ex _ osc') ; load ('slrt _ ex _ osc') ; start ('slrt _ ex _ osc')", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "bac24d1b67a99136baf5237dd849e86b_3", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-cannot-load-shared-object-on-target-computer.html", "title": "Troubleshoot Cannot Load Shared Object on Target Computer", "tags": [], "chunk_text": "ex _ osc') ; load ('slrt _ ex _ osc') ; start ('slrt _ ex _ osc') ; if you can successfully connect to the target computer and build, load, and run the real - time application, there is no issue with files from the simulink real - time target support package on the target computer. if you cannot complete those operations successfully, update the target computer software by using the force option. if working with the default target computer, in the matlab command window, type : update ( tg,'force ', true ) ; after", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "bac24d1b67a99136baf5237dd849e86b_4", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-cannot-load-shared-object-on-target-computer.html", "title": "Troubleshoot Cannot Load Shared Object on Target Computer", "tags": [], "chunk_text": "option. if working with the default target computer, in the matlab command window, type : update ( tg,'force ', true ) ; after the software update, connect to the target computer and try to build, load, and run the real - time application.. check location of shared object on target computer to check for this issue, use ssh or ftp to examine the location of the shared object file on the target computer. for more information, see execute target computer rtos commands at target computer command line. after you build the real - time application that links to a shared object, you must install", "token_count": 126, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "bac24d1b67a99136baf5237dd849e86b_5", "source_url": "https://in.mathworks.com/help/slrealtime/ug/troubleshoot-cannot-load-shared-object-on-target-computer.html", "title": "Troubleshoot Cannot Load Shared Object on Target Computer", "tags": [], "chunk_text": ", see execute target computer rtos commands at target computer command line. after you build the real - time application that links to a shared object, you must install the real - time application and the shared object on the target computer. put the shared objects in a location on the target computer where they can be found and loaded at run time. the recommended locations are / lib, / usr / lib, or / usr / local / lib. root access is required to copy or modify files in these locations. update | slrealtime. getsupportinfo", "token_count": 117, "timestamp": "2025-05-03T15:00:08Z"}
{"chunk_id": "e1333720ce3c0251af43b77846be9b6f_0", "source_url": "https://www.mathworks.com/support/search.html", "title": "MathWorks Help Center website", "tags": [], "chunk_text": "mathworks help center website category clear resource clear source clear status clear filtering is not supported for ai generated responses. to narrow down the generated response, rewrite your search phrase to include more specific information. sources related searches", "token_count": 43, "timestamp": "2025-05-03T15:00:08Z"}
